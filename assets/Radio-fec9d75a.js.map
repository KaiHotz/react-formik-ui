{"version":3,"file":"Radio-fec9d75a.js","sources":["../../src/components/Radio/Radio.tsx"],"sourcesContent":["import React, { FC, CSSProperties, ReactNode } from 'react';\nimport { useField } from 'formik';\nimport cx from 'clsx';\n\nimport WithLabel from '../WithLabel';\n\nexport interface IFormikUiRadioOption {\n  label: string;\n  value: string | number;\n}\n\nexport interface IFormikUiRadioProps {\n  /** Sets the Name of the Radio Fields */\n  name: string;\n  /** Array in the shape of [ { value: string or number, label: string } ] */\n  options: IFormikUiRadioOption[];\n  /** Adds a custom class to each input element of the Radio component */\n  className?: string;\n  /** Adds a custom inline styles to the Radio input element */\n  style?: CSSProperties;\n  /** Disables the Radio Fields */\n  disabled?: boolean;\n  /** Sets the main Label for the Radio Fields */\n  label?: ReactNode;\n  /** Displays the radio option inline from left to right */\n  inline?: boolean;\n  /** Sets a hint text after/below the Radio component */\n  hint?: ReactNode;\n  /** Sets the field as requierd, if label is passed, an * is added to the end of the main label. Validation will only work if you pass the required() method in the yup validation schema */\n  required?: boolean;\n}\n\nexport const Radio: FC<IFormikUiRadioProps> = ({ disabled, name, options, inline, className, style, ...rest }) => {\n  const [{ value, onChange }] = useField(name);\n\n  return (\n    <div className={cx('radio-options', { inline })} data-testid=\"fui-radio\">\n      {options.map((option) => (\n        <div key={option.label} className=\"radio-option\">\n          <input\n            {...rest}\n            className={className}\n            style={style}\n            onChange={onChange}\n            checked={value === option.value}\n            id={`${name}-id-${option.value}`}\n            value={option.value}\n            name={name}\n            disabled={disabled}\n            type=\"radio\"\n            data-testid=\"fui-radio-item\"\n          />\n          <label htmlFor={`${name}-id-${option.value}`}>{option.label}</label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default WithLabel('radio')(Radio);\n"],"names":["Radio","disabled","name","options","inline","className","style","rest","value","onChange","useField","jsx","cx","option","jsxs","Radio$1","WithLabel"],"mappings":"wGAgCO,MAAAA,EAAA,CAAA,CAAA,SAAAC,EAAA,KAAAC,EAAA,QAAAC,EAAA,OAAAC,EAAA,UAAAC,EAAA,MAAAC,EAAA,GAAAC,KAAA,CACL,KAAA,CAAA,CAAA,MAAAC,EAAA,SAAAC,CAAA,CAAA,EAAAC,EAAAR,CAAA,EAEA,OAAAS,EAAA,MAAA,CAAA,UAAAC,EAAA,gBAAA,CAAA,OAAAR,EAAA,EAAA,cAAA,YAAA,SAAAD,EAAA,IAAAU,GAAAC,EAAA,MAAA,CAAA,UAAA,eAAA,SAAA,CAIQH,EAAA,QAAC,CAAA,GAAAJ,EACK,UAAAF,EACJ,MAAAC,EACA,SAAAG,EACA,QAAAD,IAAAK,EAAA,MAC0B,GAAA,GAAAX,CAAA,OAAAW,EAAA,KAAA,GACI,MAAAA,EAAA,MAChB,KAAAX,EACd,SAAAD,EACA,KAAA,QACK,cAAA,gBACO,CAAA,EACdU,EAAA,QAAA,CAAA,QAAA,GAAAT,CAAA,OAAAW,EAAA,KAAA,GAAA,SAAAA,EAAA,KAAA,CAAA,CAC4D,CAAA,EAAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAKtE,EAEAE,EAAAC,EAAA,OAAA,EAAAhB,CAAA"}