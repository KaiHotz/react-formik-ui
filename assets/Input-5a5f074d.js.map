{"version":3,"file":"Input-5a5f074d.js","sources":["../../src/components/Input/Input.tsx"],"sourcesContent":["import React, { FC, FocusEvent, AnimationEvent, CSSProperties, ReactNode } from 'react';\nimport { useField } from 'formik';\n\nimport WithLabel from '../WithLabel';\n\nexport interface IFormikUiInputProps {\n  /** @ignore */\n  onAnimationStart: (event: AnimationEvent<HTMLInputElement>) => void;\n  /** Sets the Name of the Input Field */\n  name: string;\n  /** Function that is called when entering the focus */\n  onFocus?: (event: FocusEvent<unknown>) => void;\n  /** Function that is called when leaving the focus */\n  onBlur?: (event: FocusEvent<unknown>) => void;\n  /** Adds a custom class to the input element of the Input component */\n  className?: string;\n  /** Adds a custom inline styles to the input element */\n  style?: CSSProperties;\n  /** Sets an Id for the Input Field, if not passed, the id will be the name */\n  id?: string;\n  /** Sets the main Label for the Input Field */\n  label?: ReactNode;\n  /** Sets the Placeholder text */\n  placeholder?: string;\n  /** Defines the type of the Input Filed */\n  type?: 'text' | 'color' | 'email' | 'hidden' | 'image' | 'number' | 'password' | 'range' | 'search' | 'tel' | 'url';\n  /** Disables the Input Field */\n  disabled?: boolean;\n  /** Sets a hint text after/below the Input Field */\n  hint?: ReactNode;\n  /** Sets the field as requierd, if label is passed, an * is added to the end of the main label. Validation will only work if you pass the required() method in the yup validation schema */\n  required?: boolean;\n}\n\nexport const Input: FC<IFormikUiInputProps> = ({\n  disabled,\n  id,\n  name,\n  placeholder,\n  type = 'text',\n  onAnimationStart,\n  onFocus,\n  onBlur,\n  className,\n  style,\n  ...rest\n}) => {\n  const [{ value, onChange }] = useField(name);\n\n  return (\n    <input\n      {...rest}\n      value={value}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      id={id || name}\n      name={name}\n      className={className}\n      style={style}\n      type={type}\n      onAnimationStart={onAnimationStart}\n      placeholder={placeholder}\n      disabled={disabled}\n      data-testid=\"fui-input\"\n    />\n  );\n};\n\nexport default WithLabel('input')(Input);\n"],"names":["Input","disabled","id","name","placeholder","type","onAnimationStart","onFocus","onBlur","className","style","rest","value","onChange","useField","jsx","Input$1","WithLabel"],"mappings":"0FAkCO,MAAAA,EAAA,CAAA,CAAwC,SAAAC,EAC7C,GAAAC,EACA,KAAAC,EACA,YAAAC,EACA,KAAAC,EAAA,OACO,iBAAAC,EACP,QAAAC,EACA,OAAAC,EACA,UAAAC,EACA,MAAAC,EACA,GAAAC,CAEF,IAAA,CACE,KAAA,CAAA,CAAA,MAAAC,EAAA,SAAAC,CAAA,CAAA,EAAAC,EAAAX,CAAA,EAEA,OAAAY,EACE,QAAC,CAAA,GAAAJ,EACK,MAAAC,EACJ,SAAAC,EACA,QAAAN,EACA,OAAAC,EACA,GAAAN,GAAAC,EACU,KAAAA,EACV,UAAAM,EACA,MAAAC,EACA,KAAAL,EACA,iBAAAC,EACA,YAAAF,EACA,SAAAH,EACA,cAAA,WACY,CAAA,CAGlB,EAEAe,EAAAC,EAAA,OAAA,EAAAjB,CAAA"}