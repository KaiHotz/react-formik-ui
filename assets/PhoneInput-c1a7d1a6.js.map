{"version":3,"file":"PhoneInput-c1a7d1a6.js","sources":["../../node_modules/react-country-flag/dist/react-country-flag.esm.js","../../node_modules/libphonenumber-js/metadata.min.json.js","../../node_modules/libphonenumber-js/min/exports/withMetadataArgument.js","../../node_modules/libphonenumber-js/es6/ParseError.js","../../node_modules/libphonenumber-js/es6/constants.js","../../node_modules/libphonenumber-js/es6/tools/semver-compare.js","../../node_modules/libphonenumber-js/es6/metadata.js","../../node_modules/libphonenumber-js/es6/helpers/extension/createExtensionPattern.js","../../node_modules/libphonenumber-js/es6/helpers/isViablePhoneNumber.js","../../node_modules/libphonenumber-js/es6/helpers/extension/extractExtension.js","../../node_modules/libphonenumber-js/es6/helpers/parseDigits.js","../../node_modules/libphonenumber-js/es6/parseIncompletePhoneNumber.js","../../node_modules/libphonenumber-js/es6/helpers/mergeArrays.js","../../node_modules/libphonenumber-js/es6/helpers/checkNumberLength.js","../../node_modules/libphonenumber-js/es6/isPossible.js","../../node_modules/libphonenumber-js/es6/helpers/matchesEntirely.js","../../node_modules/libphonenumber-js/es6/helpers/getNumberType.js","../../node_modules/libphonenumber-js/es6/isValid.js","../../node_modules/libphonenumber-js/es6/helpers/getPossibleCountriesForNumber.js","../../node_modules/libphonenumber-js/es6/helpers/applyInternationalSeparatorStyle.js","../../node_modules/libphonenumber-js/es6/helpers/formatNationalNumberUsingFormat.js","../../node_modules/libphonenumber-js/es6/helpers/getIddPrefix.js","../../node_modules/libphonenumber-js/es6/helpers/RFC3966.js","../../node_modules/libphonenumber-js/es6/format.js","../../node_modules/libphonenumber-js/es6/PhoneNumber.js","../../node_modules/libphonenumber-js/es6/helpers/stripIddPrefix.js","../../node_modules/libphonenumber-js/es6/helpers/extractNationalNumberFromPossiblyIncompleteNumber.js","../../node_modules/libphonenumber-js/es6/helpers/extractNationalNumber.js","../../node_modules/libphonenumber-js/es6/helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js","../../node_modules/libphonenumber-js/es6/helpers/extractCountryCallingCode.js","../../node_modules/libphonenumber-js/es6/helpers/getCountryByNationalNumber.js","../../node_modules/libphonenumber-js/es6/helpers/getCountryByCallingCode.js","../../node_modules/libphonenumber-js/es6/helpers/extractPhoneContext.js","../../node_modules/libphonenumber-js/es6/helpers/extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js","../../node_modules/libphonenumber-js/es6/parse.js","../../node_modules/libphonenumber-js/es6/parsePhoneNumberWithError_.js","../../node_modules/libphonenumber-js/es6/normalizeArguments.js","../../node_modules/libphonenumber-js/es6/parsePhoneNumber_.js","../../node_modules/libphonenumber-js/es6/parsePhoneNumber.js","../../node_modules/libphonenumber-js/es6/findNumbers/LRUCache.js","../../node_modules/libphonenumber-js/es6/findNumbers/RegExpCache.js","../../node_modules/libphonenumber-js/es6/findNumbers/util.js","../../node_modules/libphonenumber-js/es6/findNumbers/utf-8.js","../../node_modules/libphonenumber-js/es6/findNumbers/matchPhoneNumberStringAgainstPhoneNumber.js","../../node_modules/libphonenumber-js/es6/findNumbers/Leniency.js","../../node_modules/libphonenumber-js/es6/findNumbers/parsePreCandidate.js","../../node_modules/libphonenumber-js/es6/findNumbers/isValidPreCandidate.js","../../node_modules/libphonenumber-js/es6/findNumbers/isValidCandidate.js","../../node_modules/libphonenumber-js/es6/PhoneNumberMatcher.js","../../node_modules/libphonenumber-js/es6/findPhoneNumbersInText.js","../../node_modules/libphonenumber-js/min/exports/parsePhoneNumber.js","../../node_modules/libphonenumber-js/min/exports/findPhoneNumbersInText.js","../../node_modules/immer/dist/immer.mjs","../../node_modules/react-phonenr-input/dist/esm/index.js","../../src/components/PhoneInput/PhoneInput.tsx"],"sourcesContent":["import { createElement } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nvar _excluded = [\"cdnSuffix\", \"cdnUrl\", \"countryCode\", \"style\", \"svg\"];\nvar DEFAULT_CDN_URL = 'https://cdn.jsdelivr.net/gh/lipis/flag-icons/flags/4x3/';\nvar DEFAULT_CDN_SUFFIX = 'svg';\n// offset between uppercase ascii and regional indicator symbols\nvar OFFSET = 127397;\nvar ReactCountryFlag = function ReactCountryFlag(_ref) {\n  var _ref$cdnSuffix = _ref.cdnSuffix,\n    cdnSuffix = _ref$cdnSuffix === void 0 ? DEFAULT_CDN_SUFFIX : _ref$cdnSuffix,\n    _ref$cdnUrl = _ref.cdnUrl,\n    cdnUrl = _ref$cdnUrl === void 0 ? DEFAULT_CDN_URL : _ref$cdnUrl,\n    countryCode = _ref.countryCode,\n    style = _ref.style,\n    _ref$svg = _ref.svg,\n    svg = _ref$svg === void 0 ? false : _ref$svg,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (typeof countryCode !== 'string') {\n    return null;\n  }\n  if (svg) {\n    var flagUrl = \"\" + cdnUrl + countryCode.toLowerCase() + \".\" + cdnSuffix;\n    return createElement(\"img\", Object.assign({}, props, {\n      src: flagUrl,\n      style: _extends({\n        display: 'inline-block',\n        width: '1em',\n        height: '1em',\n        verticalAlign: 'middle'\n      }, style)\n    }));\n  }\n  var emoji = countryCode.toUpperCase().replace(/./g, function (_char) {\n    return String.fromCodePoint(_char.charCodeAt(0) + OFFSET);\n  });\n  return createElement(\"span\", Object.assign({\n    role: \"img\"\n  }, props, {\n    style: _extends({\n      display: 'inline-block',\n      fontSize: '1em',\n      lineHeight: '1em',\n      verticalAlign: 'middle'\n    }, style)\n  }), emoji);\n};\n\nexport default ReactCountryFlag;\nexport { ReactCountryFlag };\n//# sourceMappingURL=react-country-flag.esm.js.map\n","// This file is a workaround for a bug in web browsers' \"native\"\n// ES6 importing system which is uncapable of importing \"*.json\" files.\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\nexport default {\"version\":4,\"country_calling_codes\":{\"1\":[\"US\",\"AG\",\"AI\",\"AS\",\"BB\",\"BM\",\"BS\",\"CA\",\"DM\",\"DO\",\"GD\",\"GU\",\"JM\",\"KN\",\"KY\",\"LC\",\"MP\",\"MS\",\"PR\",\"SX\",\"TC\",\"TT\",\"VC\",\"VG\",\"VI\"],\"7\":[\"RU\",\"KZ\"],\"20\":[\"EG\"],\"27\":[\"ZA\"],\"30\":[\"GR\"],\"31\":[\"NL\"],\"32\":[\"BE\"],\"33\":[\"FR\"],\"34\":[\"ES\"],\"36\":[\"HU\"],\"39\":[\"IT\",\"VA\"],\"40\":[\"RO\"],\"41\":[\"CH\"],\"43\":[\"AT\"],\"44\":[\"GB\",\"GG\",\"IM\",\"JE\"],\"45\":[\"DK\"],\"46\":[\"SE\"],\"47\":[\"NO\",\"SJ\"],\"48\":[\"PL\"],\"49\":[\"DE\"],\"51\":[\"PE\"],\"52\":[\"MX\"],\"53\":[\"CU\"],\"54\":[\"AR\"],\"55\":[\"BR\"],\"56\":[\"CL\"],\"57\":[\"CO\"],\"58\":[\"VE\"],\"60\":[\"MY\"],\"61\":[\"AU\",\"CC\",\"CX\"],\"62\":[\"ID\"],\"63\":[\"PH\"],\"64\":[\"NZ\"],\"65\":[\"SG\"],\"66\":[\"TH\"],\"81\":[\"JP\"],\"82\":[\"KR\"],\"84\":[\"VN\"],\"86\":[\"CN\"],\"90\":[\"TR\"],\"91\":[\"IN\"],\"92\":[\"PK\"],\"93\":[\"AF\"],\"94\":[\"LK\"],\"95\":[\"MM\"],\"98\":[\"IR\"],\"211\":[\"SS\"],\"212\":[\"MA\",\"EH\"],\"213\":[\"DZ\"],\"216\":[\"TN\"],\"218\":[\"LY\"],\"220\":[\"GM\"],\"221\":[\"SN\"],\"222\":[\"MR\"],\"223\":[\"ML\"],\"224\":[\"GN\"],\"225\":[\"CI\"],\"226\":[\"BF\"],\"227\":[\"NE\"],\"228\":[\"TG\"],\"229\":[\"BJ\"],\"230\":[\"MU\"],\"231\":[\"LR\"],\"232\":[\"SL\"],\"233\":[\"GH\"],\"234\":[\"NG\"],\"235\":[\"TD\"],\"236\":[\"CF\"],\"237\":[\"CM\"],\"238\":[\"CV\"],\"239\":[\"ST\"],\"240\":[\"GQ\"],\"241\":[\"GA\"],\"242\":[\"CG\"],\"243\":[\"CD\"],\"244\":[\"AO\"],\"245\":[\"GW\"],\"246\":[\"IO\"],\"247\":[\"AC\"],\"248\":[\"SC\"],\"249\":[\"SD\"],\"250\":[\"RW\"],\"251\":[\"ET\"],\"252\":[\"SO\"],\"253\":[\"DJ\"],\"254\":[\"KE\"],\"255\":[\"TZ\"],\"256\":[\"UG\"],\"257\":[\"BI\"],\"258\":[\"MZ\"],\"260\":[\"ZM\"],\"261\":[\"MG\"],\"262\":[\"RE\",\"YT\"],\"263\":[\"ZW\"],\"264\":[\"NA\"],\"265\":[\"MW\"],\"266\":[\"LS\"],\"267\":[\"BW\"],\"268\":[\"SZ\"],\"269\":[\"KM\"],\"290\":[\"SH\",\"TA\"],\"291\":[\"ER\"],\"297\":[\"AW\"],\"298\":[\"FO\"],\"299\":[\"GL\"],\"350\":[\"GI\"],\"351\":[\"PT\"],\"352\":[\"LU\"],\"353\":[\"IE\"],\"354\":[\"IS\"],\"355\":[\"AL\"],\"356\":[\"MT\"],\"357\":[\"CY\"],\"358\":[\"FI\",\"AX\"],\"359\":[\"BG\"],\"370\":[\"LT\"],\"371\":[\"LV\"],\"372\":[\"EE\"],\"373\":[\"MD\"],\"374\":[\"AM\"],\"375\":[\"BY\"],\"376\":[\"AD\"],\"377\":[\"MC\"],\"378\":[\"SM\"],\"380\":[\"UA\"],\"381\":[\"RS\"],\"382\":[\"ME\"],\"383\":[\"XK\"],\"385\":[\"HR\"],\"386\":[\"SI\"],\"387\":[\"BA\"],\"389\":[\"MK\"],\"420\":[\"CZ\"],\"421\":[\"SK\"],\"423\":[\"LI\"],\"500\":[\"FK\"],\"501\":[\"BZ\"],\"502\":[\"GT\"],\"503\":[\"SV\"],\"504\":[\"HN\"],\"505\":[\"NI\"],\"506\":[\"CR\"],\"507\":[\"PA\"],\"508\":[\"PM\"],\"509\":[\"HT\"],\"590\":[\"GP\",\"BL\",\"MF\"],\"591\":[\"BO\"],\"592\":[\"GY\"],\"593\":[\"EC\"],\"594\":[\"GF\"],\"595\":[\"PY\"],\"596\":[\"MQ\"],\"597\":[\"SR\"],\"598\":[\"UY\"],\"599\":[\"CW\",\"BQ\"],\"670\":[\"TL\"],\"672\":[\"NF\"],\"673\":[\"BN\"],\"674\":[\"NR\"],\"675\":[\"PG\"],\"676\":[\"TO\"],\"677\":[\"SB\"],\"678\":[\"VU\"],\"679\":[\"FJ\"],\"680\":[\"PW\"],\"681\":[\"WF\"],\"682\":[\"CK\"],\"683\":[\"NU\"],\"685\":[\"WS\"],\"686\":[\"KI\"],\"687\":[\"NC\"],\"688\":[\"TV\"],\"689\":[\"PF\"],\"690\":[\"TK\"],\"691\":[\"FM\"],\"692\":[\"MH\"],\"850\":[\"KP\"],\"852\":[\"HK\"],\"853\":[\"MO\"],\"855\":[\"KH\"],\"856\":[\"LA\"],\"880\":[\"BD\"],\"886\":[\"TW\"],\"960\":[\"MV\"],\"961\":[\"LB\"],\"962\":[\"JO\"],\"963\":[\"SY\"],\"964\":[\"IQ\"],\"965\":[\"KW\"],\"966\":[\"SA\"],\"967\":[\"YE\"],\"968\":[\"OM\"],\"970\":[\"PS\"],\"971\":[\"AE\"],\"972\":[\"IL\"],\"973\":[\"BH\"],\"974\":[\"QA\"],\"975\":[\"BT\"],\"976\":[\"MN\"],\"977\":[\"NP\"],\"992\":[\"TJ\"],\"993\":[\"TM\"],\"994\":[\"AZ\"],\"995\":[\"GE\"],\"996\":[\"KG\"],\"998\":[\"UZ\"]},\"countries\":{\"AC\":[\"247\",\"00\",\"(?:[01589]\\\\d|[46])\\\\d{4}\",[5,6]],\"AD\":[\"376\",\"00\",\"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\",[6,8,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"[135-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]]],\"AE\":[\"971\",\"00\",\"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{2,9})\",\"$1 $2\",[\"60|8\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[236]|[479][2-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{5})\",\"$1 $2 $3\",[\"[479]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AF\":[\"93\",\"00\",\"[2-7]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"]],\"0\"],\"AG\":[\"1\",\"011\",\"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([457]\\\\d{6})$|1\",\"268$1\",0,\"268\"],\"AI\":[\"1\",\"011\",\"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2457]\\\\d{6})$|1\",\"264$1\",0,\"264\"],\"AL\":[\"355\",\"00\",\"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\",[6,7,8,9],[[\"(\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"80|9\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2358][2-5]|4\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[23578]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"]],\"0\"],\"AM\":[\"374\",\"00\",\"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]0\"],\"0 $1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2|3[12]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"1|47\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[3-9]\"],\"0$1\"]],\"0\"],\"AO\":[\"244\",\"00\",\"[29]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[29]\"]]]],\"AR\":[\"54\",\"00\",\"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\",[10,11],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\",\"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"1\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[68]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[23]\"],\"0$1\",1],[\"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9(?:2[2-469]|3[3-578])\",\"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\",\"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 15-$3-$4\",[\"91\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9\"],\"0$1\",0,\"$1 $2 $3-$4\"]],\"0\",0,\"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\",\"9$1\"],\"AS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\",[10],0,\"1\",0,\"([267]\\\\d{6})$|1\",\"684$1\",0,\"684\"],\"AT\":[\"43\",\"00\",\"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\",[4,5,6,7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3,12})\",\"$1 $2\",[\"1(?:11|[2-9])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})\",\"$1 $2\",[\"517\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"5[079]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,10})\",\"$1 $2\",[\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,9})\",\"$1 $2\",[\"[2-467]|5[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AU\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\",[5,6,7,8,9,10,12],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|4\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:30|[89])\"]]],\"0\",0,\"(183[12])|0\",0,0,0,[[\"(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\",[9]],[\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,[\"163\\\\d{2,6}\",[5,6,7,8,9]],[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"AW\":[\"297\",\"00\",\"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[25-9]\"]]]],\"AX\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\",[5,6,7,8,9,10,11,12],0,\"0\",0,0,0,0,\"18\",0,\"00\"],\"AZ\":[\"994\",\"00\",\"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[28]|2|365|46\",\"1[28]|2|365[45]|46\",\"1[28]|2|365(?:4|5[02])|46\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[13-9]\"],\"0$1\"]],\"0\"],\"BA\":[\"387\",\"00\",\"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[1-3]|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2-$3\",[\"[3-5]|6[56]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\"]],\"0\"],\"BB\":[\"1\",\"011\",\"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"246$1\",0,\"246\"],\"BD\":[\"880\",\"00\",\"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1-$2\",[\"31[5-8]|[459]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1-$2\",[\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,6})\",\"$1-$2\",[\"[13-9]|22\"],\"0$1\"],[\"(\\\\d)(\\\\d{7,8})\",\"$1-$2\",[\"2\"],\"0$1\"]],\"0\"],\"BE\":[\"32\",\"00\",\"4\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:80|9)0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[239]|4[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[15-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4\"],\"0$1\"]],\"0\"],\"BF\":[\"226\",\"00\",\"[025-7]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[025-7]\"]]]],\"BG\":[\"359\",\"00\",\"00800\\\\d{7}|[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\",[6,7,8,9,12],[[\"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"43[1-6]|70[1-9]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:70|8)0\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"43[1-7]|7\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[48]|9[08]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"BH\":[\"973\",\"00\",\"[136-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[13679]|8[02-4679]\"]]]],\"BI\":[\"257\",\"00\",\"(?:[267]\\\\d|31)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2367]\"]]]],\"BJ\":[\"229\",\"00\",\"[24-689]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-689]\"]]]],\"BL\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:2[7-9]|3[3-7]|5[12]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:395|76[018])\\\\d|475[0-5])\\\\d{4}\"]]],\"BM\":[\"1\",\"011\",\"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"441$1\",0,\"441\"],\"BN\":[\"673\",\"00\",\"[2-578]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-578]\"]]]],\"BO\":[\"591\",\"00(?:1\\\\d)?\",\"(?:[2-467]\\\\d\\\\d|8001)\\\\d{5}\",[8,9],[[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[23]|4[46]\"]],[\"(\\\\d{8})\",\"$1\",[\"[67]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\",0,\"0(1\\\\d)?\"],\"BQ\":[\"599\",\"00\",\"(?:[34]1|7\\\\d)\\\\d{5}\",[7],0,0,0,0,0,0,\"[347]\"],\"BR\":[\"55\",\"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\",\"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-46-9]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\",[8,9,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"300|4(?:0[02]|37)\",\"4(?:02|37)0|[34]00\"]],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:[358]|90)0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1 $2-$3\",[\"[16][1-9]|[2-57-9]\"],\"($1)\"]],\"0\",0,\"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\",\"$2\"],\"BS\":[\"1\",\"011\",\"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([3-8]\\\\d{6})$|1\",\"242$1\",0,\"242\"],\"BT\":[\"975\",\"00\",\"[17]\\\\d{7}|[2-8]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-68]|7[246]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[67]|7\"]]]],\"BW\":[\"267\",\"00\",\"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[24-6]|3[15-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"BY\":[\"375\",\"810\",\"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"800\"],\"8 $1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\",\"$1 $2 $3\",[\"800\"],\"8 $1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\"$1 $2-$3\",[\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\",\"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"1(?:[56]|7[467])|2[1-3]\"],\"8 0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-4]\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"8 $1\"]],\"8\",0,\"0|80?\",0,0,0,0,\"8~10\"],\"BZ\":[\"501\",\"00\",\"(?:0800\\\\d|[2-8])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-8]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"0\"]]]],\"CA\":[\"1\",\"011\",\"(?:[2-8]\\\\d|90)\\\\d{8}|3\\\\d{6}\",[7,10],0,\"1\",0,0,0,0,0,[[\"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\",[10]],[\"\",[10]],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",[10]],[\"900[2-9]\\\\d{6}\",[10]],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[125-9]|33|44|66|77|88)|622)[2-9]\\\\d{6}\",[10]],0,[\"310\\\\d{4}\",[7]],0,[\"600[2-9]\\\\d{6}\",[10]]]],\"CC\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"([59]\\\\d{7})$|0\",\"8$1\",0,0,[[\"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\",[9]],[\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CD\":[\"243\",\"00\",\"[189]\\\\d{8}|[1-68]\\\\d{6}\",[7,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[1-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"CF\":[\"236\",\"00\",\"(?:[27]\\\\d{3}|8776)\\\\d{4}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[278]\"]]]],\"CG\":[\"242\",\"00\",\"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[02]\"]]]],\"CH\":[\"41\",\"00\",\"8\\\\d{11}|[2-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8[047]|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]|81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"8\"],\"0$1\"]],\"0\"],\"CI\":[\"225\",\"00\",\"[02]\\\\d{9}\",[10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\",\"$1 $2 $3 $4\",[\"2\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"0\"]]]],\"CK\":[\"682\",\"00\",\"[2-578]\\\\d{4}\",[5],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"[2-578]\"]]]],\"CL\":[\"56\",\"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\",\"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\",[9,10,11],[[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"219\",\"2196\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[1-36]\"],\"($1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"9[2-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"60|8\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"60\"]]]],\"CM\":[\"237\",\"00\",\"[26]\\\\d{8}|88\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"88\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[26]|88\"]]]],\"CN\":[\"86\",\"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\",\"1[127]\\\\d{8,9}|2\\\\d{9}(?:\\\\d{2})?|[12]\\\\d{6,7}|86\\\\d{6}|(?:1[03-689]\\\\d|6)\\\\d{7,9}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{6,9}\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5,6})\",\"$1 $2\",[\"(?:10|2[0-57-9])[19]\",\"(?:10|2[0-57-9])(?:10|9[56])\",\"10(?:10|9[56])|2[0-57-9](?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\",\"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\",\"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\",\"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:4|80)0\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|2(?:[02-57-9]|1[1-9])\",\"10|2(?:[02-57-9]|1[1-9])\",\"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-578]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"1[3-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"[12]\"],\"0$1\",1]],\"0\",0,\"(1(?:[12]\\\\d|79)\\\\d\\\\d)|0\",0,0,0,0,\"00\"],\"CO\":[\"57\",\"00(?:4(?:[14]4|56)|[579])\",\"(?:60\\\\d\\\\d|9101)\\\\d{6}|(?:1\\\\d|3)\\\\d{9}\",[10,11],[[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"6\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3[0-357]|91\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{7})\",\"$1-$2-$3\",[\"1\"],\"0$1\",0,\"$1 $2 $3\"]],\"0\",0,\"0(4(?:[14]4|56)|[579])?\"],\"CR\":[\"506\",\"00\",\"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\",[8,10],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[3-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[89]\"]]],0,0,\"(19(?:0[0-2468]|1[09]|20|66|77|99))\"],\"CU\":[\"53\",\"119\",\"[27]\\\\d{6,7}|[34]\\\\d{5,7}|63\\\\d{6}|(?:5|8\\\\d\\\\d)\\\\d{7}\",[6,7,8,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"2[1-4]|[34]\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{6,7})\",\"$1 $2\",[\"7\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[56]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"8\"],\"0$1\"]],\"0\"],\"CV\":[\"238\",\"0\",\"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"CW\":[\"599\",\"00\",\"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[3467]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9[4-8]\"]]],0,0,0,0,0,\"[69]\"],\"CX\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"([59]\\\\d{7})$|0\",\"8$1\",0,0,[[\"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\",[9]],[\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CY\":[\"357\",\"00\",\"(?:[279]\\\\d|[58]0)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[257-9]\"]]]],\"CZ\":[\"420\",\"00\",\"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]|9[015-7]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"96\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]]],\"DE\":[\"49\",\"00\",\"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|2[13]|31|[46][1-8])\\\\d{1,9}\",[4,5,6,7,8,9,10,11,12,13,14,15],[[\"(\\\\d{2})(\\\\d{3,13})\",\"$1 $2\",[\"3[02]|40|[68]9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,12})\",\"$1 $2\",[\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\",\"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2,11})\",\"$1 $2\",[\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\",\"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"138\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{2,10})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,11})\",\"$1 $2\",[\"181\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\",\"$1 $2 $3\",[\"1(?:3|80)|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"1[67]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,12})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"185\",\"1850\",\"18500\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"18[68]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"15[0568]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"15[1279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{8})\",\"$1 $2\",[\"18\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\",\"$1 $2 $3\",[\"1(?:6[023]|7)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{7})\",\"$1 $2 $3\",[\"15[279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{8})\",\"$1 $2 $3\",[\"15\"],\"0$1\"]],\"0\"],\"DJ\":[\"253\",\"00\",\"(?:2\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[27]\"]]]],\"DK\":[\"45\",\"00\",\"[2-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-9]\"]]]],\"DM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"767$1\",0,\"767\"],\"DO\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"8001|8[024]9\"],\"DZ\":[\"213\",\"00\",\"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-8]\"],\"0$1\"]],\"0\"],\"EC\":[\"593\",\"00\",\"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\",[8,9,10,11],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[2-7]\"],\"(0$1)\",0,\"$1-$2-$3\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"EE\":[\"372\",\"00\",\"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\",\"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]],[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[45]|8(?:00|[1-49])\",\"[45]|8(?:00[1-9]|[1-49])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"EG\":[\"20\",\"00\",\"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{7,8})\",\"$1 $2\",[\"[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,7})\",\"$1 $2\",[\"1[35]|[4-6]|8[2468]|9[235-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{8})\",\"$1 $2\",[\"1\"],\"0$1\"]],\"0\"],\"EH\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],0,\"0\",0,0,0,0,\"528[89]\"],\"ER\":[\"291\",\"00\",\"[178]\\\\d{6}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[178]\"],\"0$1\"]],\"0\"],\"ES\":[\"34\",\"00\",\"[5-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]00\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-9]\"]]]],\"ET\":[\"251\",\"00\",\"(?:11|[2-579]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-579]\"],\"0$1\"]],\"0\"],\"FI\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d)(\\\\d{4,9})\",\"$1 $2\",[\"[2568][1-8]|3(?:0[1-9]|[1-9])|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[12]00|[368]|70[07-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,8})\",\"$1 $2\",[\"[1245]|7[135]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,10})\",\"$1 $2\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,\"1[03-79]|[2-9]\",0,\"00\"],\"FJ\":[\"679\",\"0(?:0|52)\",\"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[235-9]|45\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]]],0,0,0,0,0,0,0,\"00\"],\"FK\":[\"500\",\"00\",\"[2-7]\\\\d{4}\",[5]],\"FM\":[\"691\",\"00\",\"(?:[39]\\\\d\\\\d|820)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[389]\"]]]],\"FO\":[\"298\",\"00\",\"[2-9]\\\\d{5}\",[6],[[\"(\\\\d{6})\",\"$1\",[\"[2-9]\"]]],0,0,\"(10(?:01|[12]0|88))\"],\"FR\":[\"33\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0 $1\"],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[1-79]\"],\"0$1\"]],\"0\"],\"GA\":[\"241\",\"00\",\"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"11|[67]\"],\"0$1\"]],0,0,\"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\",\"$1\"],\"GB\":[\"44\",\"00\",\"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\",[7,9,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"1(?:[2-69][02-9]|[78])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[25]|7(?:0|6[02-9])\",\"[25]|7(?:0|6(?:[03-9]|2[356]))\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1389]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0235])|4(?:[0-5]\\\\d\\\\d|69[7-9]|70[0-79])|(?:(?:5[0-26-9]|[78][0-49])\\\\d|6(?:[0-4]\\\\d|50))\\\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d|1(?:[0-7]\\\\d|8[0-2]))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d)\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\",[9,10]],[\"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]],0,\" x\"],\"GD\":[\"1\",\"011\",\"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"473$1\",0,\"473\"],\"GE\":[\"995\",\"00\",\"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"32\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[57]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[348]\"],\"0$1\"]],\"0\"],\"GF\":[\"594\",\"00\",\"[56]94\\\\d{6}|(?:80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[56]|9[47]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[89]\"],\"0$1\"]],\"0\"],\"GG\":[\"44\",\"00\",\"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\",[7,9,10],0,\"0\",0,\"([25-9]\\\\d{5})$|0\",\"1481$1\",0,0,[[\"1481[25-9]\\\\d{5}\",[10]],[\"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]]],\"GH\":[\"233\",\"00\",\"(?:[235]\\\\d{3}|800)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[235]\"],\"0$1\"]],\"0\"],\"GI\":[\"350\",\"00\",\"(?:[25]\\\\d|60)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2\"]]]],\"GL\":[\"299\",\"00\",\"(?:19|[2-689]\\\\d|70)\\\\d{4}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"19|[2-9]\"]]]],\"GM\":[\"220\",\"00\",\"[2-9]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"GN\":[\"224\",\"00\",\"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"3\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[67]\"]]]],\"GP\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1-9]|5[3-579]|[68][0-689]|7[08]|9\\\\d)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:395|76[018])\\\\d|475[0-5])\\\\d{4}\"]]],\"GQ\":[\"240\",\"00\",\"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235]\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[89]\"]]]],\"GR\":[\"30\",\"00\",\"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\",[10,11,12],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"21|7\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2689]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\",\"$1 $2 $3\",[\"8\"]]]],\"GT\":[\"502\",\"00\",\"(?:1\\\\d{3}|[2-7])\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"GU\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\",[10],0,\"1\",0,\"([3-9]\\\\d{6})$|1\",\"671$1\",0,\"671\"],\"GW\":[\"245\",\"00\",\"[49]\\\\d{8}|4\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"40\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"]]]],\"GY\":[\"592\",\"001\",\"9008\\\\d{3}|(?:[2-467]\\\\d\\\\d|862)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46-9]\"]]]],\"HK\":[\"852\",\"00(?:30|5[09]|[126-9]?)\",\"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\",[5,6,7,8,9,11],[[\"(\\\\d{3})(\\\\d{2,5})\",\"$1 $2\",[\"900\",\"9003\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]],0,0,0,0,0,0,0,\"00\"],\"HN\":[\"504\",\"00\",\"8\\\\d{10}|[237-9]\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[237-9]\"]]]],\"HR\":[\"385\",\"00\",\"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"6[01]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-5]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"HT\":[\"509\",\"00\",\"(?:[2-489]\\\\d|55)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"HU\":[\"36\",\"00\",\"[235-7]\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"06 $1\"]],\"06\"],\"ID\":[\"62\",\"00[89]\",\"(?:(?:00[1-9]|8\\\\d)\\\\d{4}|[1-36])\\\\d{6}|00\\\\d{10}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\",[7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"15\"]],[\"(\\\\d{2})(\\\\d{5,9})\",\"$1 $2\",[\"2[124]|[36]1\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,7})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,8})\",\"$1 $2\",[\"[2-79]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\",\"$1-$2-$3\",[\"8[1-35-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6,8})\",\"$1 $2\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"804\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"80\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"]],\"0\"],\"IE\":[\"353\",\"00\",\"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"2[24-9]|47|58|6[237-9]|9[35-9]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[45]0\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2569]|4[1-69]|7[14]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"81\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"IL\":[\"972\",\"0(?:0|1[2-9])\",\"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\",[7,8,9,10,11,12],[[\"(\\\\d{4})(\\\\d{3})\",\"$1-$2\",[\"125\"]],[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"121\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[2-489]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"12\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1-$2\",[\"159\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"1[7-9]\"]],[\"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3-$4\",[\"15\"]]],\"0\"],\"IM\":[\"44\",\"00\",\"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"([25-8]\\\\d{5})$|0\",\"1624$1\",0,\"74576|(?:16|7[56])24\"],\"IN\":[\"91\",\"00\",\"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\",[8,9,10,11,12,13],[[\"(\\\\d{8})\",\"$1\",[\"5(?:0|2[23]|3[03]|[67]1|88)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"],0,1],[\"(\\\\d{4})(\\\\d{4,5})\",\"$1 $2\",[\"180\",\"1800\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"140\"],0,1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\",\"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\",\"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\",\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\",\"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"],\"0$1\",1],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"[6-9]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:6|8[06])\",\"1(?:6|8[06]0)\"],0,1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"18\"],0,1]],\"0\"],\"IO\":[\"246\",\"00\",\"3\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"3\"]]]],\"IQ\":[\"964\",\"00\",\"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"IR\":[\"98\",\"00\",\"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\",[4,5,6,7,10],[[\"(\\\\d{4,5})\",\"$1\",[\"96\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,5})\",\"$1 $2\",[\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-8]\"],\"0$1\"]],\"0\"],\"IS\":[\"354\",\"00|1(?:0(?:01|[12]0)|100)\",\"(?:38\\\\d|[4-9])\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,0,\"00\"],\"IT\":[\"39\",\"00\",\"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\",[6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"0[26]\"]],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\",\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]],[\"(\\\\d{4})(\\\\d{2,6})\",\"$1 $2\",[\"0(?:[13-579][2-46-8]|8[236-8])\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"894\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[26]|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1(?:44|[679])|[378]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][0159]|14\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{5})\",\"$1 $2 $3\",[\"0[26]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,[[\"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\"],[\"3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\",[9,10]],[\"80(?:0\\\\d{3}|3)\\\\d{3}\",[6,9]],[\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\",[6,8,9,10]],[\"1(?:78\\\\d|99)\\\\d{6}\",[9,10]],0,0,0,[\"55\\\\d{8}\",[10]],[\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",[6,9]]]],\"JE\":[\"44\",\"00\",\"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"([0-24-8]\\\\d{5})$|0\",\"1534$1\",0,0,[[\"1534[0-24-8]\\\\d{5}\"],[\"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97[7-9]))\\\\d{5}\"],[\"80(?:07(?:35|81)|8901)\\\\d{4}\"],[\"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\"],[\"701511\\\\d{4}\"],0,[\"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\"],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\"],[\"56\\\\d{8}\"]]],\"JM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"658|876\"],\"JO\":[\"962\",\"00\",\"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2356]|87\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"70\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"JP\":[\"81\",\"010\",\"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\",[8,9,10,11,12,13,14,15,16,17],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"(?:12|57|99)0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[36]|4(?:2[09]|7[01])\",\"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3\",[\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"800\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[257-9]\"],\"0$1\"]],\"0\",0,\"(000[259]\\\\d{6})$|(?:(?:003768)0?)|0\",\"$1\"],\"KE\":[\"254\",\"000\",\"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"[24-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[17]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"KG\":[\"996\",\"00\",\"8\\\\d{9}|[235-9]\\\\d{8}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3(?:1[346]|[24-79])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235-79]|88\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"KH\":[\"855\",\"00[14-9]\",\"1\\\\d{9}|[1-9]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"KI\":[\"686\",\"00\",\"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\",[5,8],0,\"0\"],\"KM\":[\"269\",\"00\",\"[3478]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[3478]\"]]]],\"KN\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"869$1\",0,\"869\"],\"KP\":[\"850\",\"00|99\",\"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\",[8,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"KR\":[\"82\",\"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\",\"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\",[5,6,8,9,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1-$2\",[\"(?:3[1-3]|[46][1-4]|5[1-5])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"1\"]],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"[1346]|5[1-5]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1-$2-$3\",[\"5\"],\"0$1\"]],\"0\",0,\"0(8(?:[1-46-8]|5\\\\d\\\\d))?\"],\"KW\":[\"965\",\"00\",\"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[169]|2(?:[235]|4[1-35-9])|52\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[245]\"]]]],\"KY\":[\"1\",\"011\",\"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"345$1\",0,\"345\"],\"KZ\":[\"7\",\"810\",\"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\",[10,14],0,\"8\",0,0,0,0,\"33|7\",0,\"8~10\"],\"LA\":[\"856\",\"00\",\"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2[13]|3[14]|[4-8]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"30[013-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\"],\"LB\":[\"961\",\"00\",\"[27-9]\\\\d{7}|[13-9]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27-9]\"]]],\"0\"],\"LC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-8]\\\\d{6})$|1\",\"758$1\",0,\"758\"],\"LI\":[\"423\",\"00\",\"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\",[7,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2379]|8(?:0[09]|7)\",\"[2379]|8(?:0(?:02|9)|7)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"69\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]],\"0\",0,\"(1001)|0\"],\"LK\":[\"94\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[1-689]\"],\"0$1\"]],\"0\"],\"LR\":[\"231\",\"00\",\"(?:[25]\\\\d|33|77|88)\\\\d{7}|(?:2\\\\d|[4-6])\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[4-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23578]\"],\"0$1\"]],\"0\"],\"LS\":[\"266\",\"00\",\"(?:[256]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2568]\"]]]],\"LT\":[\"370\",\"00\",\"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"52[0-7]\"],\"(8-$1)\",1],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"8 $1\",1],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"37|4(?:[15]|6[1-8])\"],\"(8-$1)\",1],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[3-6]\"],\"(8-$1)\",1]],\"8\",0,\"[08]\"],\"LU\":[\"352\",\"00\",\"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\",[4,5,6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"20[2-689]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"80[01]|90[015]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"20\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4 $5\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\",\"$1 $2 $3 $4\",[\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"]]],0,0,\"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\"],\"LV\":[\"371\",\"00\",\"(?:[268]\\\\d|90)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[269]|8[01]\"]]]],\"LY\":[\"218\",\"00\",\"[2-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MA\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],[[\"(\\\\d{5})(\\\\d{4})\",\"$1-$2\",[\"5(?:29|38)\",\"5(?:29[1289]|389)\",\"529(?:1[1-46-9]|2[013-8]|90)|5(?:298|389)[0-46-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5[45]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1-$2\",[\"5(?:2[2-489]|3[5-9]|9)|892\",\"5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"8\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1-$2\",[\"[5-7]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"5293[01]\\\\d{4}|5(?:2(?:[0-25-7]\\\\d|3[1-578]|4[02-46-8]|8[0235-7]|9[0-289])|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[0189]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\"],[\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[017]\\\\d|2[0-2]|6[0-8]|8[0-3]))\\\\d{6}\"],[\"80\\\\d{7}\"],[\"89\\\\d{7}\"],0,0,0,0,[\"592(?:4[0-2]|93)\\\\d{4}\"]]],\"MC\":[\"377\",\"00\",\"(?:[3489]|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[389]\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"6\"],\"0$1\"]],\"0\"],\"MD\":[\"373\",\"00\",\"(?:[235-7]\\\\d|[89]0)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"22|3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[25-7]\"],\"0$1\"]],\"0\"],\"ME\":[\"382\",\"00\",\"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MF\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:0[079]|[14]3|[27][79]|3[03-7]|5[0-268]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:395|76[018])\\\\d|475[0-5])\\\\d{4}\"]]],\"MG\":[\"261\",\"00\",\"[23]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\",0,\"([24-9]\\\\d{6})$|0\",\"20$1\"],\"MH\":[\"692\",\"011\",\"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-6]\"]]],\"1\"],\"MK\":[\"389\",\"00\",\"[2-578]\\\\d{7}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2|34[47]|4(?:[37]7|5[47]|64)\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[347]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[58]\"],\"0$1\"]],\"0\"],\"ML\":[\"223\",\"00\",\"[24-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-9]\"]]]],\"MM\":[\"95\",\"00\",\"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\",[6,7,8,9,10],[[\"(\\\\d)(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"16|2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[4-7]|8[1-35]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4,6})\",\"$1 $2 $3\",[\"9(?:2[0-4]|[35-9]|4[137-9])\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"92\"],\"0$1\"],[\"(\\\\d)(\\\\d{5})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"MN\":[\"976\",\"001\",\"[12]\\\\d{7,9}|[5-9]\\\\d{7}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[12]1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[12]2[1-3]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\",\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"[12]\"],\"0$1\"]],\"0\"],\"MO\":[\"853\",\"00\",\"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[268]\"]]]],\"MP\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"670$1\",0,\"670\"],\"MQ\":[\"596\",\"00\",\"596\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"MR\":[\"222\",\"00\",\"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-48]\"]]]],\"MS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\",[10],0,\"1\",0,\"([34]\\\\d{6})$|1\",\"664$1\",0,\"664\"],\"MT\":[\"356\",\"00\",\"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2357-9]\"]]]],\"MU\":[\"230\",\"0(?:0|[24-7]0|3[03])\",\"(?:[57]|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46]|8[013]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[57]\"]],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"8\"]]],0,0,0,0,0,0,0,\"020\"],\"MV\":[\"960\",\"0(?:0|19)\",\"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\",[7,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[34679]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]],0,0,0,0,0,0,0,\"00\"],\"MW\":[\"265\",\"00\",\"(?:[1289]\\\\d|31|77)\\\\d{7}|1\\\\d{6}\",[7,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[137-9]\"],\"0$1\"]],\"0\"],\"MX\":[\"52\",\"0[09]\",\"1(?:(?:[27]2|44|99)[1-9]|65[0-689])\\\\d{7}|(?:1(?:[01]\\\\d|2[13-9]|[35][1-9]|4[0-35-9]|6[0-46-9]|7[013-9]|8[1-79]|9[1-8])|[2-9]\\\\d)\\\\d{8}\",[10,11],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"33|5[56]|81\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-9]\"],0,1],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 $3 $4\",[\"1(?:33|5[56]|81)\"],0,1],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 $3 $4\",[\"1\"],0,1]],\"01\",0,\"0(?:[12]|4[45])|1\",0,0,0,0,\"00\"],\"MY\":[\"60\",\"00\",\"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"[4-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1-$2 $3\",[\"1(?:[02469]|[378][1-9]|53)|8\",\"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"3\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3-$4\",[\"1(?:[367]|80)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"15\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"MZ\":[\"258\",\"00\",\"(?:2|8\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2|8[2-79]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"NA\":[\"264\",\"00\",\"[68]\\\\d{7,8}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"87\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"NC\":[\"687\",\"00\",\"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1.$2.$3\",[\"[02-57-9]\"]]]],\"NE\":[\"227\",\"00\",\"[027-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"08\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[089]|2[013]|7[047]\"]]]],\"NF\":[\"672\",\"00\",\"[13]\\\\d{5}\",[6],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"1[0-3]\"]],[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"[13]\"]]],0,0,\"([0-258]\\\\d{4})$\",\"3$1\"],\"NG\":[\"234\",\"009\",\"(?:[124-7]|9\\\\d{3})\\\\d{6}|[1-9]\\\\d{7}|[78]\\\\d{9,13}\",[7,8,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"78\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]|9(?:0[3-9]|[1-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-7]|8[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"]],\"0\"],\"NI\":[\"505\",\"00\",\"(?:1800|[25-8]\\\\d{3})\\\\d{4}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[125-8]\"]]]],\"NL\":[\"31\",\"00\",\"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\",[5,6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{4,7})\",\"$1 $2\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"66\"],\"0$1\"],[\"(\\\\d)(\\\\d{8})\",\"$1 $2\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-578]|91\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"NO\":[\"47\",\"00\",\"(?:0|[2-9]\\\\d{3})\\\\d{4}\",[5,8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]\"]]],0,0,0,0,0,\"[02-689]|7[0-8]\"],\"NP\":[\"977\",\"00\",\"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\",[8,10,11],[[\"(\\\\d)(\\\\d{7})\",\"$1-$2\",[\"1[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"9\"]]],\"0\"],\"NR\":[\"674\",\"00\",\"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-68]\"]]]],\"NU\":[\"683\",\"00\",\"(?:[47]|888\\\\d)\\\\d{3}\",[4,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"8\"]]]],\"NZ\":[\"64\",\"0(?:0|161)\",\"[29]\\\\d{7,9}|50\\\\d{5}(?:\\\\d{2,3})?|6[0-35-9]\\\\d{6}|7\\\\d{7,8}|8\\\\d{4,9}|(?:11\\\\d|[34])\\\\d{7}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,8})\",\"$1 $2\",[\"8[1-579]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"50[036-8]|[89]0\",\"50(?:[0367]|88)|[89]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"24|[346]|7[2-57-9]|9[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:10|74)|[59]|80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1|2[028]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\",\"$1 $2 $3\",[\"2(?:[169]|7[0-35-9])|7|86\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"00\"],\"OM\":[\"968\",\"00\",\"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\",[7,8,9],[[\"(\\\\d{3})(\\\\d{4,6})\",\"$1 $2\",[\"[58]\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[179]\"]]]],\"PA\":[\"507\",\"00\",\"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\",[7,8,10,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[1-57-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[68]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]]],\"PE\":[\"51\",\"00|19(?:1[124]|77|90)00\",\"(?:[14-8]|9\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[4-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"]]],\"0\",0,0,0,0,0,0,\"00\",\" Anexo \"],\"PF\":[\"689\",\"00\",\"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\",[6,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4|8[7-9]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"PG\":[\"675\",\"00|140[1-3]\",\"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"18|[2-69]|85\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[78]\"]]],0,0,0,0,0,0,0,\"00\"],\"PH\":[\"63\",\"00\",\"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\",[6,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"2\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\",\"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"346|4(?:27|9[35])|883\",\"3469|4(?:279|9(?:30|56))|8834\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|8[2-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"1\"]]],\"0\"],\"PK\":[\"92\",\"00\",\"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\",\"$1 $2 $3\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{6,7})\",\"$1 $2\",[\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\",\"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{7,8})\",\"$1 $2\",[\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"58\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[24-9]\"],\"(0$1)\"]],\"0\"],\"PL\":[\"48\",\"00\",\"(?:6|8\\\\d\\\\d)\\\\d{7}|[1-9]\\\\d{6}(?:\\\\d{2})?|[26]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{5})\",\"$1\",[\"19\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"11|20|64\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\",\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"64\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[2-8]|[2-7]|8[1-79]|9[145]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"8\"]]]],\"PM\":[\"508\",\"00\",\"[45]\\\\d{5}|(?:708|80\\\\d)\\\\d{6}\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[45]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"PR\":[\"1\",\"011\",\"(?:[589]\\\\d\\\\d|787)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"787|939\"],\"PS\":[\"970\",\"00\",\"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2489]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"PT\":[\"351\",\"00\",\"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2[12]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"16|[236-9]\"]]]],\"PW\":[\"680\",\"01[12]\",\"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"PY\":[\"595\",\"00\",\"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"[2-9]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{4,5})\",\"$1 $2\",[\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"87\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"9(?:[5-79]|8[1-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]]],\"0\"],\"QA\":[\"974\",\"00\",\"800\\\\d{4}|(?:2|800)\\\\d{6}|(?:0080|[3-7])\\\\d{7}\",[7,8,9,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"2[16]|8\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[3-7]\"]]]],\"RE\":[\"262\",\"00\",\"(?:26|[689]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2689]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"26(?:2\\\\d\\\\d|3(?:0\\\\d|1[0-5]))\\\\d{4}\"],[\"69(?:2\\\\d\\\\d|3(?:[06][0-6]|1[013]|2[0-2]|3[0-39]|4\\\\d|5[0-5]|7[0-27]|8[0-8]|9[0-479]))\\\\d{4}\"],[\"80\\\\d{7}\"],[\"89[1-37-9]\\\\d{6}\"],0,0,0,0,[\"9(?:399[0-3]|479[0-5]|76(?:2[27]|3[0-37]))\\\\d{4}\"],[\"8(?:1[019]|2[0156]|84|90)\\\\d{6}\"]]],\"RO\":[\"40\",\"00\",\"(?:[2378]\\\\d|90)\\\\d{7}|[23]\\\\d{5}\",[6,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"2[3-6]\",\"2[3-6]\\\\d9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"219|31\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[237-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\" int \"],\"RS\":[\"381\",\"00\",\"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\",[6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3,9})\",\"$1 $2\",[\"(?:2[389]|39)0|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5,10})\",\"$1 $2\",[\"[1-36]\"],\"0$1\"]],\"0\"],\"RU\":[\"7\",\"810\",\"8\\\\d{13}|[347-9]\\\\d{9}\",[10,14],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-8]|2[1-9])\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"],\"8 ($1)\",1],[\"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-68]|2[1-9])\",\"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\",\"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[349]|8(?:[02-7]|1[1-8])\"],\"8 ($1)\",1],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"8\"],\"8 ($1)\"]],\"8\",0,0,0,0,\"3[04-689]|[489]\",0,\"8~10\"],\"RW\":[\"250\",\"00\",\"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]]],\"0\"],\"SA\":[\"966\",\"00\",\"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\"],\"SB\":[\"677\",\"0[01]\",\"(?:[1-6]|[7-9]\\\\d\\\\d)\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7|8[4-9]|9(?:[1-8]|9[0-8])\"]]]],\"SC\":[\"248\",\"010|0[0-2]\",\"800\\\\d{4}|(?:[249]\\\\d|64)\\\\d{5}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[246]|9[57]\"]]],0,0,0,0,0,0,0,\"00\"],\"SD\":[\"249\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"SE\":[\"46\",\"00\",\"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"20\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"9(?:00|39|44|9)\"],\"0$1\",0,\"$1 $2\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3\",[\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\",\"$1-$2 $3\",[\"9(?:00|39|44)\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"10|7\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1-$2 $3 $4\",[\"9\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4 $5\",[\"[26]\"],\"0$1\",0,\"$1 $2 $3 $4 $5\"]],\"0\"],\"SG\":[\"65\",\"0[0-3]\\\\d\",\"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\",[8,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[369]|8(?:0[1-8]|[1-9])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"SH\":[\"290\",\"00\",\"(?:[256]\\\\d|8)\\\\d{3}\",[4,5],0,0,0,0,0,0,\"[256]\"],\"SI\":[\"386\",\"00|10(?:22|66|88|99)\",\"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\",[5,6,7,8],[[\"(\\\\d{2})(\\\\d{3,6})\",\"$1 $2\",[\"8[09]|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"59|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37][01]|4[0139]|51|6\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-57]\"],\"(0$1)\"]],\"0\",0,0,0,0,0,0,\"00\"],\"SJ\":[\"47\",\"00\",\"0\\\\d{4}|(?:[489]\\\\d|79)\\\\d{6}\",[5,8],0,0,0,0,0,0,\"79\"],\"SK\":[\"421\",\"00\",\"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\",[6,7,9],[[\"(\\\\d)(\\\\d{2})(\\\\d{3,4})\",\"$1 $2 $3\",[\"21\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-5][1-8]1\",\"[3-5][1-8]1[67]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[689]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"[3-5]\"],\"0$1\"]],\"0\"],\"SL\":[\"232\",\"00\",\"(?:[237-9]\\\\d|66)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[236-9]\"],\"(0$1)\"]],\"0\"],\"SM\":[\"378\",\"00\",\"(?:0549|[5-7]\\\\d)\\\\d{6}\",[8,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-7]\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"0\"]]],0,0,\"([89]\\\\d{5})$\",\"0549$1\"],\"SN\":[\"221\",\"00\",\"(?:[378]\\\\d|93)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[379]\"]]]],\"SO\":[\"252\",\"00\",\"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"8[125]\"]],[\"(\\\\d{6})\",\"$1\",[\"[134]\"]],[\"(\\\\d)(\\\\d{6})\",\"$1 $2\",[\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"(?:2|90)4|[67]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[348]|64|79|90\"]],[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"1|28|6[0-35-9]|77|9[2-9]\"]]],\"0\"],\"SR\":[\"597\",\"00\",\"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\",[6,7],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"56\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1-$2\",[\"[2-5]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[6-8]\"]]]],\"SS\":[\"211\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"ST\":[\"239\",\"00\",\"(?:22|9\\\\d)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[29]\"]]]],\"SV\":[\"503\",\"00\",\"[267]\\\\d{7}|[89]00\\\\d{4}(?:\\\\d{4})?\",[7,8,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[89]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[267]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]]],\"SX\":[\"1\",\"011\",\"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"(5\\\\d{6})$|1\",\"721$1\",0,\"721\"],\"SY\":[\"963\",\"00\",\"[1-39]\\\\d{8}|[1-5]\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-5]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\",1]],\"0\"],\"SZ\":[\"268\",\"00\",\"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\",[8,9],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[0237]\"]],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"9\"]]]],\"TA\":[\"290\",\"00\",\"8\\\\d{3}\",[4],0,0,0,0,0,0,\"8\"],\"TC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-479]\\\\d{6})$|1\",\"649$1\",0,\"649\"],\"TD\":[\"235\",\"00|16\",\"(?:22|[69]\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2679]\"]]],0,0,0,0,0,0,0,\"00\"],\"TG\":[\"228\",\"00\",\"[279]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[279]\"]]]],\"TH\":[\"66\",\"00[1-9]\",\"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\",[8,9,10,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[13-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"TJ\":[\"992\",\"810\",\"[0-57-9]\\\\d{8}\",[9],[[\"(\\\\d{6})(\\\\d)(\\\\d{2})\",\"$1 $2 $3\",[\"331\",\"3317\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"44[04]|[34]7\"]],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"3[1-5]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[0-57-9]\"]]],0,0,0,0,0,0,0,\"8~10\"],\"TK\":[\"690\",\"00\",\"[2-47]\\\\d{3,6}\",[4,5,6,7]],\"TL\":[\"670\",\"00\",\"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-489]|70\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"7\"]]]],\"TM\":[\"993\",\"810\",\"[1-6]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"12\"],\"(8 $1)\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-5]\"],\"(8 $1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"6\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"TN\":[\"216\",\"00\",\"[2-57-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-57-9]\"]]]],\"TO\":[\"676\",\"00\",\"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1-$2\",[\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]],[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]]]],\"TR\":[\"90\",\"00\",\"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\",[7,10,12,13],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"512|8[01589]|90\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5(?:[0-59]|61)\",\"5(?:[0-59]|616)\",\"5(?:[0-59]|6161)\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24][1-8]|3[1-9]\"],\"(0$1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1]],\"0\"],\"TT\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-46-8]\\\\d{6})$|1\",\"868$1\",0,\"868\"],\"TV\":[\"688\",\"00\",\"(?:2|7\\\\d\\\\d|90)\\\\d{4}\",[5,6,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"TW\":[\"886\",\"0(?:0[25-79]|19)\",\"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\",[7,8,9,10,11],[[\"(\\\\d{2})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"202\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[258]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\",\"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\"#\"],\"TZ\":[\"255\",\"00[056]\",\"(?:[25-8]\\\\d|41|90)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[24]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"]],\"0\"],\"UA\":[\"380\",\"00\",\"[89]\\\\d{9}|[3-9]\\\\d{8}\",[9,10],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\",\"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\",\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|89|9[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"0~0\"],\"UG\":[\"256\",\"00[057]\",\"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"202\",\"2024\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[27-9]|4(?:6[45]|[7-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[34]\"],\"0$1\"]],\"0\"],\"US\":[\"1\",\"011\",\"[2-9]\\\\d{9}|3\\\\d{6}\",[10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"310\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",[\"[2-9]\"],0,1,\"$1-$2-$3\"]],\"1\",0,0,0,0,0,[[\"5056(?:[0-35-9]\\\\d|4[46])\\\\d{4}|(?:4722|505[2-57-9]|983[29])\\\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[0-2]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"UY\":[\"598\",\"0(?:0|1[3-9]\\\\d)\",\"(?:0004|4)\\\\d{9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\",[7,8,10,13],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"405|8|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[124]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"0\"]]],\"0\",0,0,0,0,0,0,\"00\",\" int. \"],\"UZ\":[\"998\",\"810\",\"200\\\\d{6}|(?:33|[5-79]\\\\d|88)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[235-9]\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"VA\":[\"39\",\"00\",\"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\",[6,7,8,9,10,11],0,0,0,0,0,0,\"06698\"],\"VC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"784$1\",0,\"784\"],\"VE\":[\"58\",\"00\",\"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\",[10],[[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"[24-689]\"],\"0$1\"]],\"0\"],\"VG\":[\"1\",\"011\",\"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-578]\\\\d{6})$|1\",\"284$1\",0,\"284\"],\"VI\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"340$1\",0,\"340\"],\"VN\":[\"84\",\"00\",\"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"1\"],0,1],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[357-9]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[48]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\",1]],\"0\"],\"VU\":[\"678\",\"00\",\"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\",[5,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[57-9]\"]]]],\"WF\":[\"681\",\"00\",\"(?:40|72)\\\\d{4}|8\\\\d{5}(?:\\\\d{3})?\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[478]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"WS\":[\"685\",\"0\",\"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\",[5,6,7,10],[[\"(\\\\d{5})\",\"$1\",[\"[2-5]|6[1-9]\"]],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[68]\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"XK\":[\"383\",\"00\",\"[23]\\\\d{7,8}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[23]\"],\"0$1\"]],\"0\"],\"YE\":[\"967\",\"00\",\"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-6]|7(?:[24-6]|8[0-7])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"YT\":[\"262\",\"00\",\"(?:80|9\\\\d)\\\\d{7}|(?:26|63)9\\\\d{6}\",[9],0,\"0\",0,0,0,0,0,[[\"269(?:0[0-467]|5[0-4]|6\\\\d|[78]0)\\\\d{4}\"],[\"639(?:0[0-79]|1[019]|[267]\\\\d|3[09]|40|5[05-9]|9[04-79])\\\\d{4}\"],[\"80\\\\d{7}\"],0,0,0,0,0,[\"9(?:(?:39|47)8[01]|769\\\\d)\\\\d{4}\"]]],\"ZA\":[\"27\",\"00\",\"[1-79]\\\\d{8}|8\\\\d{4,9}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"860\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"ZM\":[\"260\",\"00\",\"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[28]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[79]\"],\"0$1\"]],\"0\"],\"ZW\":[\"263\",\"00\",\"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\",[5,6,7,8,9,10],[[\"(\\\\d{3})(\\\\d{3,5})\",\"$1 $2\",[\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\",\"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\",\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"29[013-9]|39|54\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,5})\",\"$1 $2\",[\"(?:25|54)8\",\"258|5483\"],\"0$1\"]],\"0\"]},\"nonGeographic\":{\"800\":[\"800\",0,\"(?:00|[1-9]\\\\d)\\\\d{6}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"\\\\d\"]]],0,0,0,0,0,0,[0,0,[\"(?:00|[1-9]\\\\d)\\\\d{6}\"]]],\"808\":[\"808\",0,\"[1-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[1-9]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,[\"[1-9]\\\\d{7}\"]]],\"870\":[\"870\",0,\"7\\\\d{11}|[35-7]\\\\d{8}\",[9,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[35-7]\"]]],0,0,0,0,0,0,[0,[\"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\"]]],\"878\":[\"878\",0,\"10\\\\d{10}\",[12],[[\"(\\\\d{2})(\\\\d{5})(\\\\d{5})\",\"$1 $2 $3\",[\"1\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"10\\\\d{10}\"]]],\"881\":[\"881\",0,\"[0-36-9]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"[0-36-9]\"]]],0,0,0,0,0,0,[0,[\"[0-36-9]\\\\d{8}\"]]],\"882\":[\"882\",0,\"[13]\\\\d{6}(?:\\\\d{2,5})?|[19]\\\\d{7}|(?:[25]\\\\d\\\\d|4)\\\\d{7}(?:\\\\d{2})?\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"16|342\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"49\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"1[36]|9\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"3[23]\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"16\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|23|3(?:[15]|4[57])|4|51\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"34\"]],[\"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\",\"$1 $2 $3\",[\"[1-35]\"]]],0,0,0,0,0,0,[0,[\"342\\\\d{4}|(?:337|49)\\\\d{6}|(?:3(?:2|47|7\\\\d{3})|50\\\\d{3})\\\\d{7}\",[7,8,9,10,12]],0,0,0,0,0,0,[\"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:345\\\\d|9[89])\\\\d{6}|(?:10|2(?:3|85\\\\d)|3(?:[15]|[69]\\\\d\\\\d)|4[15-8]|51)\\\\d{8}\"]]],\"883\":[\"883\",0,\"(?:[1-4]\\\\d|51)\\\\d{6,10}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,8})\",\"$1 $2 $3\",[\"[14]|2[24-689]|3[02-689]|51[24-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"510\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"21\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"51[13]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[235]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"(?:2(?:00\\\\d\\\\d|10)|(?:370[1-9]|51\\\\d0)\\\\d)\\\\d{7}|51(?:00\\\\d{5}|[24-9]0\\\\d{4,7})|(?:1[013-79]|2[24-689]|3[02-689]|4[0-4])0\\\\d{5,9}\"]]],\"888\":[\"888\",0,\"\\\\d{11}\",[11],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\"]],0,0,0,0,0,0,[0,0,0,0,0,0,[\"\\\\d{11}\"]]],\"979\":[\"979\",0,\"[1359]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1359]\"]]],0,0,0,0,0,0,[0,0,0,[\"[1359]\\\\d{8}\"]]]}}","// Importing from a \".js\" file is a workaround for Node.js \"ES Modules\"\r\n// importing system which is even uncapable of importing \"*.json\" files.\r\nimport metadata from '../../metadata.min.json.js'\r\n\r\nexport default function withMetadataArgument(func, _arguments) {\r\n\tvar args = Array.prototype.slice.call(_arguments)\r\n\targs.push(metadata)\r\n\treturn func.apply(this, args)\r\n}","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// https://stackoverflow.com/a/46971044/970769\n// \"Breaking changes in Typescript 2.1\"\n// \"Extending built-ins like Error, Array, and Map may no longer work.\"\n// \"As a recommendation, you can manually adjust the prototype immediately after any super(...) calls.\"\n// https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\nvar ParseError = /*#__PURE__*/function (_Error) {\n  _inherits(ParseError, _Error);\n\n  var _super = _createSuper(ParseError);\n\n  function ParseError(code) {\n    var _this;\n\n    _classCallCheck(this, ParseError);\n\n    _this = _super.call(this, code); // Set the prototype explicitly.\n    // Any subclass of FooError will have to manually set the prototype as well.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this), ParseError.prototype);\n    _this.name = _this.constructor.name;\n    return _this;\n  }\n\n  return _createClass(ParseError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexport { ParseError as default };\n//# sourceMappingURL=ParseError.js.map","// The minimum length of the national significant number.\nexport var MIN_LENGTH_FOR_NSN = 2; // The ITU says the maximum length should be 15,\n// but one can find longer numbers in Germany.\n\nexport var MAX_LENGTH_FOR_NSN = 17; // The maximum length of the country calling code.\n\nexport var MAX_LENGTH_COUNTRY_CODE = 3; // Digits accepted in phone numbers\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\n\nexport var VALID_DIGITS = \"0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9\"; // `DASHES` will be right after the opening square bracket of the \"character class\"\n\nvar DASHES = \"-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D\";\nvar SLASHES = \"\\uFF0F/\";\nvar DOTS = \"\\uFF0E.\";\nexport var WHITESPACE = \" \\xA0\\xAD\\u200B\\u2060\\u3000\";\nvar BRACKETS = \"()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]\"; // export const OPENING_BRACKETS = '(\\uFF08\\uFF3B\\\\\\['\n\nvar TILDES = \"~\\u2053\\u223C\\uFF5E\"; // Regular expression of acceptable punctuation found in phone numbers. This\n// excludes punctuation found as a leading character only. This consists of dash\n// characters, white space characters, full stops, slashes, square brackets,\n// parentheses and tildes. Full-width variants are also present.\n\nexport var VALID_PUNCTUATION = \"\".concat(DASHES).concat(SLASHES).concat(DOTS).concat(WHITESPACE).concat(BRACKETS).concat(TILDES);\nexport var PLUS_CHARS = \"+\\uFF0B\"; // const LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+')\n//# sourceMappingURL=constants.js.map","// Copy-pasted from:\n// https://github.com/substack/semver-compare/blob/master/index.js\n//\n// Inlining this function because some users reported issues with\n// importing from `semver-compare` in a browser with ES6 \"native\" modules.\n//\n// Fixes `semver-compare` not being able to compare versions with alpha/beta/etc \"tags\".\n// https://github.com/catamphetamine/libphonenumber-js/issues/381\nexport default function (a, b) {\n  a = a.split('-');\n  b = b.split('-');\n  var pa = a[0].split('.');\n  var pb = b[0].split('.');\n\n  for (var i = 0; i < 3; i++) {\n    var na = Number(pa[i]);\n    var nb = Number(pb[i]);\n    if (na > nb) return 1;\n    if (nb > na) return -1;\n    if (!isNaN(na) && isNaN(nb)) return 1;\n    if (isNaN(na) && !isNaN(nb)) return -1;\n  }\n\n  if (a[1] && b[1]) {\n    return a[1] > b[1] ? 1 : a[1] < b[1] ? -1 : 0;\n  }\n\n  return !a[1] && b[1] ? 1 : a[1] && !b[1] ? -1 : 0;\n}\n//# sourceMappingURL=semver-compare.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport compare from './tools/semver-compare.js'; // Added \"possibleLengths\" and renamed\n// \"country_phone_code_to_countries\" to \"country_calling_codes\".\n\nvar V2 = '1.0.18'; // Added \"idd_prefix\" and \"default_idd_prefix\".\n\nvar V3 = '1.2.0'; // Moved `001` country code to \"nonGeographic\" section of metadata.\n\nvar V4 = '1.7.35';\nvar DEFAULT_EXT_PREFIX = ' ext. ';\nvar CALLING_CODE_REG_EXP = /^\\d+$/;\n/**\r\n * See: https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md\r\n */\n\nvar Metadata = /*#__PURE__*/function () {\n  function Metadata(metadata) {\n    _classCallCheck(this, Metadata);\n\n    validateMetadata(metadata);\n    this.metadata = metadata;\n    setVersion.call(this, metadata);\n  }\n\n  _createClass(Metadata, [{\n    key: \"getCountries\",\n    value: function getCountries() {\n      return Object.keys(this.metadata.countries).filter(function (_) {\n        return _ !== '001';\n      });\n    }\n  }, {\n    key: \"getCountryMetadata\",\n    value: function getCountryMetadata(countryCode) {\n      return this.metadata.countries[countryCode];\n    }\n  }, {\n    key: \"nonGeographic\",\n    value: function nonGeographic() {\n      if (this.v1 || this.v2 || this.v3) return; // `nonGeographical` was a typo.\n      // It's present in metadata generated from `1.7.35` to `1.7.37`.\n      // The test case could be found by searching for \"nonGeographical\".\n\n      return this.metadata.nonGeographic || this.metadata.nonGeographical;\n    }\n  }, {\n    key: \"hasCountry\",\n    value: function hasCountry(country) {\n      return this.getCountryMetadata(country) !== undefined;\n    }\n  }, {\n    key: \"hasCallingCode\",\n    value: function hasCallingCode(callingCode) {\n      if (this.getCountryCodesForCallingCode(callingCode)) {\n        return true;\n      }\n\n      if (this.nonGeographic()) {\n        if (this.nonGeographic()[callingCode]) {\n          return true;\n        }\n      } else {\n        // A hacky workaround for old custom metadata (generated before V4).\n        var countryCodes = this.countryCallingCodes()[callingCode];\n\n        if (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\n          return true;\n        }\n      }\n    }\n  }, {\n    key: \"isNonGeographicCallingCode\",\n    value: function isNonGeographicCallingCode(callingCode) {\n      if (this.nonGeographic()) {\n        return this.nonGeographic()[callingCode] ? true : false;\n      } else {\n        return this.getCountryCodesForCallingCode(callingCode) ? false : true;\n      }\n    } // Deprecated.\n\n  }, {\n    key: \"country\",\n    value: function country(countryCode) {\n      return this.selectNumberingPlan(countryCode);\n    }\n  }, {\n    key: \"selectNumberingPlan\",\n    value: function selectNumberingPlan(countryCode, callingCode) {\n      // Supports just passing `callingCode` as the first argument.\n      if (countryCode && CALLING_CODE_REG_EXP.test(countryCode)) {\n        callingCode = countryCode;\n        countryCode = null;\n      }\n\n      if (countryCode && countryCode !== '001') {\n        if (!this.hasCountry(countryCode)) {\n          throw new Error(\"Unknown country: \".concat(countryCode));\n        }\n\n        this.numberingPlan = new NumberingPlan(this.getCountryMetadata(countryCode), this);\n      } else if (callingCode) {\n        if (!this.hasCallingCode(callingCode)) {\n          throw new Error(\"Unknown calling code: \".concat(callingCode));\n        }\n\n        this.numberingPlan = new NumberingPlan(this.getNumberingPlanMetadata(callingCode), this);\n      } else {\n        this.numberingPlan = undefined;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getCountryCodesForCallingCode\",\n    value: function getCountryCodesForCallingCode(callingCode) {\n      var countryCodes = this.countryCallingCodes()[callingCode];\n\n      if (countryCodes) {\n        // Metadata before V4 included \"non-geographic entity\" calling codes\n        // inside `country_calling_codes` (for example, `\"881\":[\"001\"]`).\n        // Now the semantics of `country_calling_codes` has changed:\n        // it's specifically for \"countries\" now.\n        // Older versions of custom metadata will simply skip parsing\n        // \"non-geographic entity\" phone numbers with new versions\n        // of this library: it's not considered a bug,\n        // because such numbers are extremely rare,\n        // and developers extremely rarely use custom metadata.\n        if (countryCodes.length === 1 && countryCodes[0].length === 3) {\n          return;\n        }\n\n        return countryCodes;\n      }\n    }\n  }, {\n    key: \"getCountryCodeForCallingCode\",\n    value: function getCountryCodeForCallingCode(callingCode) {\n      var countryCodes = this.getCountryCodesForCallingCode(callingCode);\n\n      if (countryCodes) {\n        return countryCodes[0];\n      }\n    }\n  }, {\n    key: \"getNumberingPlanMetadata\",\n    value: function getNumberingPlanMetadata(callingCode) {\n      var countryCode = this.getCountryCodeForCallingCode(callingCode);\n\n      if (countryCode) {\n        return this.getCountryMetadata(countryCode);\n      }\n\n      if (this.nonGeographic()) {\n        var metadata = this.nonGeographic()[callingCode];\n\n        if (metadata) {\n          return metadata;\n        }\n      } else {\n        // A hacky workaround for old custom metadata (generated before V4).\n        // In that metadata, there was no concept of \"non-geographic\" metadata\n        // so metadata for `001` country code was stored along with other countries.\n        // The test case can be found by searching for:\n        // \"should work around `nonGeographic` metadata not existing\".\n        var countryCodes = this.countryCallingCodes()[callingCode];\n\n        if (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\n          return this.metadata.countries['001'];\n        }\n      }\n    } // Deprecated.\n\n  }, {\n    key: \"countryCallingCode\",\n    value: function countryCallingCode() {\n      return this.numberingPlan.callingCode();\n    } // Deprecated.\n\n  }, {\n    key: \"IDDPrefix\",\n    value: function IDDPrefix() {\n      return this.numberingPlan.IDDPrefix();\n    } // Deprecated.\n\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function defaultIDDPrefix() {\n      return this.numberingPlan.defaultIDDPrefix();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function nationalNumberPattern() {\n      return this.numberingPlan.nationalNumberPattern();\n    } // Deprecated.\n\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      return this.numberingPlan.possibleLengths();\n    } // Deprecated.\n\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return this.numberingPlan.formats();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function nationalPrefixForParsing() {\n      return this.numberingPlan.nationalPrefixForParsing();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function nationalPrefixTransformRule() {\n      return this.numberingPlan.nationalPrefixTransformRule();\n    } // Deprecated.\n\n  }, {\n    key: \"leadingDigits\",\n    value: function leadingDigits() {\n      return this.numberingPlan.leadingDigits();\n    } // Deprecated.\n\n  }, {\n    key: \"hasTypes\",\n    value: function hasTypes() {\n      return this.numberingPlan.hasTypes();\n    } // Deprecated.\n\n  }, {\n    key: \"type\",\n    value: function type(_type) {\n      return this.numberingPlan.type(_type);\n    } // Deprecated.\n\n  }, {\n    key: \"ext\",\n    value: function ext() {\n      return this.numberingPlan.ext();\n    }\n  }, {\n    key: \"countryCallingCodes\",\n    value: function countryCallingCodes() {\n      if (this.v1) return this.metadata.country_phone_code_to_countries;\n      return this.metadata.country_calling_codes;\n    } // Deprecated.\n\n  }, {\n    key: \"chooseCountryByCountryCallingCode\",\n    value: function chooseCountryByCountryCallingCode(callingCode) {\n      return this.selectNumberingPlan(callingCode);\n    }\n  }, {\n    key: \"hasSelectedNumberingPlan\",\n    value: function hasSelectedNumberingPlan() {\n      return this.numberingPlan !== undefined;\n    }\n  }]);\n\n  return Metadata;\n}();\n\nexport { Metadata as default };\n\nvar NumberingPlan = /*#__PURE__*/function () {\n  function NumberingPlan(metadata, globalMetadataObject) {\n    _classCallCheck(this, NumberingPlan);\n\n    this.globalMetadataObject = globalMetadataObject;\n    this.metadata = metadata;\n    setVersion.call(this, globalMetadataObject.metadata);\n  }\n\n  _createClass(NumberingPlan, [{\n    key: \"callingCode\",\n    value: function callingCode() {\n      return this.metadata[0];\n    } // Formatting information for regions which share\n    // a country calling code is contained by only one region\n    // for performance reasons. For example, for NANPA region\n    // (\"North American Numbering Plan Administration\",\n    //  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n    // it will be contained in the metadata for `US`.\n\n  }, {\n    key: \"getDefaultCountryMetadataForRegion\",\n    value: function getDefaultCountryMetadataForRegion() {\n      return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode());\n    } // Is always present.\n\n  }, {\n    key: \"IDDPrefix\",\n    value: function IDDPrefix() {\n      if (this.v1 || this.v2) return;\n      return this.metadata[1];\n    } // Is only present when a country supports multiple IDD prefixes.\n\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function defaultIDDPrefix() {\n      if (this.v1 || this.v2) return;\n      return this.metadata[12];\n    }\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function nationalNumberPattern() {\n      if (this.v1 || this.v2) return this.metadata[1];\n      return this.metadata[2];\n    } // \"possible length\" data is always present in Google's metadata.\n\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      if (this.v1) return;\n      return this.metadata[this.v2 ? 2 : 3];\n    }\n  }, {\n    key: \"_getFormats\",\n    value: function _getFormats(metadata) {\n      return metadata[this.v1 ? 2 : this.v2 ? 3 : 4];\n    } // For countries of the same region (e.g. NANPA)\n    // formats are all stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      var _this = this;\n\n      var formats = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];\n      return formats.map(function (_) {\n        return new Format(_, _this);\n      });\n    }\n  }, {\n    key: \"nationalPrefix\",\n    value: function nationalPrefix() {\n      return this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5];\n    }\n  }, {\n    key: \"_getNationalPrefixFormattingRule\",\n    value: function _getNationalPrefixFormattingRule(metadata) {\n      return metadata[this.v1 ? 4 : this.v2 ? 5 : 6];\n    } // For countries of the same region (e.g. NANPA)\n    // national prefix formatting rule is stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function nationalPrefixFormattingRule() {\n      return this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"_nationalPrefixForParsing\",\n    value: function _nationalPrefixForParsing() {\n      return this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7];\n    }\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function nationalPrefixForParsing() {\n      // If `national_prefix_for_parsing` is not set explicitly,\n      // then infer it from `national_prefix` (if any)\n      return this._nationalPrefixForParsing() || this.nationalPrefix();\n    }\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function nationalPrefixTransformRule() {\n      return this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8];\n    }\n  }, {\n    key: \"_getNationalPrefixIsOptionalWhenFormatting\",\n    value: function _getNationalPrefixIsOptionalWhenFormatting() {\n      return !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9];\n    } // For countries of the same region (e.g. NANPA)\n    // \"national prefix is optional when formatting\" flag is\n    // stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsOptionalWhenFormattingInNationalFormat() {\n      return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"leadingDigits\",\n    value: function leadingDigits() {\n      return this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10];\n    }\n  }, {\n    key: \"types\",\n    value: function types() {\n      return this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11];\n    }\n  }, {\n    key: \"hasTypes\",\n    value: function hasTypes() {\n      // Versions 1.2.0 - 1.2.4: can be `[]`.\n\n      /* istanbul ignore next */\n      if (this.types() && this.types().length === 0) {\n        return false;\n      } // Versions <= 1.2.4: can be `undefined`.\n      // Version >= 1.2.5: can be `0`.\n\n\n      return !!this.types();\n    }\n  }, {\n    key: \"type\",\n    value: function type(_type2) {\n      if (this.hasTypes() && getType(this.types(), _type2)) {\n        return new Type(getType(this.types(), _type2), this);\n      }\n    }\n  }, {\n    key: \"ext\",\n    value: function ext() {\n      if (this.v1 || this.v2) return DEFAULT_EXT_PREFIX;\n      return this.metadata[13] || DEFAULT_EXT_PREFIX;\n    }\n  }]);\n\n  return NumberingPlan;\n}();\n\nvar Format = /*#__PURE__*/function () {\n  function Format(format, metadata) {\n    _classCallCheck(this, Format);\n\n    this._format = format;\n    this.metadata = metadata;\n  }\n\n  _createClass(Format, [{\n    key: \"pattern\",\n    value: function pattern() {\n      return this._format[0];\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return this._format[1];\n    }\n  }, {\n    key: \"leadingDigitsPatterns\",\n    value: function leadingDigitsPatterns() {\n      return this._format[2] || [];\n    }\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function nationalPrefixFormattingRule() {\n      return this._format[3] || this.metadata.nationalPrefixFormattingRule();\n    }\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsOptionalWhenFormattingInNationalFormat() {\n      return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    }\n  }, {\n    key: \"nationalPrefixIsMandatoryWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsMandatoryWhenFormattingInNationalFormat() {\n      // National prefix is omitted if there's no national prefix formatting rule\n      // set for this country, or when the national prefix formatting rule\n      // contains no national prefix itself, or when this rule is set but\n      // national prefix is optional for this phone number format\n      // (and it is not enforced explicitly)\n      return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    } // Checks whether national prefix formatting rule contains national prefix.\n\n  }, {\n    key: \"usesNationalPrefix\",\n    value: function usesNationalPrefix() {\n      return this.nationalPrefixFormattingRule() && // Check that national prefix formatting rule is not a \"dummy\" one.\n      !FIRST_GROUP_ONLY_PREFIX_PATTERN.test(this.nationalPrefixFormattingRule()) // In compressed metadata, `this.nationalPrefixFormattingRule()` is `0`\n      // when `national_prefix_formatting_rule` is not present.\n      // So, `true` or `false` are returned explicitly here, so that\n      // `0` number isn't returned.\n      ? true : false;\n    }\n  }, {\n    key: \"internationalFormat\",\n    value: function internationalFormat() {\n      return this._format[5] || this.format();\n    }\n  }]);\n\n  return Format;\n}();\n/**\r\n * A pattern that is used to determine if the national prefix formatting rule\r\n * has the first group only, i.e., does not start with the national prefix.\r\n * Note that the pattern explicitly allows for unbalanced parentheses.\r\n */\n\n\nvar FIRST_GROUP_ONLY_PREFIX_PATTERN = /^\\(?\\$1\\)?$/;\n\nvar Type = /*#__PURE__*/function () {\n  function Type(type, metadata) {\n    _classCallCheck(this, Type);\n\n    this.type = type;\n    this.metadata = metadata;\n  }\n\n  _createClass(Type, [{\n    key: \"pattern\",\n    value: function pattern() {\n      if (this.metadata.v1) return this.type;\n      return this.type[0];\n    }\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      if (this.metadata.v1) return;\n      return this.type[1] || this.metadata.possibleLengths();\n    }\n  }]);\n\n  return Type;\n}();\n\nfunction getType(types, type) {\n  switch (type) {\n    case 'FIXED_LINE':\n      return types[0];\n\n    case 'MOBILE':\n      return types[1];\n\n    case 'TOLL_FREE':\n      return types[2];\n\n    case 'PREMIUM_RATE':\n      return types[3];\n\n    case 'PERSONAL_NUMBER':\n      return types[4];\n\n    case 'VOICEMAIL':\n      return types[5];\n\n    case 'UAN':\n      return types[6];\n\n    case 'PAGER':\n      return types[7];\n\n    case 'VOIP':\n      return types[8];\n\n    case 'SHARED_COST':\n      return types[9];\n  }\n}\n\nexport function validateMetadata(metadata) {\n  if (!metadata) {\n    throw new Error('[libphonenumber-js] `metadata` argument not passed. Check your arguments.');\n  } // `country_phone_code_to_countries` was renamed to\n  // `country_calling_codes` in `1.0.18`.\n\n\n  if (!is_object(metadata) || !is_object(metadata.countries)) {\n    throw new Error(\"[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got \".concat(is_object(metadata) ? 'an object of shape: { ' + Object.keys(metadata).join(', ') + ' }' : 'a ' + type_of(metadata) + ': ' + metadata, \".\"));\n  }\n} // Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n\n/* istanbul ignore next */\n\nvar is_object = function is_object(_) {\n  return _typeof(_) === 'object';\n}; // Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n\n/* istanbul ignore next */\n\n\nvar type_of = function type_of(_) {\n  return _typeof(_);\n};\n/**\r\n * Returns extension prefix for a country.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string?}\r\n * @example\r\n * // Returns \" ext. \"\r\n * getExtPrefix(\"US\")\r\n */\n\n\nexport function getExtPrefix(country, metadata) {\n  metadata = new Metadata(metadata);\n\n  if (metadata.hasCountry(country)) {\n    return metadata.country(country).ext();\n  }\n\n  return DEFAULT_EXT_PREFIX;\n}\n/**\r\n * Returns \"country calling code\" for a country.\r\n * Throws an error if the country doesn't exist or isn't supported by this library.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string}\r\n * @example\r\n * // Returns \"44\"\r\n * getCountryCallingCode(\"GB\")\r\n */\n\nexport function getCountryCallingCode(country, metadata) {\n  metadata = new Metadata(metadata);\n\n  if (metadata.hasCountry(country)) {\n    return metadata.country(country).countryCallingCode();\n  }\n\n  throw new Error(\"Unknown country: \".concat(country));\n}\nexport function isSupportedCountry(country, metadata) {\n  // metadata = new Metadata(metadata)\n  // return metadata.hasCountry(country)\n  return metadata.countries.hasOwnProperty(country);\n}\n\nfunction setVersion(metadata) {\n  var version = metadata.version;\n\n  if (typeof version === 'number') {\n    this.v1 = version === 1;\n    this.v2 = version === 2;\n    this.v3 = version === 3;\n    this.v4 = version === 4;\n  } else {\n    if (!version) {\n      this.v1 = true;\n    } else if (compare(version, V3) === -1) {\n      this.v2 = true;\n    } else if (compare(version, V4) === -1) {\n      this.v3 = true;\n    } else {\n      this.v4 = true;\n    }\n  }\n} // const ISO_COUNTRY_CODE = /^[A-Z]{2}$/\n// function isCountryCode(countryCode) {\n// \treturn ISO_COUNTRY_CODE.test(countryCodeOrCountryCallingCode)\n// }\n//# sourceMappingURL=metadata.js.map","import { VALID_DIGITS } from '../../constants.js'; // The RFC 3966 format for extensions.\n\nvar RFC3966_EXTN_PREFIX = ';ext=';\n/**\r\n * Helper method for constructing regular expressions for parsing. Creates\r\n * an expression that captures up to max_length digits.\r\n * @return {string} RegEx pattern to capture extension digits.\r\n */\n\nvar getExtensionDigitsPattern = function getExtensionDigitsPattern(maxLength) {\n  return \"([\".concat(VALID_DIGITS, \"]{1,\").concat(maxLength, \"})\");\n};\n/**\r\n * Helper initialiser method to create the regular-expression pattern to match\r\n * extensions.\r\n * Copy-pasted from Google's `libphonenumber`:\r\n * https://github.com/google/libphonenumber/blob/55b2646ec9393f4d3d6661b9c82ef9e258e8b829/javascript/i18n/phonenumbers/phonenumberutil.js#L759-L766\r\n * @return {string} RegEx pattern to capture extensions.\r\n */\n\n\nexport default function createExtensionPattern(purpose) {\n  // We cap the maximum length of an extension based on the ambiguity of the way\n  // the extension is prefixed. As per ITU, the officially allowed length for\n  // extensions is actually 40, but we don't support this since we haven't seen real\n  // examples and this introduces many false interpretations as the extension labels\n  // are not standardized.\n\n  /** @type {string} */\n  var extLimitAfterExplicitLabel = '20';\n  /** @type {string} */\n\n  var extLimitAfterLikelyLabel = '15';\n  /** @type {string} */\n\n  var extLimitAfterAmbiguousChar = '9';\n  /** @type {string} */\n\n  var extLimitWhenNotSure = '6';\n  /** @type {string} */\n\n  var possibleSeparatorsBetweenNumberAndExtLabel = \"[ \\xA0\\\\t,]*\"; // Optional full stop (.) or colon, followed by zero or more spaces/tabs/commas.\n\n  /** @type {string} */\n\n  var possibleCharsAfterExtLabel = \"[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*\";\n  /** @type {string} */\n\n  var optionalExtnSuffix = \"#?\"; // Here the extension is called out in more explicit way, i.e mentioning it obvious\n  // patterns like \"ext.\".\n\n  /** @type {string} */\n\n  var explicitExtLabels = \"(?:e?xt(?:ensi(?:o\\u0301?|\\xF3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|\\u0434\\u043E\\u0431|anexo)\"; // One-character symbols that can be used to indicate an extension, and less\n  // commonly used or more ambiguous extension labels.\n\n  /** @type {string} */\n\n  var ambiguousExtLabels = \"(?:[x\\uFF58#\\uFF03~\\uFF5E]|int|\\uFF49\\uFF4E\\uFF54)\"; // When extension is not separated clearly.\n\n  /** @type {string} */\n\n  var ambiguousSeparator = \"[- ]+\"; // This is the same as possibleSeparatorsBetweenNumberAndExtLabel, but not matching\n  // comma as extension label may have it.\n\n  /** @type {string} */\n\n  var possibleSeparatorsNumberExtLabelNoComma = \"[ \\xA0\\\\t]*\"; // \",,\" is commonly used for auto dialling the extension when connected. First\n  // comma is matched through possibleSeparatorsBetweenNumberAndExtLabel, so we do\n  // not repeat it here. Semi-colon works in Iphone and Android also to pop up a\n  // button with the extension number following.\n\n  /** @type {string} */\n\n  var autoDiallingAndExtLabelsFound = \"(?:,{2}|;)\";\n  /** @type {string} */\n\n  var rfcExtn = RFC3966_EXTN_PREFIX + getExtensionDigitsPattern(extLimitAfterExplicitLabel);\n  /** @type {string} */\n\n  var explicitExtn = possibleSeparatorsBetweenNumberAndExtLabel + explicitExtLabels + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterExplicitLabel) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var ambiguousExtn = possibleSeparatorsBetweenNumberAndExtLabel + ambiguousExtLabels + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterAmbiguousChar) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var americanStyleExtnWithSuffix = ambiguousSeparator + getExtensionDigitsPattern(extLimitWhenNotSure) + \"#\";\n  /** @type {string} */\n\n  var autoDiallingExtn = possibleSeparatorsNumberExtLabelNoComma + autoDiallingAndExtLabelsFound + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterLikelyLabel) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var onlyCommasExtn = possibleSeparatorsNumberExtLabelNoComma + \"(?:,)+\" + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterAmbiguousChar) + optionalExtnSuffix; // The first regular expression covers RFC 3966 format, where the extension is added\n  // using \";ext=\". The second more generic where extension is mentioned with explicit\n  // labels like \"ext:\". In both the above cases we allow more numbers in extension than\n  // any other extension labels. The third one captures when single character extension\n  // labels or less commonly used labels are used. In such cases we capture fewer\n  // extension digits in order to reduce the chance of falsely interpreting two\n  // numbers beside each other as a number + extension. The fourth one covers the\n  // special case of American numbers where the extension is written with a hash\n  // at the end, such as \"- 503#\". The fifth one is exclusively for extension\n  // autodialling formats which are used when dialling and in this case we accept longer\n  // extensions. The last one is more liberal on the number of commas that acts as\n  // extension labels, so we have a strict cap on the number of digits in such extensions.\n\n  return rfcExtn + \"|\" + explicitExtn + \"|\" + ambiguousExtn + \"|\" + americanStyleExtnWithSuffix + \"|\" + autoDiallingExtn + \"|\" + onlyCommasExtn;\n}\n//# sourceMappingURL=createExtensionPattern.js.map","import { MIN_LENGTH_FOR_NSN, VALID_DIGITS, VALID_PUNCTUATION, PLUS_CHARS } from '../constants.js';\nimport createExtensionPattern from './extension/createExtensionPattern.js'; //  Regular expression of viable phone numbers. This is location independent.\n//  Checks we have at least three leading digits, and only valid punctuation,\n//  alpha characters and digits in the phone number. Does not include extension\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\n//  used as a placeholder for carrier codes, for example in Brazilian phone\n//  numbers. We also allow multiple '+' characters at the start.\n//\n//  Corresponds to the following:\n//  [digits]{minLengthNsn}|\n//  plus_sign*\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\n//\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\n//  The second expression restricts the number of digits to three or more, but\n//  then allows them to be in international form, and to have alpha-characters\n//  and punctuation. We split up the two reg-exes here and combine them when\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\n//  with ^ and append $ to each branch.\n//\n//  \"Note VALID_PUNCTUATION starts with a -,\n//   so must be the first in the range\" (c) Google devs.\n//  (wtf did they mean by saying that; probably nothing)\n//\n\nvar MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}'; //\n// And this is the second reg-exp:\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\n//\n\nexport var VALID_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){3,}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*'; // This regular expression isn't present in Google's `libphonenumber`\n// and is only used to determine whether the phone number being input\n// is too short for it to even consider it a \"valid\" number.\n// This is just a way to differentiate between a really invalid phone\n// number like \"abcde\" and a valid phone number that a user has just\n// started inputting, like \"+1\" or \"1\": both these cases would be\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\n// library can provide a more detailed error message — whether it's\n// really \"not a number\", or is it just a start of a valid phone number.\n\nvar VALID_PHONE_NUMBER_START_REG_EXP = new RegExp('^' + '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){1,2}' + '$', 'i');\nexport var VALID_PHONE_NUMBER_WITH_EXTENSION = VALID_PHONE_NUMBER + // Phone number extensions\n'(?:' + createExtensionPattern() + ')?'; // The combined regular expression for valid phone numbers:\n//\n\nvar VALID_PHONE_NUMBER_PATTERN = new RegExp( // Either a short two-digit-only phone number\n'^' + MIN_LENGTH_PHONE_NUMBER_PATTERN + '$' + '|' + // Or a longer fully parsed phone number (min 3 characters)\n'^' + VALID_PHONE_NUMBER_WITH_EXTENSION + '$', 'i'); // Checks to see if the string of characters could possibly be a phone number at\n// all. At the moment, checks to see that the string begins with at least 2\n// digits, ignoring any punctuation commonly found in phone numbers. This method\n// does not require the number to be normalized in advance - but does assume\n// that leading non-number symbols have been removed, such as by the method\n// `extract_possible_number`.\n//\n\nexport default function isViablePhoneNumber(number) {\n  return number.length >= MIN_LENGTH_FOR_NSN && VALID_PHONE_NUMBER_PATTERN.test(number);\n} // This is just a way to differentiate between a really invalid phone\n// number like \"abcde\" and a valid phone number that a user has just\n// started inputting, like \"+1\" or \"1\": both these cases would be\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\n// library can provide a more detailed error message — whether it's\n// really \"not a number\", or is it just a start of a valid phone number.\n\nexport function isViablePhoneNumberStart(number) {\n  return VALID_PHONE_NUMBER_START_REG_EXP.test(number);\n}\n//# sourceMappingURL=isViablePhoneNumber.js.map","import createExtensionPattern from './createExtensionPattern.js'; // Regexp of all known extension prefixes used by different regions followed by\n// 1 or more valid digits, for use when parsing.\n\nvar EXTN_PATTERN = new RegExp('(?:' + createExtensionPattern() + ')$', 'i'); // Strips any extension (as in, the part of the number dialled after the call is\n// connected, usually indicated with extn, ext, x or similar) from the end of\n// the number, and returns it.\n\nexport default function extractExtension(number) {\n  var start = number.search(EXTN_PATTERN);\n\n  if (start < 0) {\n    return {};\n  } // If we find a potential extension, and the number preceding this is a viable\n  // number, we assume it is an extension.\n\n\n  var numberWithoutExtension = number.slice(0, start);\n  var matches = number.match(EXTN_PATTERN);\n  var i = 1;\n\n  while (i < matches.length) {\n    if (matches[i]) {\n      return {\n        number: numberWithoutExtension,\n        ext: matches[i]\n      };\n    }\n\n    i++;\n  }\n}\n//# sourceMappingURL=extractExtension.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// These mappings map a character (key) to a specific digit that should\n// replace it for normalization purposes. Non-European digits that\n// may be used in phone numbers are mapped to a European equivalent.\n//\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\n//\nexport var DIGITS = {\n  '0': '0',\n  '1': '1',\n  '2': '2',\n  '3': '3',\n  '4': '4',\n  '5': '5',\n  '6': '6',\n  '7': '7',\n  '8': '8',\n  '9': '9',\n  \"\\uFF10\": '0',\n  // Fullwidth digit 0\n  \"\\uFF11\": '1',\n  // Fullwidth digit 1\n  \"\\uFF12\": '2',\n  // Fullwidth digit 2\n  \"\\uFF13\": '3',\n  // Fullwidth digit 3\n  \"\\uFF14\": '4',\n  // Fullwidth digit 4\n  \"\\uFF15\": '5',\n  // Fullwidth digit 5\n  \"\\uFF16\": '6',\n  // Fullwidth digit 6\n  \"\\uFF17\": '7',\n  // Fullwidth digit 7\n  \"\\uFF18\": '8',\n  // Fullwidth digit 8\n  \"\\uFF19\": '9',\n  // Fullwidth digit 9\n  \"\\u0660\": '0',\n  // Arabic-indic digit 0\n  \"\\u0661\": '1',\n  // Arabic-indic digit 1\n  \"\\u0662\": '2',\n  // Arabic-indic digit 2\n  \"\\u0663\": '3',\n  // Arabic-indic digit 3\n  \"\\u0664\": '4',\n  // Arabic-indic digit 4\n  \"\\u0665\": '5',\n  // Arabic-indic digit 5\n  \"\\u0666\": '6',\n  // Arabic-indic digit 6\n  \"\\u0667\": '7',\n  // Arabic-indic digit 7\n  \"\\u0668\": '8',\n  // Arabic-indic digit 8\n  \"\\u0669\": '9',\n  // Arabic-indic digit 9\n  \"\\u06F0\": '0',\n  // Eastern-Arabic digit 0\n  \"\\u06F1\": '1',\n  // Eastern-Arabic digit 1\n  \"\\u06F2\": '2',\n  // Eastern-Arabic digit 2\n  \"\\u06F3\": '3',\n  // Eastern-Arabic digit 3\n  \"\\u06F4\": '4',\n  // Eastern-Arabic digit 4\n  \"\\u06F5\": '5',\n  // Eastern-Arabic digit 5\n  \"\\u06F6\": '6',\n  // Eastern-Arabic digit 6\n  \"\\u06F7\": '7',\n  // Eastern-Arabic digit 7\n  \"\\u06F8\": '8',\n  // Eastern-Arabic digit 8\n  \"\\u06F9\": '9' // Eastern-Arabic digit 9\n\n};\nexport function parseDigit(character) {\n  return DIGITS[character];\n}\n/**\r\n * Parses phone number digits from a string.\r\n * Drops all punctuation leaving only digits.\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * parseDigits('8 (800) 555')\r\n * // Outputs '8800555'.\r\n * ```\r\n */\n\nexport default function parseDigits(string) {\n  var result = ''; // Using `.split('')` here instead of normal `for ... of`\n  // because the importing application doesn't neccessarily include an ES6 polyfill.\n  // The `.split('')` approach discards \"exotic\" UTF-8 characters\n  // (the ones consisting of four bytes) but digits\n  // (including non-European ones) don't fall into that range\n  // so such \"exotic\" characters would be discarded anyway.\n\n  for (var _iterator = _createForOfIteratorHelperLoose(string.split('')), _step; !(_step = _iterator()).done;) {\n    var character = _step.value;\n    var digit = parseDigit(character);\n\n    if (digit) {\n      result += digit;\n    }\n  }\n\n  return result;\n}\n//# sourceMappingURL=parseDigits.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { parseDigit } from './helpers/parseDigits.js';\n/**\r\n * Parses phone number characters from a string.\r\n * Drops all punctuation leaving only digits and the leading `+` sign (if any).\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * // Outputs '8800555'.\r\n * parseIncompletePhoneNumber('8 (800) 555')\r\n * // Outputs '+7800555'.\r\n * parseIncompletePhoneNumber('+7 800 555')\r\n * ```\r\n */\n\nexport default function parseIncompletePhoneNumber(string) {\n  var result = ''; // Using `.split('')` here instead of normal `for ... of`\n  // because the importing application doesn't neccessarily include an ES6 polyfill.\n  // The `.split('')` approach discards \"exotic\" UTF-8 characters\n  // (the ones consisting of four bytes) but digits\n  // (including non-European ones) don't fall into that range\n  // so such \"exotic\" characters would be discarded anyway.\n\n  for (var _iterator = _createForOfIteratorHelperLoose(string.split('')), _step; !(_step = _iterator()).done;) {\n    var character = _step.value;\n    result += parsePhoneNumberCharacter(character, result) || '';\n  }\n\n  return result;\n}\n/**\r\n * Parses next character while parsing phone number digits (including a `+`)\r\n * from text: discards everything except `+` and digits, and `+` is only allowed\r\n * at the start of a phone number.\r\n * For example, is used in `react-phone-number-input` where it uses\r\n * [`input-format`](https://gitlab.com/catamphetamine/input-format).\r\n * @param  {string} character - Yet another character from raw input string.\r\n * @param  {string?} prevParsedCharacters - Previous parsed characters.\r\n * @param  {object} meta - Optional custom use-case-specific metadata.\r\n * @return {string?} The parsed character.\r\n */\n\nexport function parsePhoneNumberCharacter(character, prevParsedCharacters) {\n  // Only allow a leading `+`.\n  if (character === '+') {\n    // If this `+` is not the first parsed character\n    // then discard it.\n    if (prevParsedCharacters) {\n      return;\n    }\n\n    return '+';\n  } // Allow digits.\n\n\n  return parseDigit(character);\n}\n//# sourceMappingURL=parseIncompletePhoneNumber.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\r\n * Merges two arrays.\r\n * @param  {*} a\r\n * @param  {*} b\r\n * @return {*}\r\n */\nexport default function mergeArrays(a, b) {\n  var merged = a.slice();\n\n  for (var _iterator = _createForOfIteratorHelperLoose(b), _step; !(_step = _iterator()).done;) {\n    var element = _step.value;\n\n    if (a.indexOf(element) < 0) {\n      merged.push(element);\n    }\n  }\n\n  return merged.sort(function (a, b) {\n    return a - b;\n  }); // ES6 version, requires Set polyfill.\n  // let merged = new Set(a)\n  // for (const element of b) {\n  // \tmerged.add(i)\n  // }\n  // return Array.from(merged).sort((a, b) => a - b)\n}\n//# sourceMappingURL=mergeArrays.js.map","import mergeArrays from './mergeArrays.js';\nexport default function checkNumberLength(nationalNumber, metadata) {\n  return checkNumberLengthForType(nationalNumber, undefined, metadata);\n} // Checks whether a number is possible for the country based on its length.\n// Should only be called for the \"new\" metadata which has \"possible lengths\".\n\nexport function checkNumberLengthForType(nationalNumber, type, metadata) {\n  var type_info = metadata.type(type); // There should always be \"<possiblePengths/>\" set for every type element.\n  // This is declared in the XML schema.\n  // For size efficiency, where a sub-description (e.g. fixed-line)\n  // has the same \"<possiblePengths/>\" as the \"general description\", this is missing,\n  // so we fall back to the \"general description\". Where no numbers of the type\n  // exist at all, there is one possible length (-1) which is guaranteed\n  // not to match the length of any real phone number.\n\n  var possible_lengths = type_info && type_info.possibleLengths() || metadata.possibleLengths(); // let local_lengths    = type_info && type.possibleLengthsLocal() || metadata.possibleLengthsLocal()\n  // Metadata before version `1.0.18` didn't contain `possible_lengths`.\n\n  if (!possible_lengths) {\n    return 'IS_POSSIBLE';\n  }\n\n  if (type === 'FIXED_LINE_OR_MOBILE') {\n    // No such country in metadata.\n\n    /* istanbul ignore next */\n    if (!metadata.type('FIXED_LINE')) {\n      // The rare case has been encountered where no fixedLine data is available\n      // (true for some non-geographic entities), so we just check mobile.\n      return checkNumberLengthForType(nationalNumber, 'MOBILE', metadata);\n    }\n\n    var mobile_type = metadata.type('MOBILE');\n\n    if (mobile_type) {\n      // Merge the mobile data in if there was any. \"Concat\" creates a new\n      // array, it doesn't edit possible_lengths in place, so we don't need a copy.\n      // Note that when adding the possible lengths from mobile, we have\n      // to again check they aren't empty since if they are this indicates\n      // they are the same as the general desc and should be obtained from there.\n      possible_lengths = mergeArrays(possible_lengths, mobile_type.possibleLengths()); // The current list is sorted; we need to merge in the new list and\n      // re-sort (duplicates are okay). Sorting isn't so expensive because\n      // the lists are very small.\n      // if (local_lengths) {\n      // \tlocal_lengths = mergeArrays(local_lengths, mobile_type.possibleLengthsLocal())\n      // } else {\n      // \tlocal_lengths = mobile_type.possibleLengthsLocal()\n      // }\n    }\n  } // If the type doesn't exist then return 'INVALID_LENGTH'.\n  else if (type && !type_info) {\n    return 'INVALID_LENGTH';\n  }\n\n  var actual_length = nationalNumber.length; // In `libphonenumber-js` all \"local-only\" formats are dropped for simplicity.\n  // // This is safe because there is never an overlap beween the possible lengths\n  // // and the local-only lengths; this is checked at build time.\n  // if (local_lengths && local_lengths.indexOf(nationalNumber.length) >= 0)\n  // {\n  // \treturn 'IS_POSSIBLE_LOCAL_ONLY'\n  // }\n\n  var minimum_length = possible_lengths[0];\n\n  if (minimum_length === actual_length) {\n    return 'IS_POSSIBLE';\n  }\n\n  if (minimum_length > actual_length) {\n    return 'TOO_SHORT';\n  }\n\n  if (possible_lengths[possible_lengths.length - 1] < actual_length) {\n    return 'TOO_LONG';\n  } // We skip the first element since we've already checked it.\n\n\n  return possible_lengths.indexOf(actual_length, 1) >= 0 ? 'IS_POSSIBLE' : 'INVALID_LENGTH';\n}\n//# sourceMappingURL=checkNumberLength.js.map","import Metadata from './metadata.js';\nimport checkNumberLength from './helpers/checkNumberLength.js';\n/**\r\n * Checks if a phone number is \"possible\" (basically just checks its length).\r\n *\r\n * isPossible(phoneNumberInstance, { ..., v2: true }, metadata)\r\n *\r\n * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)\r\n * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\n\nexport default function isPossiblePhoneNumber(input, options, metadata) {\n  /* istanbul ignore if */\n  if (options === undefined) {\n    options = {};\n  }\n\n  metadata = new Metadata(metadata);\n\n  if (options.v2) {\n    if (!input.countryCallingCode) {\n      throw new Error('Invalid phone number object passed');\n    }\n\n    metadata.selectNumberingPlan(input.countryCallingCode);\n  } else {\n    if (!input.phone) {\n      return false;\n    }\n\n    if (input.country) {\n      if (!metadata.hasCountry(input.country)) {\n        throw new Error(\"Unknown country: \".concat(input.country));\n      }\n\n      metadata.country(input.country);\n    } else {\n      if (!input.countryCallingCode) {\n        throw new Error('Invalid phone number object passed');\n      }\n\n      metadata.selectNumberingPlan(input.countryCallingCode);\n    }\n  } // Old metadata (< 1.0.18) had no \"possible length\" data.\n\n\n  if (metadata.possibleLengths()) {\n    return isPossibleNumber(input.phone || input.nationalNumber, metadata);\n  } else {\n    // There was a bug between `1.7.35` and `1.7.37` where \"possible_lengths\"\n    // were missing for \"non-geographical\" numbering plans.\n    // Just assume the number is possible in such cases:\n    // it's unlikely that anyone generated their custom metadata\n    // in that short period of time (one day).\n    // This code can be removed in some future major version update.\n    if (input.countryCallingCode && metadata.isNonGeographicCallingCode(input.countryCallingCode)) {\n      // \"Non-geographic entities\" did't have `possibleLengths`\n      // due to a bug in metadata generation process.\n      return true;\n    } else {\n      throw new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\n    }\n  }\n}\nexport function isPossibleNumber(nationalNumber, metadata) {\n  //, isInternational) {\n  switch (checkNumberLength(nationalNumber, metadata)) {\n    case 'IS_POSSIBLE':\n      return true;\n    // This library ignores \"local-only\" phone numbers (for simplicity).\n    // See the readme for more info on what are \"local-only\" phone numbers.\n    // case 'IS_POSSIBLE_LOCAL_ONLY':\n    // \treturn !isInternational\n\n    default:\n      return false;\n  }\n}\n//# sourceMappingURL=isPossible.js.map","/**\r\n * Checks whether the entire input sequence can be matched\r\n * against the regular expression.\r\n * @return {boolean}\r\n */\nexport default function matchesEntirely(text, regular_expression) {\n  // If assigning the `''` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  text = text || '';\n  return new RegExp('^(?:' + regular_expression + ')$').test(text);\n}\n//# sourceMappingURL=matchesEntirely.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport Metadata from '../metadata.js';\nimport matchesEntirely from './matchesEntirely.js';\nvar NON_FIXED_LINE_PHONE_TYPES = ['MOBILE', 'PREMIUM_RATE', 'TOLL_FREE', 'SHARED_COST', 'VOIP', 'PERSONAL_NUMBER', 'PAGER', 'UAN', 'VOICEMAIL']; // Finds out national phone number type (fixed line, mobile, etc)\n\nexport default function getNumberType(input, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {}; // When `parse()` returned `{}`\n  // meaning that the phone number is not a valid one.\n\n  if (!input.country) {\n    return;\n  }\n\n  metadata = new Metadata(metadata);\n  metadata.selectNumberingPlan(input.country, input.countryCallingCode);\n  var nationalNumber = options.v2 ? input.nationalNumber : input.phone; // The following is copy-pasted from the original function:\n  // https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\n  // Is this national number even valid for this country\n\n  if (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())) {\n    return;\n  } // Is it fixed line number\n\n\n  if (isNumberTypeEqualTo(nationalNumber, 'FIXED_LINE', metadata)) {\n    // Because duplicate regular expressions are removed\n    // to reduce metadata size, if \"mobile\" pattern is \"\"\n    // then it means it was removed due to being a duplicate of the fixed-line pattern.\n    //\n    if (metadata.type('MOBILE') && metadata.type('MOBILE').pattern() === '') {\n      return 'FIXED_LINE_OR_MOBILE';\n    } // `MOBILE` type pattern isn't included if it matched `FIXED_LINE` one.\n    // For example, for \"US\" country.\n    // Old metadata (< `1.0.18`) had a specific \"types\" data structure\n    // that happened to be `undefined` for `MOBILE` in that case.\n    // Newer metadata (>= `1.0.18`) has another data structure that is\n    // not `undefined` for `MOBILE` in that case (it's just an empty array).\n    // So this `if` is just for backwards compatibility with old metadata.\n\n\n    if (!metadata.type('MOBILE')) {\n      return 'FIXED_LINE_OR_MOBILE';\n    } // Check if the number happens to qualify as both fixed line and mobile.\n    // (no such country in the minimal metadata set)\n\n    /* istanbul ignore if */\n\n\n    if (isNumberTypeEqualTo(nationalNumber, 'MOBILE', metadata)) {\n      return 'FIXED_LINE_OR_MOBILE';\n    }\n\n    return 'FIXED_LINE';\n  }\n\n  for (var _iterator = _createForOfIteratorHelperLoose(NON_FIXED_LINE_PHONE_TYPES), _step; !(_step = _iterator()).done;) {\n    var type = _step.value;\n\n    if (isNumberTypeEqualTo(nationalNumber, type, metadata)) {\n      return type;\n    }\n  }\n}\nexport function isNumberTypeEqualTo(nationalNumber, type, metadata) {\n  type = metadata.type(type);\n\n  if (!type || !type.pattern()) {\n    return false;\n  } // Check if any possible number lengths are present;\n  // if so, we use them to avoid checking\n  // the validation pattern if they don't match.\n  // If they are absent, this means they match\n  // the general description, which we have\n  // already checked before a specific number type.\n\n\n  if (type.possibleLengths() && type.possibleLengths().indexOf(nationalNumber.length) < 0) {\n    return false;\n  }\n\n  return matchesEntirely(nationalNumber, type.pattern());\n}\n//# sourceMappingURL=getNumberType.js.map","import Metadata from './metadata.js';\nimport matchesEntirely from './helpers/matchesEntirely.js';\nimport getNumberType from './helpers/getNumberType.js';\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * isValid(phoneNumberInstance, { ..., v2: true }, metadata)\r\n *\r\n * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)\r\n * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters (including punctuation).\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The optional `defaultCountry` argument is the default country.\r\n * I.e. it does not restrict to just that country,\r\n * e.g. in those cases where several countries share\r\n * the same phone numbering rules (NANPA, Britain, etc).\r\n * For example, even though the number `07624 369230`\r\n * belongs to the Isle of Man (\"IM\" country code)\r\n * calling `isValidNumber('07624369230', 'GB', metadata)`\r\n * still returns `true` because the country is not restricted to `GB`,\r\n * it's just that `GB` is the default one for the phone numbering rules.\r\n * For restricting the country see `isValidNumberForRegion()`\r\n * though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isValidNumber('+78005553535', metadata)\r\n * isValidNumber('8005553535', 'RU', metadata)\r\n * isValidNumber('88005553535', 'RU', metadata)\r\n * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\n\nexport default function isValidNumber(input, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {};\n  metadata = new Metadata(metadata);\n  /**\r\n   * Checks if a phone number is \"possible\" (basically just checks its length).\r\n   *\r\n   * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n   * @param  {object} [options]\r\n   * @param  {object} metadata\r\n   * @return {string}\r\n   */\n\n  metadata.selectNumberingPlan(input.country, input.countryCallingCode); // By default, countries only have type regexps when it's required for\n  // distinguishing different countries having the same `countryCallingCode`.\n\n  if (metadata.hasTypes()) {\n    return getNumberType(input, options, metadata.metadata) !== undefined;\n  } // If there are no type regexps for this country in metadata then use\n  // `nationalNumberPattern` as a \"better than nothing\" replacement.\n\n\n  var nationalNumber = options.v2 ? input.nationalNumber : input.phone;\n  return matchesEntirely(nationalNumber, metadata.nationalNumberPattern());\n}\n//# sourceMappingURL=isValid.js.map","import Metadata from '../metadata.js';\n/**\r\n * Returns a list of countries that the phone number could potentially belong to.\r\n * @param  {string} callingCode — Calling code.\r\n * @param  {string} nationalNumber — National (significant) number.\r\n * @param  {object} metadata — Metadata.\r\n * @return {string[]} A list of possible countries.\r\n */\n\nexport default function getPossibleCountriesForNumber(callingCode, nationalNumber, metadata) {\n  var _metadata = new Metadata(metadata);\n\n  var possibleCountries = _metadata.getCountryCodesForCallingCode(callingCode);\n\n  if (!possibleCountries) {\n    return [];\n  }\n\n  return possibleCountries.filter(function (country) {\n    return couldNationalNumberBelongToCountry(nationalNumber, country, metadata);\n  });\n}\n\nfunction couldNationalNumberBelongToCountry(nationalNumber, country, metadata) {\n  var _metadata = new Metadata(metadata);\n\n  _metadata.selectNumberingPlan(country);\n\n  if (_metadata.numberingPlan.possibleLengths().indexOf(nationalNumber.length) >= 0) {\n    return true;\n  }\n\n  return false;\n}\n//# sourceMappingURL=getPossibleCountriesForNumber.js.map","import { VALID_PUNCTUATION } from '../constants.js'; // Removes brackets and replaces dashes with spaces.\n//\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\n//\n// For some reason Google's metadata contains `<intlFormat/>`s with brackets and dashes.\n// Meanwhile, there's no single opinion about using punctuation in international phone numbers.\n//\n// For example, Google's `<intlFormat/>` for USA is `+1 213-373-4253`.\n// And here's a quote from WikiPedia's \"North American Numbering Plan\" page:\n// https://en.wikipedia.org/wiki/North_American_Numbering_Plan\n//\n// \"The country calling code for all countries participating in the NANP is 1.\n// In international format, an NANP number should be listed as +1 301 555 01 00,\n// where 301 is an area code (Maryland).\"\n//\n// I personally prefer the international format without any punctuation.\n// For example, brackets are remnants of the old age, meaning that the\n// phone number part in brackets (so called \"area code\") can be omitted\n// if dialing within the same \"area\".\n// And hyphens were clearly introduced for splitting local numbers into memorizable groups.\n// For example, remembering \"5553535\" is difficult but \"555-35-35\" is much simpler.\n// Imagine a man taking a bus from home to work and seeing an ad with a phone number.\n// He has a couple of seconds to memorize that number until it passes by.\n// If it were spaces instead of hyphens the man wouldn't necessarily get it,\n// but with hyphens instead of spaces the grouping is more explicit.\n// I personally think that hyphens introduce visual clutter,\n// so I prefer replacing them with spaces in international numbers.\n// In the modern age all output is done on displays where spaces are clearly distinguishable\n// so hyphens can be safely replaced with spaces without losing any legibility.\n//\n\nexport default function applyInternationalSeparatorStyle(formattedNumber) {\n  return formattedNumber.replace(new RegExp(\"[\".concat(VALID_PUNCTUATION, \"]+\"), 'g'), ' ').trim();\n}\n//# sourceMappingURL=applyInternationalSeparatorStyle.js.map","import applyInternationalSeparatorStyle from './applyInternationalSeparatorStyle.js'; // This was originally set to $1 but there are some countries for which the\n// first group is not used in the national pattern (e.g. Argentina) so the $1\n// group does not match correctly. Therefore, we use `\\d`, so that the first\n// group actually used in the pattern will be matched.\n\nexport var FIRST_GROUP_PATTERN = /(\\$\\d)/;\nexport default function formatNationalNumberUsingFormat(number, format, _ref) {\n  var useInternationalFormat = _ref.useInternationalFormat,\n      withNationalPrefix = _ref.withNationalPrefix,\n      carrierCode = _ref.carrierCode,\n      metadata = _ref.metadata;\n  var formattedNumber = number.replace(new RegExp(format.pattern()), useInternationalFormat ? format.internationalFormat() : // This library doesn't use `domestic_carrier_code_formatting_rule`,\n  // because that one is only used when formatting phone numbers\n  // for dialing from a mobile phone, and this is not a dialing library.\n  // carrierCode && format.domesticCarrierCodeFormattingRule()\n  // \t// First, replace the $CC in the formatting rule with the desired carrier code.\n  // \t// Then, replace the $FG in the formatting rule with the first group\n  // \t// and the carrier code combined in the appropriate way.\n  // \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\n  // \t: (\n  // \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\n  // \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\n  // \t\t\t: format.format()\n  // \t)\n  withNationalPrefix && format.nationalPrefixFormattingRule() ? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule()) : format.format());\n\n  if (useInternationalFormat) {\n    return applyInternationalSeparatorStyle(formattedNumber);\n  }\n\n  return formattedNumber;\n}\n//# sourceMappingURL=formatNationalNumberUsingFormat.js.map","import Metadata from '../metadata.js';\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\n\nvar SINGLE_IDD_PREFIX_REG_EXP = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/; // For regions that have multiple IDD prefixes\n// a preferred IDD prefix is returned.\n\nexport default function getIddPrefix(country, callingCode, metadata) {\n  var countryMetadata = new Metadata(metadata);\n  countryMetadata.selectNumberingPlan(country, callingCode);\n\n  if (countryMetadata.defaultIDDPrefix()) {\n    return countryMetadata.defaultIDDPrefix();\n  }\n\n  if (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) {\n    return countryMetadata.IDDPrefix();\n  }\n}\n//# sourceMappingURL=getIddPrefix.js.map","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport isViablePhoneNumber from './isViablePhoneNumber.js'; // https://www.ietf.org/rfc/rfc3966.txt\n\n/**\r\n * @param  {string} text - Phone URI (RFC 3966).\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\n\nexport function parseRFC3966(text) {\n  var number;\n  var ext; // Replace \"tel:\" with \"tel=\" for parsing convenience.\n\n  text = text.replace(/^tel:/, 'tel=');\n\n  for (var _iterator = _createForOfIteratorHelperLoose(text.split(';')), _step; !(_step = _iterator()).done;) {\n    var part = _step.value;\n\n    var _part$split = part.split('='),\n        _part$split2 = _slicedToArray(_part$split, 2),\n        name = _part$split2[0],\n        value = _part$split2[1];\n\n    switch (name) {\n      case 'tel':\n        number = value;\n        break;\n\n      case 'ext':\n        ext = value;\n        break;\n\n      case 'phone-context':\n        // Only \"country contexts\" are supported.\n        // \"Domain contexts\" are ignored.\n        if (value[0] === '+') {\n          number = value + number;\n        }\n\n        break;\n    }\n  } // If the phone number is not viable, then abort.\n\n\n  if (!isViablePhoneNumber(number)) {\n    return {};\n  }\n\n  var result = {\n    number: number\n  };\n\n  if (ext) {\n    result.ext = ext;\n  }\n\n  return result;\n}\n/**\r\n * @param  {object} - `{ ?number, ?extension }`.\r\n * @return {string} Phone URI (RFC 3966).\r\n */\n\nexport function formatRFC3966(_ref) {\n  var number = _ref.number,\n      ext = _ref.ext;\n\n  if (!number) {\n    return '';\n  }\n\n  if (number[0] !== '+') {\n    throw new Error(\"\\\"formatRFC3966()\\\" expects \\\"number\\\" to be in E.164 format.\");\n  }\n\n  return \"tel:\".concat(number).concat(ext ? ';ext=' + ext : '');\n}\n//# sourceMappingURL=RFC3966.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of December 31th, 2018.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\nimport matchesEntirely from './helpers/matchesEntirely.js';\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat.js';\nimport Metadata, { getCountryCallingCode } from './metadata.js';\nimport getIddPrefix from './helpers/getIddPrefix.js';\nimport { formatRFC3966 } from './helpers/RFC3966.js';\nvar DEFAULT_OPTIONS = {\n  formatExtension: function formatExtension(formattedNumber, extension, metadata) {\n    return \"\".concat(formattedNumber).concat(metadata.ext()).concat(extension);\n  }\n};\n/**\r\n * Formats a phone number.\r\n *\r\n * format(phoneNumberInstance, 'INTERNATIONAL', { ..., v2: true }, metadata)\r\n * format(phoneNumberInstance, 'NATIONAL', { ..., v2: true }, metadata)\r\n *\r\n * format({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL', { ... }, metadata)\r\n * format({ phone: '8005553535', country: 'RU' }, 'NATIONAL', undefined, metadata)\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {string} format\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\n\nexport default function formatNumber(input, format, options, metadata) {\n  // Apply default options.\n  if (options) {\n    options = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n  } else {\n    options = DEFAULT_OPTIONS;\n  }\n\n  metadata = new Metadata(metadata);\n\n  if (input.country && input.country !== '001') {\n    // Validate `input.country`.\n    if (!metadata.hasCountry(input.country)) {\n      throw new Error(\"Unknown country: \".concat(input.country));\n    }\n\n    metadata.country(input.country);\n  } else if (input.countryCallingCode) {\n    metadata.selectNumberingPlan(input.countryCallingCode);\n  } else return input.phone || '';\n\n  var countryCallingCode = metadata.countryCallingCode();\n  var nationalNumber = options.v2 ? input.nationalNumber : input.phone; // This variable should have been declared inside `case`s\n  // but Babel has a bug and it says \"duplicate variable declaration\".\n\n  var number;\n\n  switch (format) {\n    case 'NATIONAL':\n      // Legacy argument support.\n      // (`{ country: ..., phone: '' }`)\n      if (!nationalNumber) {\n        return '';\n      }\n\n      number = formatNationalNumber(nationalNumber, input.carrierCode, 'NATIONAL', metadata, options);\n      return addExtension(number, input.ext, metadata, options.formatExtension);\n\n    case 'INTERNATIONAL':\n      // Legacy argument support.\n      // (`{ country: ..., phone: '' }`)\n      if (!nationalNumber) {\n        return \"+\".concat(countryCallingCode);\n      }\n\n      number = formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata, options);\n      number = \"+\".concat(countryCallingCode, \" \").concat(number);\n      return addExtension(number, input.ext, metadata, options.formatExtension);\n\n    case 'E.164':\n      // `E.164` doesn't define \"phone number extensions\".\n      return \"+\".concat(countryCallingCode).concat(nationalNumber);\n\n    case 'RFC3966':\n      return formatRFC3966({\n        number: \"+\".concat(countryCallingCode).concat(nationalNumber),\n        ext: input.ext\n      });\n    // For reference, here's Google's IDD formatter:\n    // https://github.com/google/libphonenumber/blob/32719cf74e68796788d1ca45abc85dcdc63ba5b9/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L1546\n    // Not saying that this IDD formatter replicates it 1:1, but it seems to work.\n    // Who would even need to format phone numbers in IDD format anyway?\n\n    case 'IDD':\n      if (!options.fromCountry) {\n        return; // throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')\n      }\n\n      var formattedNumber = formatIDD(nationalNumber, input.carrierCode, countryCallingCode, options.fromCountry, metadata);\n      return addExtension(formattedNumber, input.ext, metadata, options.formatExtension);\n\n    default:\n      throw new Error(\"Unknown \\\"format\\\" argument passed to \\\"formatNumber()\\\": \\\"\".concat(format, \"\\\"\"));\n  }\n}\n\nfunction formatNationalNumber(number, carrierCode, formatAs, metadata, options) {\n  var format = chooseFormatForNumber(metadata.formats(), number);\n\n  if (!format) {\n    return number;\n  }\n\n  return formatNationalNumberUsingFormat(number, format, {\n    useInternationalFormat: formatAs === 'INTERNATIONAL',\n    withNationalPrefix: format.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && options && options.nationalPrefix === false ? false : true,\n    carrierCode: carrierCode,\n    metadata: metadata\n  });\n}\n\nexport function chooseFormatForNumber(availableFormats, nationalNnumber) {\n  for (var _iterator = _createForOfIteratorHelperLoose(availableFormats), _step; !(_step = _iterator()).done;) {\n    var format = _step.value;\n\n    // Validate leading digits.\n    // The test case for \"else path\" could be found by searching for\n    // \"format.leadingDigitsPatterns().length === 0\".\n    if (format.leadingDigitsPatterns().length > 0) {\n      // The last leading_digits_pattern is used here, as it is the most detailed\n      var lastLeadingDigitsPattern = format.leadingDigitsPatterns()[format.leadingDigitsPatterns().length - 1]; // If leading digits don't match then move on to the next phone number format\n\n      if (nationalNnumber.search(lastLeadingDigitsPattern) !== 0) {\n        continue;\n      }\n    } // Check that the national number matches the phone number format regular expression\n\n\n    if (matchesEntirely(nationalNnumber, format.pattern())) {\n      return format;\n    }\n  }\n}\n\nfunction addExtension(formattedNumber, ext, metadata, formatExtension) {\n  return ext ? formatExtension(formattedNumber, ext, metadata) : formattedNumber;\n}\n\nfunction formatIDD(nationalNumber, carrierCode, countryCallingCode, fromCountry, metadata) {\n  var fromCountryCallingCode = getCountryCallingCode(fromCountry, metadata.metadata); // When calling within the same country calling code.\n\n  if (fromCountryCallingCode === countryCallingCode) {\n    var formattedNumber = formatNationalNumber(nationalNumber, carrierCode, 'NATIONAL', metadata); // For NANPA regions, return the national format for these regions\n    // but prefix it with the country calling code.\n\n    if (countryCallingCode === '1') {\n      return countryCallingCode + ' ' + formattedNumber;\n    } // If regions share a country calling code, the country calling code need\n    // not be dialled. This also applies when dialling within a region, so this\n    // if clause covers both these cases. Technically this is the case for\n    // dialling from La Reunion to other overseas departments of France (French\n    // Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover\n    // this edge case for now and for those cases return the version including\n    // country calling code. Details here:\n    // http://www.petitfute.com/voyage/225-info-pratiques-reunion\n    //\n\n\n    return formattedNumber;\n  }\n\n  var iddPrefix = getIddPrefix(fromCountry, undefined, metadata.metadata);\n\n  if (iddPrefix) {\n    return \"\".concat(iddPrefix, \" \").concat(countryCallingCode, \" \").concat(formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata));\n  }\n}\n//# sourceMappingURL=format.js.map","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport Metadata from './metadata.js';\nimport isPossibleNumber from './isPossible.js';\nimport isValidNumber from './isValid.js'; // import checkNumberLength from './helpers/checkNumberLength.js'\n\nimport getNumberType from './helpers/getNumberType.js';\nimport getPossibleCountriesForNumber from './helpers/getPossibleCountriesForNumber.js';\nimport formatNumber from './format.js';\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;\n\nvar PhoneNumber = /*#__PURE__*/function () {\n  /**\r\n   * @param  {string} countryOrCountryCallingCode\r\n   * @param  {string} nationalNumber\r\n   * @param  {object} metadata — Metadata JSON\r\n   * @return {PhoneNumber}\r\n   */\n  function PhoneNumber(countryOrCountryCallingCode, nationalNumber, metadata) {\n    _classCallCheck(this, PhoneNumber);\n\n    if (!countryOrCountryCallingCode) {\n      throw new TypeError('`country` or `countryCallingCode` not passed');\n    }\n\n    if (!nationalNumber) {\n      throw new TypeError('`nationalNumber` not passed');\n    }\n\n    if (!metadata) {\n      throw new TypeError('`metadata` not passed');\n    }\n\n    var _getCountryAndCountry = getCountryAndCountryCallingCode(countryOrCountryCallingCode, metadata),\n        country = _getCountryAndCountry.country,\n        countryCallingCode = _getCountryAndCountry.countryCallingCode;\n\n    this.country = country;\n    this.countryCallingCode = countryCallingCode;\n    this.nationalNumber = nationalNumber;\n    this.number = '+' + this.countryCallingCode + this.nationalNumber; // Exclude `metadata` property output from `PhoneNumber.toString()`\n    // so that it doesn't clutter the console output of Node.js.\n    // Previously, when Node.js did `console.log(new PhoneNumber(...))`,\n    // it would output the whole internal structure of the `metadata` object.\n\n    this.getMetadata = function () {\n      return metadata;\n    };\n  }\n\n  _createClass(PhoneNumber, [{\n    key: \"setExt\",\n    value: function setExt(ext) {\n      this.ext = ext;\n    }\n  }, {\n    key: \"getPossibleCountries\",\n    value: function getPossibleCountries() {\n      if (this.country) {\n        return [this.country];\n      }\n\n      return getPossibleCountriesForNumber(this.countryCallingCode, this.nationalNumber, this.getMetadata());\n    }\n  }, {\n    key: \"isPossible\",\n    value: function isPossible() {\n      return isPossibleNumber(this, {\n        v2: true\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return isValidNumber(this, {\n        v2: true\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"isNonGeographic\",\n    value: function isNonGeographic() {\n      var metadata = new Metadata(this.getMetadata());\n      return metadata.isNonGeographicCallingCode(this.countryCallingCode);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(phoneNumber) {\n      return this.number === phoneNumber.number && this.ext === phoneNumber.ext;\n    } // This function was originally meant to be an equivalent for `validatePhoneNumberLength()`,\n    // but later it was found out that it doesn't include the possible `TOO_SHORT` result\n    // returned from `parsePhoneNumberWithError()` in the original `validatePhoneNumberLength()`,\n    // so eventually I simply commented out this method from the `PhoneNumber` class\n    // and just left the `validatePhoneNumberLength()` function, even though that one would require\n    // and additional step to also validate the actual country / calling code of the phone number.\n    // validateLength() {\n    // \tconst metadata = new Metadata(this.getMetadata())\n    // \tmetadata.selectNumberingPlan(this.countryCallingCode)\n    // \tconst result = checkNumberLength(this.nationalNumber, metadata)\n    // \tif (result !== 'IS_POSSIBLE') {\n    // \t\treturn result\n    // \t}\n    // }\n\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return getNumberType(this, {\n        v2: true\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"format\",\n    value: function format(_format, options) {\n      return formatNumber(this, _format, options ? _objectSpread(_objectSpread({}, options), {}, {\n        v2: true\n      }) : {\n        v2: true\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"formatNational\",\n    value: function formatNational(options) {\n      return this.format('NATIONAL', options);\n    }\n  }, {\n    key: \"formatInternational\",\n    value: function formatInternational(options) {\n      return this.format('INTERNATIONAL', options);\n    }\n  }, {\n    key: \"getURI\",\n    value: function getURI(options) {\n      return this.format('RFC3966', options);\n    }\n  }]);\n\n  return PhoneNumber;\n}();\n\nexport { PhoneNumber as default };\n\nvar isCountryCode = function isCountryCode(value) {\n  return /^[A-Z]{2}$/.test(value);\n};\n\nfunction getCountryAndCountryCallingCode(countryOrCountryCallingCode, metadataJson) {\n  var country;\n  var countryCallingCode;\n  var metadata = new Metadata(metadataJson); // If country code is passed then derive `countryCallingCode` from it.\n  // Also store the country code as `.country`.\n\n  if (isCountryCode(countryOrCountryCallingCode)) {\n    country = countryOrCountryCallingCode;\n    metadata.selectNumberingPlan(country);\n    countryCallingCode = metadata.countryCallingCode();\n  } else {\n    countryCallingCode = countryOrCountryCallingCode;\n    /* istanbul ignore if */\n\n    if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n      if (metadata.isNonGeographicCallingCode(countryCallingCode)) {\n        country = '001';\n      }\n    }\n  }\n\n  return {\n    country: country,\n    countryCallingCode: countryCallingCode\n  };\n}\n//# sourceMappingURL=PhoneNumber.js.map","import Metadata from '../metadata.js';\nimport { VALID_DIGITS } from '../constants.js';\nvar CAPTURING_DIGIT_PATTERN = new RegExp('([' + VALID_DIGITS + '])');\nexport default function stripIddPrefix(number, country, callingCode, metadata) {\n  if (!country) {\n    return;\n  } // Check if the number is IDD-prefixed.\n\n\n  var countryMetadata = new Metadata(metadata);\n  countryMetadata.selectNumberingPlan(country, callingCode);\n  var IDDPrefixPattern = new RegExp(countryMetadata.IDDPrefix());\n\n  if (number.search(IDDPrefixPattern) !== 0) {\n    return;\n  } // Strip IDD prefix.\n\n\n  number = number.slice(number.match(IDDPrefixPattern)[0].length); // If there're any digits after an IDD prefix,\n  // then those digits are a country calling code.\n  // Since no country code starts with a `0`,\n  // the code below validates that the next digit (if present) is not `0`.\n\n  var matchedGroups = number.match(CAPTURING_DIGIT_PATTERN);\n\n  if (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {\n    if (matchedGroups[1] === '0') {\n      return;\n    }\n  }\n\n  return number;\n}\n//# sourceMappingURL=stripIddPrefix.js.map","/**\r\n * Strips any national prefix (such as 0, 1) present in a\r\n * (possibly incomplete) number provided.\r\n * \"Carrier codes\" are only used  in Colombia and Brazil,\r\n * and only when dialing within those countries from a mobile phone to a fixed line number.\r\n * Sometimes it won't actually strip national prefix\r\n * and will instead prepend some digits to the `number`:\r\n * for example, when number `2345678` is passed with `VI` country selected,\r\n * it will return `{ number: \"3402345678\" }`, because `340` area code is prepended.\r\n * @param {string} number — National number digits.\r\n * @param {object} metadata — Metadata with country selected.\r\n * @return {object} `{ nationalNumber: string, nationalPrefix: string? carrierCode: string? }`. Even if a national prefix was extracted, it's not necessarily present in the returned object, so don't rely on its presence in the returned object in order to find out whether a national prefix has been extracted or not.\r\n */\nexport default function extractNationalNumberFromPossiblyIncompleteNumber(number, metadata) {\n  if (number && metadata.numberingPlan.nationalPrefixForParsing()) {\n    // See METADATA.md for the description of\n    // `national_prefix_for_parsing` and `national_prefix_transform_rule`.\n    // Attempt to parse the first digits as a national prefix.\n    var prefixPattern = new RegExp('^(?:' + metadata.numberingPlan.nationalPrefixForParsing() + ')');\n    var prefixMatch = prefixPattern.exec(number);\n\n    if (prefixMatch) {\n      var nationalNumber;\n      var carrierCode; // https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\n      // If a `national_prefix_for_parsing` has any \"capturing groups\"\n      // then it means that the national (significant) number is equal to\n      // those \"capturing groups\" transformed via `national_prefix_transform_rule`,\n      // and nothing could be said about the actual national prefix:\n      // what is it and was it even there.\n      // If a `national_prefix_for_parsing` doesn't have any \"capturing groups\",\n      // then everything it matches is a national prefix.\n      // To determine whether `national_prefix_for_parsing` matched any\n      // \"capturing groups\", the value of the result of calling `.exec()`\n      // is looked at, and if it has non-undefined values where there're\n      // \"capturing groups\" in the regular expression, then it means\n      // that \"capturing groups\" have been matched.\n      // It's not possible to tell whether there'll be any \"capturing gropus\"\n      // before the matching process, because a `national_prefix_for_parsing`\n      // could exhibit both behaviors.\n\n      var capturedGroupsCount = prefixMatch.length - 1;\n      var hasCapturedGroups = capturedGroupsCount > 0 && prefixMatch[capturedGroupsCount];\n\n      if (metadata.nationalPrefixTransformRule() && hasCapturedGroups) {\n        nationalNumber = number.replace(prefixPattern, metadata.nationalPrefixTransformRule()); // If there's more than one captured group,\n        // then carrier code is the second one.\n\n        if (capturedGroupsCount > 1) {\n          carrierCode = prefixMatch[1];\n        }\n      } // If there're no \"capturing groups\",\n      // or if there're \"capturing groups\" but no\n      // `national_prefix_transform_rule`,\n      // then just strip the national prefix from the number,\n      // and possibly a carrier code.\n      // Seems like there could be more.\n      else {\n        // `prefixBeforeNationalNumber` is the whole substring matched by\n        // the `national_prefix_for_parsing` regular expression.\n        // There seem to be no guarantees that it's just a national prefix.\n        // For example, if there's a carrier code, it's gonna be a\n        // part of `prefixBeforeNationalNumber` too.\n        var prefixBeforeNationalNumber = prefixMatch[0];\n        nationalNumber = number.slice(prefixBeforeNationalNumber.length); // If there's at least one captured group,\n        // then carrier code is the first one.\n\n        if (hasCapturedGroups) {\n          carrierCode = prefixMatch[1];\n        }\n      } // Tries to guess whether a national prefix was present in the input.\n      // This is not something copy-pasted from Google's library:\n      // they don't seem to have an equivalent for that.\n      // So this isn't an \"officially approved\" way of doing something like that.\n      // But since there seems no other existing method, this library uses it.\n\n\n      var nationalPrefix;\n\n      if (hasCapturedGroups) {\n        var possiblePositionOfTheFirstCapturedGroup = number.indexOf(prefixMatch[1]);\n        var possibleNationalPrefix = number.slice(0, possiblePositionOfTheFirstCapturedGroup); // Example: an Argentinian (AR) phone number `0111523456789`.\n        // `prefixMatch[0]` is `01115`, and `$1` is `11`,\n        // and the rest of the phone number is `23456789`.\n        // The national number is transformed via `9$1` to `91123456789`.\n        // National prefix `0` is detected being present at the start.\n        // if (possibleNationalPrefix.indexOf(metadata.numberingPlan.nationalPrefix()) === 0) {\n\n        if (possibleNationalPrefix === metadata.numberingPlan.nationalPrefix()) {\n          nationalPrefix = metadata.numberingPlan.nationalPrefix();\n        }\n      } else {\n        nationalPrefix = prefixMatch[0];\n      }\n\n      return {\n        nationalNumber: nationalNumber,\n        nationalPrefix: nationalPrefix,\n        carrierCode: carrierCode\n      };\n    }\n  }\n\n  return {\n    nationalNumber: number\n  };\n}\n//# sourceMappingURL=extractNationalNumberFromPossiblyIncompleteNumber.js.map","import extractNationalNumberFromPossiblyIncompleteNumber from './extractNationalNumberFromPossiblyIncompleteNumber.js';\nimport matchesEntirely from './matchesEntirely.js';\nimport checkNumberLength from './checkNumberLength.js';\n/**\r\n * Strips national prefix and carrier code from a complete phone number.\r\n * The difference from the non-\"FromCompleteNumber\" function is that\r\n * it won't extract national prefix if the resultant number is too short\r\n * to be a complete number for the selected phone numbering plan.\r\n * @param  {string} number — Complete phone number digits.\r\n * @param  {Metadata} metadata — Metadata with a phone numbering plan selected.\r\n * @return {object} `{ nationalNumber: string, carrierCode: string? }`.\r\n */\n\nexport default function extractNationalNumber(number, metadata) {\n  // Parsing national prefixes and carrier codes\n  // is only required for local phone numbers\n  // but some people don't understand that\n  // and sometimes write international phone numbers\n  // with national prefixes (or maybe even carrier codes).\n  // http://ucken.blogspot.ru/2016/03/trunk-prefixes-in-skype4b.html\n  // Google's original library forgives such mistakes\n  // and so does this library, because it has been requested:\n  // https://github.com/catamphetamine/libphonenumber-js/issues/127\n  var _extractNationalNumbe = extractNationalNumberFromPossiblyIncompleteNumber(number, metadata),\n      carrierCode = _extractNationalNumbe.carrierCode,\n      nationalNumber = _extractNationalNumbe.nationalNumber;\n\n  if (nationalNumber !== number) {\n    if (!shouldHaveExtractedNationalPrefix(number, nationalNumber, metadata)) {\n      // Don't strip the national prefix.\n      return {\n        nationalNumber: number\n      };\n    } // Check the national (significant) number length after extracting national prefix and carrier code.\n    // Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature.\n\n\n    if (metadata.possibleLengths()) {\n      // The number remaining after stripping the national prefix and carrier code\n      // should be long enough to have a possible length for the country.\n      // Otherwise, don't strip the national prefix and carrier code,\n      // since the original number could be a valid number.\n      // This check has been copy-pasted \"as is\" from Google's original library:\n      // https://github.com/google/libphonenumber/blob/876268eb1ad6cdc1b7b5bef17fc5e43052702d57/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3236-L3250\n      // It doesn't check for the \"possibility\" of the original `number`.\n      // I guess it's fine not checking that one. It works as is anyway.\n      if (!isPossibleIncompleteNationalNumber(nationalNumber, metadata)) {\n        // Don't strip the national prefix.\n        return {\n          nationalNumber: number\n        };\n      }\n    }\n  }\n\n  return {\n    nationalNumber: nationalNumber,\n    carrierCode: carrierCode\n  };\n} // In some countries, the same digit could be a national prefix\n// or a leading digit of a valid phone number.\n// For example, in Russia, national prefix is `8`,\n// and also `800 555 35 35` is a valid number\n// in which `8` is not a national prefix, but the first digit\n// of a national (significant) number.\n// Same's with Belarus:\n// `82004910060` is a valid national (significant) number,\n// but `2004910060` is not.\n// To support such cases (to prevent the code from always stripping\n// national prefix), a condition is imposed: a national prefix\n// is not extracted when the original number is \"viable\" and the\n// resultant number is not, a \"viable\" national number being the one\n// that matches `national_number_pattern`.\n\nfunction shouldHaveExtractedNationalPrefix(nationalNumberBefore, nationalNumberAfter, metadata) {\n  // The equivalent in Google's code is:\n  // https://github.com/google/libphonenumber/blob/e326fa1fc4283bb05eb35cb3c15c18f98a31af33/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2969-L3004\n  if (matchesEntirely(nationalNumberBefore, metadata.nationalNumberPattern()) && !matchesEntirely(nationalNumberAfter, metadata.nationalNumberPattern())) {\n    return false;\n  } // This \"is possible\" national number (length) check has been commented out\n  // because it's superceded by the (effectively) same check done in the\n  // `extractNationalNumber()` function after it calls `shouldHaveExtractedNationalPrefix()`.\n  // In other words, why run the same check twice if it could only be run once.\n  // // Check the national (significant) number length after extracting national prefix and carrier code.\n  // // Fixes a minor \"weird behavior\" bug: https://gitlab.com/catamphetamine/libphonenumber-js/-/issues/57\n  // // (Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature).\n  // if (metadata.possibleLengths()) {\n  // \tif (isPossibleIncompleteNationalNumber(nationalNumberBefore, metadata) &&\n  // \t\t!isPossibleIncompleteNationalNumber(nationalNumberAfter, metadata)) {\n  // \t\treturn false\n  // \t}\n  // }\n\n\n  return true;\n}\n\nfunction isPossibleIncompleteNationalNumber(nationalNumber, metadata) {\n  switch (checkNumberLength(nationalNumber, metadata)) {\n    case 'TOO_SHORT':\n    case 'INVALID_LENGTH':\n      // This library ignores \"local-only\" phone numbers (for simplicity).\n      // See the readme for more info on what are \"local-only\" phone numbers.\n      // case 'IS_POSSIBLE_LOCAL_ONLY':\n      return false;\n\n    default:\n      return true;\n  }\n}\n//# sourceMappingURL=extractNationalNumber.js.map","import Metadata from '../metadata.js';\nimport matchesEntirely from './matchesEntirely.js';\nimport extractNationalNumber from './extractNationalNumber.js';\nimport checkNumberLength from './checkNumberLength.js';\nimport getCountryCallingCode from '../getCountryCallingCode.js';\n/**\r\n * Sometimes some people incorrectly input international phone numbers\r\n * without the leading `+`. This function corrects such input.\r\n * @param  {string} number — Phone number digits.\r\n * @param  {string?} country\r\n * @param  {string?} callingCode\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`.\r\n */\n\nexport default function extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(number, country, callingCode, metadata) {\n  var countryCallingCode = country ? getCountryCallingCode(country, metadata) : callingCode;\n\n  if (number.indexOf(countryCallingCode) === 0) {\n    metadata = new Metadata(metadata);\n    metadata.selectNumberingPlan(country, callingCode);\n    var possibleShorterNumber = number.slice(countryCallingCode.length);\n\n    var _extractNationalNumbe = extractNationalNumber(possibleShorterNumber, metadata),\n        possibleShorterNationalNumber = _extractNationalNumbe.nationalNumber;\n\n    var _extractNationalNumbe2 = extractNationalNumber(number, metadata),\n        nationalNumber = _extractNationalNumbe2.nationalNumber; // If the number was not valid before but is valid now,\n    // or if it was too long before, we consider the number\n    // with the country calling code stripped to be a better result\n    // and keep that instead.\n    // For example, in Germany (+49), `49` is a valid area code,\n    // so if a number starts with `49`, it could be both a valid\n    // national German number or an international number without\n    // a leading `+`.\n\n\n    if (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern()) && matchesEntirely(possibleShorterNationalNumber, metadata.nationalNumberPattern()) || checkNumberLength(nationalNumber, metadata) === 'TOO_LONG') {\n      return {\n        countryCallingCode: countryCallingCode,\n        number: possibleShorterNumber\n      };\n    }\n  }\n\n  return {\n    number: number\n  };\n}\n//# sourceMappingURL=extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js.map","import stripIddPrefix from './stripIddPrefix.js';\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js';\nimport Metadata from '../metadata.js';\nimport { MAX_LENGTH_COUNTRY_CODE } from '../constants.js';\n/**\r\n * Converts a phone number digits (possibly with a `+`)\r\n * into a calling code and the rest phone number digits.\r\n * The \"rest phone number digits\" could include\r\n * a national prefix, carrier code, and national\r\n * (significant) number.\r\n * @param  {string} number — Phone number digits (possibly with a `+`).\r\n * @param  {string} [country] — Default country.\r\n * @param  {string} [callingCode] — Default calling code (some phone numbering plans are non-geographic).\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCodeSource: string?, countryCallingCode: string?, number: string }`\r\n * @example\r\n * // Returns `{ countryCallingCode: \"1\", number: \"2133734253\" }`.\r\n * extractCountryCallingCode('2133734253', 'US', null, metadata)\r\n * extractCountryCallingCode('2133734253', null, '1', metadata)\r\n * extractCountryCallingCode('+12133734253', null, null, metadata)\r\n * extractCountryCallingCode('+12133734253', 'RU', null, metadata)\r\n */\n\nexport default function extractCountryCallingCode(number, country, callingCode, metadata) {\n  if (!number) {\n    return {};\n  }\n\n  var isNumberWithIddPrefix; // If this is not an international phone number,\n  // then either extract an \"IDD\" prefix, or extract a\n  // country calling code from a number by autocorrecting it\n  // by prepending a leading `+` in cases when it starts\n  // with the country calling code.\n  // https://wikitravel.org/en/International_dialling_prefix\n  // https://github.com/catamphetamine/libphonenumber-js/issues/376\n\n  if (number[0] !== '+') {\n    // Convert an \"out-of-country\" dialing phone number\n    // to a proper international phone number.\n    var numberWithoutIDD = stripIddPrefix(number, country, callingCode, metadata); // If an IDD prefix was stripped then\n    // convert the number to international one\n    // for subsequent parsing.\n\n    if (numberWithoutIDD && numberWithoutIDD !== number) {\n      isNumberWithIddPrefix = true;\n      number = '+' + numberWithoutIDD;\n    } else {\n      // Check to see if the number starts with the country calling code\n      // for the default country. If so, we remove the country calling code,\n      // and do some checks on the validity of the number before and after.\n      // https://github.com/catamphetamine/libphonenumber-js/issues/376\n      if (country || callingCode) {\n        var _extractCountryCallin = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(number, country, callingCode, metadata),\n            countryCallingCode = _extractCountryCallin.countryCallingCode,\n            shorterNumber = _extractCountryCallin.number;\n\n        if (countryCallingCode) {\n          return {\n            countryCallingCodeSource: 'FROM_NUMBER_WITHOUT_PLUS_SIGN',\n            countryCallingCode: countryCallingCode,\n            number: shorterNumber\n          };\n        }\n      }\n\n      return {\n        // No need to set it to `UNSPECIFIED`. It can be just `undefined`.\n        // countryCallingCodeSource: 'UNSPECIFIED',\n        number: number\n      };\n    }\n  } // Fast abortion: country codes do not begin with a '0'\n\n\n  if (number[1] === '0') {\n    return {};\n  }\n\n  metadata = new Metadata(metadata); // The thing with country phone codes\n  // is that they are orthogonal to each other\n  // i.e. there's no such country phone code A\n  // for which country phone code B exists\n  // where B starts with A.\n  // Therefore, while scanning digits,\n  // if a valid country code is found,\n  // that means that it is the country code.\n  //\n\n  var i = 2;\n\n  while (i - 1 <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\n    var _countryCallingCode = number.slice(1, i);\n\n    if (metadata.hasCallingCode(_countryCallingCode)) {\n      metadata.selectNumberingPlan(_countryCallingCode);\n      return {\n        countryCallingCodeSource: isNumberWithIddPrefix ? 'FROM_NUMBER_WITH_IDD' : 'FROM_NUMBER_WITH_PLUS_SIGN',\n        countryCallingCode: _countryCallingCode,\n        number: number.slice(i)\n      };\n    }\n\n    i++;\n  }\n\n  return {};\n} // The possible values for the returned `countryCallingCodeSource` are:\n//\n// Copy-pasted from:\n// https://github.com/google/libphonenumber/blob/master/resources/phonenumber.proto\n//\n// // The source from which the country_code is derived. This is not set in the\n// // general parsing method, but in the method that parses and keeps raw_input.\n// // New fields could be added upon request.\n// enum CountryCodeSource {\n//  // Default value returned if this is not set, because the phone number was\n//  // created using parse, not parseAndKeepRawInput. hasCountryCodeSource will\n//  // return false if this is the case.\n//  UNSPECIFIED = 0;\n//\n//  // The country_code is derived based on a phone number with a leading \"+\",\n//  // e.g. the French number \"+33 1 42 68 53 00\".\n//  FROM_NUMBER_WITH_PLUS_SIGN = 1;\n//\n//  // The country_code is derived based on a phone number with a leading IDD,\n//  // e.g. the French number \"011 33 1 42 68 53 00\", as it is dialled from US.\n//  FROM_NUMBER_WITH_IDD = 5;\n//\n//  // The country_code is derived based on a phone number without a leading\n//  // \"+\", e.g. the French number \"33 1 42 68 53 00\" when defaultCountry is\n//  // supplied as France.\n//  FROM_NUMBER_WITHOUT_PLUS_SIGN = 10;\n//\n//  // The country_code is derived NOT based on the phone number itself, but\n//  // from the defaultCountry parameter provided in the parsing function by the\n//  // clients. This happens mostly for numbers written in the national format\n//  // (without country code). For example, this would be set when parsing the\n//  // French number \"01 42 68 53 00\", when defaultCountry is supplied as\n//  // France.\n//  FROM_DEFAULT_COUNTRY = 20;\n// }\n//# sourceMappingURL=extractCountryCallingCode.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport Metadata from '../metadata.js';\nimport getNumberType from './getNumberType.js';\nexport default function getCountryByNationalNumber(nationalPhoneNumber, _ref) {\n  var countries = _ref.countries,\n      defaultCountry = _ref.defaultCountry,\n      metadata = _ref.metadata;\n  // Re-create `metadata` because it will be selecting a `country`.\n  metadata = new Metadata(metadata);\n  var matchingCountries = [];\n\n  for (var _iterator = _createForOfIteratorHelperLoose(countries), _step; !(_step = _iterator()).done;) {\n    var country = _step.value;\n    metadata.country(country); // \"Leading digits\" patterns are only defined for about 20% of all countries.\n    // By definition, matching \"leading digits\" is a sufficient but not a necessary\n    // condition for a phone number to belong to a country.\n    // The point of \"leading digits\" check is that it's the fastest one to get a match.\n    // https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md#leading_digits\n    // I'd suppose that \"leading digits\" patterns are mutually exclusive for different countries\n    // because of the intended use of that feature.\n\n    if (metadata.leadingDigits()) {\n      if (nationalPhoneNumber && nationalPhoneNumber.search(metadata.leadingDigits()) === 0) {\n        return country;\n      }\n    } // Else perform full validation with all of those\n    // fixed-line/mobile/etc regular expressions.\n    else if (getNumberType({\n      phone: nationalPhoneNumber,\n      country: country\n    }, undefined, metadata.metadata)) {\n      // If the `defaultCountry` is among the `matchingCountries` then return it.\n      if (defaultCountry) {\n        if (country === defaultCountry) {\n          return country;\n        }\n\n        matchingCountries.push(country);\n      } else {\n        return country;\n      }\n    }\n  } // Return the first (\"main\") one of the `matchingCountries`.\n\n\n  if (matchingCountries.length > 0) {\n    return matchingCountries[0];\n  }\n}\n//# sourceMappingURL=getCountryByNationalNumber.js.map","import getCountryByNationalNumber from './getCountryByNationalNumber.js';\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;\nexport default function getCountryByCallingCode(callingCode, _ref) {\n  var nationalPhoneNumber = _ref.nationalNumber,\n      defaultCountry = _ref.defaultCountry,\n      metadata = _ref.metadata;\n\n  /* istanbul ignore if */\n  if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n    if (metadata.isNonGeographicCallingCode(callingCode)) {\n      return '001';\n    }\n  }\n\n  var possibleCountries = metadata.getCountryCodesForCallingCode(callingCode);\n\n  if (!possibleCountries) {\n    return;\n  } // If there's just one country corresponding to the country code,\n  // then just return it, without further phone number digits validation.\n\n\n  if (possibleCountries.length === 1) {\n    return possibleCountries[0];\n  }\n\n  return getCountryByNationalNumber(nationalPhoneNumber, {\n    countries: possibleCountries,\n    defaultCountry: defaultCountry,\n    metadata: metadata.metadata\n  });\n}\n//# sourceMappingURL=getCountryByCallingCode.js.map","// When phone numbers are written in `RFC3966` format — `\"tel:+12133734253\"` —\n// they can have their \"calling code\" part written separately in a `phone-context` parameter.\n// Example: `\"tel:12133734253;phone-context=+1\"`.\n// This function parses the full phone number from the local number and the `phone-context`\n// when the `phone-context` contains a `+` sign.\nimport { VALID_DIGITS // PLUS_CHARS\n} from '../constants.js';\nexport var PLUS_SIGN = '+';\nvar RFC3966_VISUAL_SEPARATOR_ = '[\\\\-\\\\.\\\\(\\\\)]?';\nvar RFC3966_PHONE_DIGIT_ = '(' + '[' + VALID_DIGITS + ']' + '|' + RFC3966_VISUAL_SEPARATOR_ + ')';\nvar RFC3966_GLOBAL_NUMBER_DIGITS_ = '^' + '\\\\' + PLUS_SIGN + RFC3966_PHONE_DIGIT_ + '*' + '[' + VALID_DIGITS + ']' + RFC3966_PHONE_DIGIT_ + '*' + '$';\n/**\r\n * Regular expression of valid global-number-digits for the phone-context\r\n * parameter, following the syntax defined in RFC3966.\r\n */\n\nvar RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_ = new RegExp(RFC3966_GLOBAL_NUMBER_DIGITS_, 'g'); // In this port of Google's library, we don't accept alpha characters in phone numbers.\n// const ALPHANUM_ = VALID_ALPHA_ + VALID_DIGITS\n\nvar ALPHANUM_ = VALID_DIGITS;\nvar RFC3966_DOMAINLABEL_ = '[' + ALPHANUM_ + ']+((\\\\-)*[' + ALPHANUM_ + '])*';\nvar VALID_ALPHA_ = 'a-zA-Z';\nvar RFC3966_TOPLABEL_ = '[' + VALID_ALPHA_ + ']+((\\\\-)*[' + ALPHANUM_ + '])*';\nvar RFC3966_DOMAINNAME_ = '^(' + RFC3966_DOMAINLABEL_ + '\\\\.)*' + RFC3966_TOPLABEL_ + '\\\\.?$';\n/**\r\n * Regular expression of valid domainname for the phone-context parameter,\r\n * following the syntax defined in RFC3966.\r\n */\n\nvar RFC3966_DOMAINNAME_PATTERN_ = new RegExp(RFC3966_DOMAINNAME_, 'g');\nexport var RFC3966_PREFIX_ = 'tel:';\nexport var RFC3966_PHONE_CONTEXT_ = ';phone-context=';\nexport var RFC3966_ISDN_SUBADDRESS_ = ';isub=';\n/**\r\n * Extracts the value of the phone-context parameter of `numberToExtractFrom`,\r\n * following the syntax defined in RFC3966.\r\n *\r\n * @param {string} numberToExtractFrom\r\n * @return {string|null} the extracted string (possibly empty), or `null` if no phone-context parameter is found.\r\n */\n\nexport default function extractPhoneContext(numberToExtractFrom) {\n  var indexOfPhoneContext = numberToExtractFrom.indexOf(RFC3966_PHONE_CONTEXT_); // If no phone-context parameter is present\n\n  if (indexOfPhoneContext < 0) {\n    return null;\n  }\n\n  var phoneContextStart = indexOfPhoneContext + RFC3966_PHONE_CONTEXT_.length; // If phone-context parameter is empty\n\n  if (phoneContextStart >= numberToExtractFrom.length) {\n    return '';\n  }\n\n  var phoneContextEnd = numberToExtractFrom.indexOf(';', phoneContextStart); // If phone-context is not the last parameter\n\n  if (phoneContextEnd >= 0) {\n    return numberToExtractFrom.substring(phoneContextStart, phoneContextEnd);\n  } else {\n    return numberToExtractFrom.substring(phoneContextStart);\n  }\n}\n/**\r\n * Returns whether the value of phoneContext follows the syntax defined in RFC3966.\r\n *\r\n * @param {string|null} phoneContext\r\n * @return {boolean}\r\n */\n\nexport function isPhoneContextValid(phoneContext) {\n  if (phoneContext === null) {\n    return true;\n  }\n\n  if (phoneContext.length === 0) {\n    return false;\n  } // Does phone-context value match pattern of global-number-digits or domainname.\n\n\n  return RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_.test(phoneContext) || RFC3966_DOMAINNAME_PATTERN_.test(phoneContext);\n}\n//# sourceMappingURL=extractPhoneContext.js.map","import extractPhoneContext, { isPhoneContextValid, PLUS_SIGN, RFC3966_PREFIX_, RFC3966_PHONE_CONTEXT_, RFC3966_ISDN_SUBADDRESS_ } from './extractPhoneContext.js';\nimport ParseError from '../ParseError.js';\n/**\r\n * @param  {string} numberToParse\r\n * @param  {string} nationalNumber\r\n * @return {}\r\n */\n\nexport default function extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(numberToParse, _ref) {\n  var extractFormattedPhoneNumber = _ref.extractFormattedPhoneNumber;\n  var phoneContext = extractPhoneContext(numberToParse);\n\n  if (!isPhoneContextValid(phoneContext)) {\n    throw new ParseError('NOT_A_NUMBER');\n  }\n\n  var phoneNumberString;\n\n  if (phoneContext === null) {\n    // Extract a possible number from the string passed in.\n    // (this strips leading characters that could not be the start of a phone number)\n    phoneNumberString = extractFormattedPhoneNumber(numberToParse) || '';\n  } else {\n    phoneNumberString = ''; // If the phone context contains a phone number prefix, we need to capture\n    // it, whereas domains will be ignored.\n\n    if (phoneContext.charAt(0) === PLUS_SIGN) {\n      phoneNumberString += phoneContext;\n    } // Now append everything between the \"tel:\" prefix and the phone-context.\n    // This should include the national number, an optional extension or\n    // isdn-subaddress component. Note we also handle the case when \"tel:\" is\n    // missing, as we have seen in some of the phone number inputs.\n    // In that case, we append everything from the beginning.\n\n\n    var indexOfRfc3966Prefix = numberToParse.indexOf(RFC3966_PREFIX_);\n    var indexOfNationalNumber; // RFC 3966 \"tel:\" prefix is preset at this stage because\n    // `isPhoneContextValid()` requires it to be present.\n\n    /* istanbul ignore else */\n\n    if (indexOfRfc3966Prefix >= 0) {\n      indexOfNationalNumber = indexOfRfc3966Prefix + RFC3966_PREFIX_.length;\n    } else {\n      indexOfNationalNumber = 0;\n    }\n\n    var indexOfPhoneContext = numberToParse.indexOf(RFC3966_PHONE_CONTEXT_);\n    phoneNumberString += numberToParse.substring(indexOfNationalNumber, indexOfPhoneContext);\n  } // Delete the isdn-subaddress and everything after it if it is present.\n  // Note extension won't appear at the same time with isdn-subaddress\n  // according to paragraph 5.3 of the RFC3966 spec.\n\n\n  var indexOfIsdn = phoneNumberString.indexOf(RFC3966_ISDN_SUBADDRESS_);\n\n  if (indexOfIsdn > 0) {\n    phoneNumberString = phoneNumberString.substring(0, indexOfIsdn);\n  } // If both phone context and isdn-subaddress are absent but other\n  // parameters are present, the parameters are left in nationalNumber.\n  // This is because we are concerned about deleting content from a potential\n  // number string when there is no strong evidence that the number is\n  // actually written in RFC3966.\n\n\n  if (phoneNumberString !== '') {\n    return phoneNumberString;\n  }\n}\n//# sourceMappingURL=extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js.map","// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of December 31th, 2018.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\nimport { VALID_DIGITS, PLUS_CHARS, MIN_LENGTH_FOR_NSN, MAX_LENGTH_FOR_NSN } from './constants.js';\nimport ParseError from './ParseError.js';\nimport Metadata from './metadata.js';\nimport isViablePhoneNumber, { isViablePhoneNumberStart } from './helpers/isViablePhoneNumber.js';\nimport extractExtension from './helpers/extension/extractExtension.js';\nimport parseIncompletePhoneNumber from './parseIncompletePhoneNumber.js';\nimport getCountryCallingCode from './getCountryCallingCode.js';\nimport { isPossibleNumber } from './isPossible.js'; // import { parseRFC3966 } from './helpers/RFC3966.js'\n\nimport PhoneNumber from './PhoneNumber.js';\nimport matchesEntirely from './helpers/matchesEntirely.js';\nimport extractCountryCallingCode from './helpers/extractCountryCallingCode.js';\nimport extractNationalNumber from './helpers/extractNationalNumber.js';\nimport stripIddPrefix from './helpers/stripIddPrefix.js';\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode.js';\nimport extractFormattedPhoneNumberFromPossibleRfc3966NumberUri from './helpers/extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js'; // We don't allow input strings for parsing to be longer than 250 chars.\n// This prevents malicious input from consuming CPU.\n\nvar MAX_INPUT_STRING_LENGTH = 250; // This consists of the plus symbol, digits, and arabic-indic digits.\n\nvar PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']'); // Regular expression of trailing characters that we want to remove.\n// A trailing `#` is sometimes used when writing phone numbers with extensions in US.\n// Example: \"+1 (645) 123 1234-910#\" number has extension \"910\".\n\nvar AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + '#' + ']+$');\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false; // Examples:\n//\n// ```js\n// parse('8 (800) 555-35-35', 'RU')\n// parse('8 (800) 555-35-35', 'RU', metadata)\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\n// parse('+7 800 555 35 35')\n// parse('+7 800 555 35 35', metadata)\n// ```\n//\n\n/**\r\n * Parses a phone number.\r\n *\r\n * parse('123456789', { defaultCountry: 'RU', v2: true }, metadata)\r\n * parse('123456789', { defaultCountry: 'RU' }, metadata)\r\n * parse('123456789', undefined, metadata)\r\n *\r\n * @param  {string} input\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {object|PhoneNumber?} If `options.v2: true` flag is passed, it returns a `PhoneNumber?` instance. Otherwise, returns an object of shape `{ phone: '...', country: '...' }` (or just `{}` if no phone number was parsed).\r\n */\n\nexport default function parse(text, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {};\n  metadata = new Metadata(metadata); // Validate `defaultCountry`.\n\n  if (options.defaultCountry && !metadata.hasCountry(options.defaultCountry)) {\n    if (options.v2) {\n      throw new ParseError('INVALID_COUNTRY');\n    }\n\n    throw new Error(\"Unknown country: \".concat(options.defaultCountry));\n  } // Parse the phone number.\n\n\n  var _parseInput = parseInput(text, options.v2, options.extract),\n      formattedPhoneNumber = _parseInput.number,\n      ext = _parseInput.ext,\n      error = _parseInput.error; // If the phone number is not viable then return nothing.\n\n\n  if (!formattedPhoneNumber) {\n    if (options.v2) {\n      if (error === 'TOO_SHORT') {\n        throw new ParseError('TOO_SHORT');\n      }\n\n      throw new ParseError('NOT_A_NUMBER');\n    }\n\n    return {};\n  }\n\n  var _parsePhoneNumber = parsePhoneNumber(formattedPhoneNumber, options.defaultCountry, options.defaultCallingCode, metadata),\n      country = _parsePhoneNumber.country,\n      nationalNumber = _parsePhoneNumber.nationalNumber,\n      countryCallingCode = _parsePhoneNumber.countryCallingCode,\n      countryCallingCodeSource = _parsePhoneNumber.countryCallingCodeSource,\n      carrierCode = _parsePhoneNumber.carrierCode;\n\n  if (!metadata.hasSelectedNumberingPlan()) {\n    if (options.v2) {\n      throw new ParseError('INVALID_COUNTRY');\n    }\n\n    return {};\n  } // Validate national (significant) number length.\n\n\n  if (!nationalNumber || nationalNumber.length < MIN_LENGTH_FOR_NSN) {\n    // Won't throw here because the regexp already demands length > 1.\n\n    /* istanbul ignore if */\n    if (options.v2) {\n      throw new ParseError('TOO_SHORT');\n    } // Google's demo just throws an error in this case.\n\n\n    return {};\n  } // Validate national (significant) number length.\n  //\n  // A sidenote:\n  //\n  // They say that sometimes national (significant) numbers\n  // can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\n  // https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\n  // Such numbers will just be discarded.\n  //\n\n\n  if (nationalNumber.length > MAX_LENGTH_FOR_NSN) {\n    if (options.v2) {\n      throw new ParseError('TOO_LONG');\n    } // Google's demo just throws an error in this case.\n\n\n    return {};\n  }\n\n  if (options.v2) {\n    var phoneNumber = new PhoneNumber(countryCallingCode, nationalNumber, metadata.metadata);\n\n    if (country) {\n      phoneNumber.country = country;\n    }\n\n    if (carrierCode) {\n      phoneNumber.carrierCode = carrierCode;\n    }\n\n    if (ext) {\n      phoneNumber.ext = ext;\n    }\n\n    phoneNumber.__countryCallingCodeSource = countryCallingCodeSource;\n    return phoneNumber;\n  } // Check if national phone number pattern matches the number.\n  // National number pattern is different for each country,\n  // even for those ones which are part of the \"NANPA\" group.\n\n\n  var valid = (options.extended ? metadata.hasSelectedNumberingPlan() : country) ? matchesEntirely(nationalNumber, metadata.nationalNumberPattern()) : false;\n\n  if (!options.extended) {\n    return valid ? result(country, nationalNumber, ext) : {};\n  } // isInternational: countryCallingCode !== undefined\n\n\n  return {\n    country: country,\n    countryCallingCode: countryCallingCode,\n    carrierCode: carrierCode,\n    valid: valid,\n    possible: valid ? true : options.extended === true && metadata.possibleLengths() && isPossibleNumber(nationalNumber, metadata) ? true : false,\n    phone: nationalNumber,\n    ext: ext\n  };\n}\n/**\r\n * Extracts a formatted phone number from text.\r\n * Doesn't guarantee that the extracted phone number\r\n * is a valid phone number (for example, doesn't validate its length).\r\n * @param  {string} text\r\n * @param  {boolean} [extract] — If `false`, then will parse the entire `text` as a phone number.\r\n * @param  {boolean} [throwOnError] — By default, it won't throw if the text is too long.\r\n * @return {string}\r\n * @example\r\n * // Returns \"(213) 373-4253\".\r\n * extractFormattedPhoneNumber(\"Call (213) 373-4253 for assistance.\")\r\n */\n\nfunction _extractFormattedPhoneNumber(text, extract, throwOnError) {\n  if (!text) {\n    return;\n  }\n\n  if (text.length > MAX_INPUT_STRING_LENGTH) {\n    if (throwOnError) {\n      throw new ParseError('TOO_LONG');\n    }\n\n    return;\n  }\n\n  if (extract === false) {\n    return text;\n  } // Attempt to extract a possible number from the string passed in\n\n\n  var startsAt = text.search(PHONE_NUMBER_START_PATTERN);\n\n  if (startsAt < 0) {\n    return;\n  }\n\n  return text // Trim everything to the left of the phone number\n  .slice(startsAt) // Remove trailing non-numerical characters\n  .replace(AFTER_PHONE_NUMBER_END_PATTERN, '');\n}\n/**\r\n * @param  {string} text - Input.\r\n * @param  {boolean} v2 - Legacy API functions don't pass `v2: true` flag.\r\n * @param  {boolean} [extract] - Whether to extract a phone number from `text`, or attempt to parse the entire text as a phone number.\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\n\n\nfunction parseInput(text, v2, extract) {\n  // // Parse RFC 3966 phone number URI.\n  // if (text && text.indexOf('tel:') === 0) {\n  // \treturn parseRFC3966(text)\n  // }\n  // let number = extractFormattedPhoneNumber(text, extract, v2)\n  var number = extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(text, {\n    extractFormattedPhoneNumber: function extractFormattedPhoneNumber(text) {\n      return _extractFormattedPhoneNumber(text, extract, v2);\n    }\n  }); // If the phone number is not viable, then abort.\n\n  if (!number) {\n    return {};\n  }\n\n  if (!isViablePhoneNumber(number)) {\n    if (isViablePhoneNumberStart(number)) {\n      return {\n        error: 'TOO_SHORT'\n      };\n    }\n\n    return {};\n  } // Attempt to parse extension first, since it doesn't require region-specific\n  // data and we want to have the non-normalised number here.\n\n\n  var withExtensionStripped = extractExtension(number);\n\n  if (withExtensionStripped.ext) {\n    return withExtensionStripped;\n  }\n\n  return {\n    number: number\n  };\n}\n/**\r\n * Creates `parse()` result object.\r\n */\n\n\nfunction result(country, nationalNumber, ext) {\n  var result = {\n    country: country,\n    phone: nationalNumber\n  };\n\n  if (ext) {\n    result.ext = ext;\n  }\n\n  return result;\n}\n/**\r\n * Parses a viable phone number.\r\n * @param {string} formattedPhoneNumber — Example: \"(213) 373-4253\".\r\n * @param {string} [defaultCountry]\r\n * @param {string} [defaultCallingCode]\r\n * @param {Metadata} metadata\r\n * @return {object} Returns `{ country: string?, countryCallingCode: string?, nationalNumber: string? }`.\r\n */\n\n\nfunction parsePhoneNumber(formattedPhoneNumber, defaultCountry, defaultCallingCode, metadata) {\n  // Extract calling code from phone number.\n  var _extractCountryCallin = extractCountryCallingCode(parseIncompletePhoneNumber(formattedPhoneNumber), defaultCountry, defaultCallingCode, metadata.metadata),\n      countryCallingCodeSource = _extractCountryCallin.countryCallingCodeSource,\n      countryCallingCode = _extractCountryCallin.countryCallingCode,\n      number = _extractCountryCallin.number; // Choose a country by `countryCallingCode`.\n\n\n  var country;\n\n  if (countryCallingCode) {\n    metadata.selectNumberingPlan(countryCallingCode);\n  } // If `formattedPhoneNumber` is passed in \"national\" format\n  // then `number` is defined and `countryCallingCode` is `undefined`.\n  else if (number && (defaultCountry || defaultCallingCode)) {\n    metadata.selectNumberingPlan(defaultCountry, defaultCallingCode);\n\n    if (defaultCountry) {\n      country = defaultCountry;\n    } else {\n      /* istanbul ignore if */\n      if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n        if (metadata.isNonGeographicCallingCode(defaultCallingCode)) {\n          country = '001';\n        }\n      }\n    }\n\n    countryCallingCode = defaultCallingCode || getCountryCallingCode(defaultCountry, metadata.metadata);\n  } else return {};\n\n  if (!number) {\n    return {\n      countryCallingCodeSource: countryCallingCodeSource,\n      countryCallingCode: countryCallingCode\n    };\n  }\n\n  var _extractNationalNumbe = extractNationalNumber(parseIncompletePhoneNumber(number), metadata),\n      nationalNumber = _extractNationalNumbe.nationalNumber,\n      carrierCode = _extractNationalNumbe.carrierCode; // Sometimes there are several countries\n  // corresponding to the same country phone code\n  // (e.g. NANPA countries all having `1` country phone code).\n  // Therefore, to reliably determine the exact country,\n  // national (significant) number should have been parsed first.\n  //\n  // When `metadata.json` is generated, all \"ambiguous\" country phone codes\n  // get their countries populated with the full set of\n  // \"phone number type\" regular expressions.\n  //\n\n\n  var exactCountry = getCountryByCallingCode(countryCallingCode, {\n    nationalNumber: nationalNumber,\n    defaultCountry: defaultCountry,\n    metadata: metadata\n  });\n\n  if (exactCountry) {\n    country = exactCountry;\n    /* istanbul ignore if */\n\n    if (exactCountry === '001') {// Can't happen with `USE_NON_GEOGRAPHIC_COUNTRY_CODE` being `false`.\n      // If `USE_NON_GEOGRAPHIC_COUNTRY_CODE` is set to `true` for some reason,\n      // then remove the \"istanbul ignore if\".\n    } else {\n      metadata.country(country);\n    }\n  }\n\n  return {\n    country: country,\n    countryCallingCode: countryCallingCode,\n    countryCallingCodeSource: countryCallingCodeSource,\n    nationalNumber: nationalNumber,\n    carrierCode: carrierCode\n  };\n}\n//# sourceMappingURL=parse.js.map","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport parse from './parse.js';\nexport default function parsePhoneNumberWithError(text, options, metadata) {\n  return parse(text, _objectSpread(_objectSpread({}, options), {}, {\n    v2: true\n  }), metadata);\n}\n//# sourceMappingURL=parsePhoneNumberWithError_.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// Extracts the following properties from function arguments:\n// * input `text`\n// * `options` object\n// * `metadata` JSON\nexport default function normalizeArguments(args) {\n  var _Array$prototype$slic = Array.prototype.slice.call(args),\n      _Array$prototype$slic2 = _slicedToArray(_Array$prototype$slic, 4),\n      arg_1 = _Array$prototype$slic2[0],\n      arg_2 = _Array$prototype$slic2[1],\n      arg_3 = _Array$prototype$slic2[2],\n      arg_4 = _Array$prototype$slic2[3];\n\n  var text;\n  var options;\n  var metadata; // If the phone number is passed as a string.\n  // `parsePhoneNumber('88005553535', ...)`.\n\n  if (typeof arg_1 === 'string') {\n    text = arg_1;\n  } else throw new TypeError('A text for parsing must be a string.'); // If \"default country\" argument is being passed then move it to `options`.\n  // `parsePhoneNumber('88005553535', 'RU', [options], metadata)`.\n\n\n  if (!arg_2 || typeof arg_2 === 'string') {\n    if (arg_4) {\n      options = arg_3;\n      metadata = arg_4;\n    } else {\n      options = undefined;\n      metadata = arg_3;\n    }\n\n    if (arg_2) {\n      options = _objectSpread({\n        defaultCountry: arg_2\n      }, options);\n    }\n  } // `defaultCountry` is not passed.\n  // Example: `parsePhoneNumber('+78005553535', [options], metadata)`.\n  else if (isObject(arg_2)) {\n    if (arg_3) {\n      options = arg_2;\n      metadata = arg_3;\n    } else {\n      metadata = arg_2;\n    }\n  } else throw new Error(\"Invalid second argument: \".concat(arg_2));\n\n  return {\n    text: text,\n    options: options,\n    metadata: metadata\n  };\n} // Otherwise istanbul would show this as \"branch not covered\".\n\n/* istanbul ignore next */\n\nvar isObject = function isObject(_) {\n  return _typeof(_) === 'object';\n};\n//# sourceMappingURL=normalizeArguments.js.map","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport parsePhoneNumberWithError from './parsePhoneNumberWithError_.js';\nimport ParseError from './ParseError.js';\nimport { isSupportedCountry } from './metadata.js';\nexport default function parsePhoneNumber(text, options, metadata) {\n  // Validate `defaultCountry`.\n  if (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\n    options = _objectSpread(_objectSpread({}, options), {}, {\n      defaultCountry: undefined\n    });\n  } // Parse phone number.\n\n\n  try {\n    return parsePhoneNumberWithError(text, options, metadata);\n  } catch (error) {\n    /* istanbul ignore else */\n    if (error instanceof ParseError) {//\n    } else {\n      throw error;\n    }\n  }\n}\n//# sourceMappingURL=parsePhoneNumber_.js.map","import normalizeArguments from './normalizeArguments.js';\nimport parsePhoneNumber_ from './parsePhoneNumber_.js';\nexport default function parsePhoneNumber() {\n  var _normalizeArguments = normalizeArguments(arguments),\n      text = _normalizeArguments.text,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  return parsePhoneNumber_(text, options, metadata);\n}\n//# sourceMappingURL=parsePhoneNumber.js.map","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// https://medium.com/dsinjs/implementing-lru-cache-in-javascript-94ba6755cda9\nvar Node = /*#__PURE__*/_createClass(function Node(key, value) {\n  var next = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var prev = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  _classCallCheck(this, Node);\n\n  this.key = key;\n  this.value = value;\n  this.next = next;\n  this.prev = prev;\n});\n\nvar LRUCache = /*#__PURE__*/function () {\n  //set default limit of 10 if limit is not passed.\n  function LRUCache() {\n    var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n\n    _classCallCheck(this, LRUCache);\n\n    this.size = 0;\n    this.limit = limit;\n    this.head = null;\n    this.tail = null;\n    this.cache = {};\n  } // Write Node to head of LinkedList\n  // update cache with Node key and Node reference\n\n\n  _createClass(LRUCache, [{\n    key: \"put\",\n    value: function put(key, value) {\n      this.ensureLimit();\n\n      if (!this.head) {\n        this.head = this.tail = new Node(key, value);\n      } else {\n        var node = new Node(key, value, this.head);\n        this.head.prev = node;\n        this.head = node;\n      } //Update the cache map\n\n\n      this.cache[key] = this.head;\n      this.size++;\n    } // Read from cache map and make that node as new Head of LinkedList\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      if (this.cache[key]) {\n        var value = this.cache[key].value; // node removed from it's position and cache\n\n        this.remove(key); // write node again to the head of LinkedList to make it most recently used\n\n        this.put(key, value);\n        return value;\n      }\n\n      console.log(\"Item not available in cache for key \".concat(key));\n    }\n  }, {\n    key: \"ensureLimit\",\n    value: function ensureLimit() {\n      if (this.size === this.limit) {\n        this.remove(this.tail.key);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      var node = this.cache[key];\n\n      if (node.prev !== null) {\n        node.prev.next = node.next;\n      } else {\n        this.head = node.next;\n      }\n\n      if (node.next !== null) {\n        node.next.prev = node.prev;\n      } else {\n        this.tail = node.prev;\n      }\n\n      delete this.cache[key];\n      this.size--;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = null;\n      this.tail = null;\n      this.size = 0;\n      this.cache = {};\n    } // // Invokes the callback function with every node of the chain and the index of the node.\n    // forEach(fn) {\n    //   let node = this.head;\n    //   let counter = 0;\n    //   while (node) {\n    //     fn(node, counter);\n    //     node = node.next;\n    //     counter++;\n    //   }\n    // }\n    // // To iterate over LRU with a 'for...of' loop\n    // *[Symbol.iterator]() {\n    //   let node = this.head;\n    //   while (node) {\n    //     yield node;\n    //     node = node.next;\n    //   }\n    // }\n\n  }]);\n\n  return LRUCache;\n}();\n\nexport { LRUCache as default };\n//# sourceMappingURL=LRUCache.js.map","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport LRUCache from './LRUCache.js'; // A cache for frequently used country-specific regular expressions. Set to 32 to cover ~2-3\n// countries being used for the same doc with ~10 patterns for each country. Some pages will have\n// a lot more countries in use, but typically fewer numbers for each so expanding the cache for\n// that use-case won't have a lot of benefit.\n\nvar RegExpCache = /*#__PURE__*/function () {\n  function RegExpCache(size) {\n    _classCallCheck(this, RegExpCache);\n\n    this.cache = new LRUCache(size);\n  }\n\n  _createClass(RegExpCache, [{\n    key: \"getPatternForRegExp\",\n    value: function getPatternForRegExp(pattern) {\n      var regExp = this.cache.get(pattern);\n\n      if (!regExp) {\n        regExp = new RegExp('^' + pattern);\n        this.cache.put(pattern, regExp);\n      }\n\n      return regExp;\n    }\n  }]);\n\n  return RegExpCache;\n}();\n\nexport { RegExpCache as default };\n//# sourceMappingURL=RegExpCache.js.map","/** Returns a regular expression quantifier with an upper and lower limit. */\nexport function limit(lower, upper) {\n  if (lower < 0 || upper <= 0 || upper < lower) {\n    throw new TypeError();\n  }\n\n  return \"{\".concat(lower, \",\").concat(upper, \"}\");\n}\n/**\r\n * Trims away any characters after the first match of {@code pattern} in {@code candidate},\r\n * returning the trimmed version.\r\n */\n\nexport function trimAfterFirstMatch(regexp, string) {\n  var index = string.search(regexp);\n\n  if (index >= 0) {\n    return string.slice(0, index);\n  }\n\n  return string;\n}\nexport function startsWith(string, substring) {\n  return string.indexOf(substring) === 0;\n}\nexport function endsWith(string, substring) {\n  return string.indexOf(substring, string.length - substring.length) === string.length - substring.length;\n}\n//# sourceMappingURL=util.js.map","// Javascript doesn't support UTF-8 regular expressions.\n// So mimicking them here.\n// Copy-pasted from `PhoneNumberMatcher.js`.\n\n/**\r\n * \"\\p{Z}\" is any kind of whitespace or invisible separator (\"Separator\").\r\n * http://www.regular-expressions.info/unicode.html\r\n * \"\\P{Z}\" is the reverse of \"\\p{Z}\".\r\n * \"\\p{N}\" is any kind of numeric character in any script (\"Number\").\r\n * \"\\p{Nd}\" is a digit zero through nine in any script except \"ideographic scripts\" (\"Decimal_Digit_Number\").\r\n * \"\\p{Sc}\" is a currency symbol (\"Currency_Symbol\").\r\n * \"\\p{L}\" is any kind of letter from any language (\"Letter\").\r\n * \"\\p{Mn}\" is \"non-spacing mark\".\r\n *\r\n * Javascript doesn't support Unicode Regular Expressions\r\n * so substituting it with this explicit set of characters.\r\n *\r\n * https://stackoverflow.com/questions/13210194/javascript-regex-equivalent-of-a-za-z-using-pl\r\n * https://github.com/danielberndt/babel-plugin-utf-8-regex/blob/master/src/transformer.js\r\n */\nvar _pZ = \" \\xA0\\u1680\\u180E\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\";\nexport var pZ = \"[\".concat(_pZ, \"]\");\nexport var PZ = \"[^\".concat(_pZ, \"]\");\nexport var _pN = \"0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19\"; // const pN = `[${_pN}]`\n\nvar _pNd = \"0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19\";\nexport var pNd = \"[\".concat(_pNd, \"]\");\nexport var _pL = \"A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\";\nvar pL = \"[\".concat(_pL, \"]\");\nvar pL_regexp = new RegExp(pL);\nvar _pSc = \"$\\xA2-\\xA5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20B9\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6\";\nvar pSc = \"[\".concat(_pSc, \"]\");\nvar pSc_regexp = new RegExp(pSc);\nvar _pMn = \"\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u08FE\\u0900-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1DC0-\\u1DE6\\u1DFC-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE26\";\nvar pMn = \"[\".concat(_pMn, \"]\");\nvar pMn_regexp = new RegExp(pMn);\nvar _InBasic_Latin = \"\\0-\\x7F\";\nvar _InLatin_1_Supplement = \"\\x80-\\xFF\";\nvar _InLatin_Extended_A = \"\\u0100-\\u017F\";\nvar _InLatin_Extended_Additional = \"\\u1E00-\\u1EFF\";\nvar _InLatin_Extended_B = \"\\u0180-\\u024F\";\nvar _InCombining_Diacritical_Marks = \"\\u0300-\\u036F\";\nvar latinLetterRegexp = new RegExp('[' + _InBasic_Latin + _InLatin_1_Supplement + _InLatin_Extended_A + _InLatin_Extended_Additional + _InLatin_Extended_B + _InCombining_Diacritical_Marks + ']');\n/**\r\n * Helper method to determine if a character is a Latin-script letter or not.\r\n * For our purposes, combining marks should also return true since we assume\r\n * they have been added to a preceding Latin character.\r\n */\n\nexport function isLatinLetter(letter) {\n  // Combining marks are a subset of non-spacing-mark.\n  if (!pL_regexp.test(letter) && !pMn_regexp.test(letter)) {\n    return false;\n  }\n\n  return latinLetterRegexp.test(letter);\n}\nexport function isInvalidPunctuationSymbol(character) {\n  return character === '%' || pSc_regexp.test(character);\n}\n//# sourceMappingURL=utf-8.js.map","import parsePhoneNumber from '../parsePhoneNumber.js';\n/**\r\n * Matches a phone number object against a phone number string.\r\n * @param  {string} phoneNumberString\r\n * @param  {PhoneNumber} phoneNumber\r\n * @param  {object} metadata — Metadata JSON\r\n * @return {'INVALID_NUMBER'|'NO_MATCH'|'SHORT_NSN_MATCH'|'NSN_MATCH'|'EXACT_MATCH'}\r\n */\n\nexport default function matchPhoneNumberStringAgainstPhoneNumber(phoneNumberString, phoneNumber, metadata) {\n  // Parse `phoneNumberString`.\n  var phoneNumberStringContainsCallingCode = true;\n  var parsedPhoneNumber = parsePhoneNumber(phoneNumberString, metadata);\n\n  if (!parsedPhoneNumber) {\n    // If `phoneNumberString` didn't contain a country calling code\n    // then substitute it with the `phoneNumber`'s country calling code.\n    phoneNumberStringContainsCallingCode = false;\n    parsedPhoneNumber = parsePhoneNumber(phoneNumberString, {\n      defaultCallingCode: phoneNumber.countryCallingCode\n    }, metadata);\n  }\n\n  if (!parsedPhoneNumber) {\n    return 'INVALID_NUMBER';\n  } // Check that the extensions match.\n\n\n  if (phoneNumber.ext) {\n    if (parsedPhoneNumber.ext !== phoneNumber.ext) {\n      return 'NO_MATCH';\n    }\n  } else {\n    if (parsedPhoneNumber.ext) {\n      return 'NO_MATCH';\n    }\n  } // Check that country calling codes match.\n\n\n  if (phoneNumberStringContainsCallingCode) {\n    if (phoneNumber.countryCallingCode !== parsedPhoneNumber.countryCallingCode) {\n      return 'NO_MATCH';\n    }\n  } // Check if the whole numbers match.\n\n\n  if (phoneNumber.number === parsedPhoneNumber.number) {\n    if (phoneNumberStringContainsCallingCode) {\n      return 'EXACT_MATCH';\n    } else {\n      return 'NSN_MATCH';\n    }\n  } // Check if one national number is a \"suffix\" of the other.\n\n\n  if (phoneNumber.nationalNumber.indexOf(parsedPhoneNumber.nationalNumber) === 0 || parsedPhoneNumber.nationalNumber.indexOf(phoneNumber.nationalNumber) === 0) {\n    // \"A SHORT_NSN_MATCH occurs if there is a difference because of the\n    //  presence or absence of an 'Italian leading zero', the presence or\n    //  absence of an extension, or one NSN being a shorter variant of the\n    //  other.\"\n    return 'SHORT_NSN_MATCH';\n  }\n\n  return 'NO_MATCH';\n}\n//# sourceMappingURL=matchPhoneNumberStringAgainstPhoneNumber.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport isValidNumber from '../isValid.js';\nimport parseDigits from '../helpers/parseDigits.js';\nimport matchPhoneNumberStringAgainstPhoneNumber from './matchPhoneNumberStringAgainstPhoneNumber.js';\nimport Metadata from '../metadata.js';\nimport getCountryByCallingCode from '../helpers/getCountryByCallingCode.js';\nimport { chooseFormatForNumber } from '../format.js';\nimport { startsWith, endsWith } from './util.js';\n/**\r\n * Leniency when finding potential phone numbers in text segments\r\n * The levels here are ordered in increasing strictness.\r\n */\n\nexport default {\n  /**\r\n   * Phone numbers accepted are \"possible\", but not necessarily \"valid\".\r\n   */\n  POSSIBLE: function POSSIBLE(phoneNumber, _ref) {\n    var candidate = _ref.candidate,\n        metadata = _ref.metadata;\n    return true;\n  },\n\n  /**\r\n   * Phone numbers accepted are \"possible\" and \"valid\".\r\n   * Numbers written in national format must have their national-prefix\r\n   * present if it is usually written for a number of this type.\r\n   */\n  VALID: function VALID(phoneNumber, _ref2) {\n    var candidate = _ref2.candidate,\n        defaultCountry = _ref2.defaultCountry,\n        metadata = _ref2.metadata;\n\n    if (!phoneNumber.isValid() || !containsOnlyValidXChars(phoneNumber, candidate, metadata)) {\n      return false;\n    } // Skipped for simplicity.\n    // return isNationalPrefixPresentIfRequired(phoneNumber, { defaultCountry, metadata })\n\n\n    return true;\n  },\n\n  /**\r\n   * Phone numbers accepted are \"valid\" and\r\n   * are grouped in a possible way for this locale. For example, a US number written as\r\n   * \"65 02 53 00 00\" and \"650253 0000\" are not accepted at this leniency level, whereas\r\n   * \"650 253 0000\", \"650 2530000\" or \"6502530000\" are.\r\n   * Numbers with more than one '/' symbol in the national significant number\r\n   * are also dropped at this level.\r\n   *\r\n   * Warning: This level might result in lower coverage especially for regions outside of\r\n   * country code \"+1\". If you are not sure about which level to use,\r\n   * email the discussion group libphonenumber-discuss@googlegroups.com.\r\n   */\n  STRICT_GROUPING: function STRICT_GROUPING(phoneNumber, _ref3) {\n    var candidate = _ref3.candidate,\n        defaultCountry = _ref3.defaultCountry,\n        metadata = _ref3.metadata,\n        regExpCache = _ref3.regExpCache;\n\n    if (!phoneNumber.isValid() || !containsOnlyValidXChars(phoneNumber, candidate, metadata) || containsMoreThanOneSlashInNationalNumber(phoneNumber, candidate) || !isNationalPrefixPresentIfRequired(phoneNumber, {\n      defaultCountry: defaultCountry,\n      metadata: metadata\n    })) {\n      return false;\n    }\n\n    return checkNumberGroupingIsValid(phoneNumber, candidate, metadata, allNumberGroupsRemainGrouped, regExpCache);\n  },\n\n  /**\r\n   * Phone numbers accepted are \"valid\" and are grouped in the same way\r\n   * that we would have formatted it, or as a single block.\r\n   * For example, a US number written as \"650 2530000\" is not accepted\r\n   * at this leniency level, whereas \"650 253 0000\" or \"6502530000\" are.\r\n   * Numbers with more than one '/' symbol are also dropped at this level.\r\n   *\r\n   * Warning: This level might result in lower coverage especially for regions outside of\r\n   * country code \"+1\". If you are not sure about which level to use, email the discussion group\r\n   * libphonenumber-discuss@googlegroups.com.\r\n   */\n  EXACT_GROUPING: function EXACT_GROUPING(phoneNumber, _ref4) {\n    var candidate = _ref4.candidate,\n        defaultCountry = _ref4.defaultCountry,\n        metadata = _ref4.metadata,\n        regExpCache = _ref4.regExpCache;\n\n    if (!phoneNumber.isValid() || !containsOnlyValidXChars(phoneNumber, candidate, metadata) || containsMoreThanOneSlashInNationalNumber(phoneNumber, candidate) || !isNationalPrefixPresentIfRequired(phoneNumber, {\n      defaultCountry: defaultCountry,\n      metadata: metadata\n    })) {\n      return false;\n    }\n\n    return checkNumberGroupingIsValid(phoneNumber, candidate, metadata, allNumberGroupsAreExactlyPresent, regExpCache);\n  }\n};\n\nfunction containsOnlyValidXChars(phoneNumber, candidate, metadata) {\n  // The characters 'x' and 'X' can be (1) a carrier code, in which case they always precede the\n  // national significant number or (2) an extension sign, in which case they always precede the\n  // extension number. We assume a carrier code is more than 1 digit, so the first case has to\n  // have more than 1 consecutive 'x' or 'X', whereas the second case can only have exactly 1 'x'\n  // or 'X'. We ignore the character if it appears as the last character of the string.\n  for (var index = 0; index < candidate.length - 1; index++) {\n    var charAtIndex = candidate.charAt(index);\n\n    if (charAtIndex === 'x' || charAtIndex === 'X') {\n      var charAtNextIndex = candidate.charAt(index + 1);\n\n      if (charAtNextIndex === 'x' || charAtNextIndex === 'X') {\n        // This is the carrier code case, in which the 'X's always precede the national\n        // significant number.\n        index++;\n\n        if (matchPhoneNumberStringAgainstPhoneNumber(candidate.substring(index), phoneNumber, metadata) !== 'NSN_MATCH') {\n          return false;\n        } // This is the extension sign case, in which the 'x' or 'X' should always precede the\n        // extension number.\n\n      } else {\n        var ext = parseDigits(candidate.substring(index));\n\n        if (ext) {\n          if (phoneNumber.ext !== ext) {\n            return false;\n          }\n        } else {\n          if (phoneNumber.ext) {\n            return false;\n          }\n        }\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction isNationalPrefixPresentIfRequired(phoneNumber, _ref5) {\n  var defaultCountry = _ref5.defaultCountry,\n      _metadata = _ref5.metadata;\n\n  // First, check how we deduced the country code. If it was written in international format, then\n  // the national prefix is not required.\n  if (phoneNumber.__countryCallingCodeSource !== 'FROM_DEFAULT_COUNTRY') {\n    return true;\n  }\n\n  var metadata = new Metadata(_metadata);\n  metadata.selectNumberingPlan(phoneNumber.countryCallingCode);\n  var phoneNumberRegion = phoneNumber.country || getCountryByCallingCode(phoneNumber.countryCallingCode, {\n    nationalNumber: phoneNumber.nationalNumber,\n    defaultCountry: defaultCountry,\n    metadata: metadata\n  }); // Check if a national prefix should be present when formatting this number.\n\n  var nationalNumber = phoneNumber.nationalNumber;\n  var format = chooseFormatForNumber(metadata.numberingPlan.formats(), nationalNumber); // To do this, we check that a national prefix formatting rule was present\n  // and that it wasn't just the first-group symbol ($1) with punctuation.\n\n  if (format.nationalPrefixFormattingRule()) {\n    if (metadata.numberingPlan.nationalPrefixIsOptionalWhenFormattingInNationalFormat()) {\n      // The national-prefix is optional in these cases, so we don't need to check if it was present.\n      return true;\n    }\n\n    if (!format.usesNationalPrefix()) {\n      // National Prefix not needed for this number.\n      return true;\n    }\n\n    return Boolean(phoneNumber.nationalPrefix);\n  }\n\n  return true;\n}\n\nexport function containsMoreThanOneSlashInNationalNumber(phoneNumber, candidate) {\n  var firstSlashInBodyIndex = candidate.indexOf('/');\n\n  if (firstSlashInBodyIndex < 0) {\n    // No slashes, this is okay.\n    return false;\n  } // Now look for a second one.\n\n\n  var secondSlashInBodyIndex = candidate.indexOf('/', firstSlashInBodyIndex + 1);\n\n  if (secondSlashInBodyIndex < 0) {\n    // Only one slash, this is okay.\n    return false;\n  } // If the first slash is after the country calling code, this is permitted.\n\n\n  var candidateHasCountryCode = phoneNumber.__countryCallingCodeSource === 'FROM_NUMBER_WITH_PLUS_SIGN' || phoneNumber.__countryCallingCodeSource === 'FROM_NUMBER_WITHOUT_PLUS_SIGN';\n\n  if (candidateHasCountryCode && parseDigits(candidate.substring(0, firstSlashInBodyIndex)) === phoneNumber.countryCallingCode) {\n    // Any more slashes and this is illegal.\n    return candidate.slice(secondSlashInBodyIndex + 1).indexOf('/') >= 0;\n  }\n\n  return true;\n}\n\nfunction checkNumberGroupingIsValid(number, candidate, metadata, checkGroups, regExpCache) {\n  throw new Error('This part of code hasn\\'t been ported');\n  var normalizedCandidate = normalizeDigits(candidate, true\n  /* keep non-digits */\n  );\n  var formattedNumberGroups = getNationalNumberGroups(metadata, number, null);\n\n  if (checkGroups(metadata, number, normalizedCandidate, formattedNumberGroups)) {\n    return true;\n  } // If this didn't pass, see if there are any alternate formats that match, and try them instead.\n\n\n  var alternateFormats = MetadataManager.getAlternateFormatsForCountry(number.getCountryCode());\n  var nationalSignificantNumber = util.getNationalSignificantNumber(number);\n\n  if (alternateFormats) {\n    for (var _iterator = _createForOfIteratorHelperLoose(alternateFormats.numberFormats()), _step; !(_step = _iterator()).done;) {\n      var alternateFormat = _step.value;\n\n      if (alternateFormat.leadingDigitsPatterns().length > 0) {\n        // There is only one leading digits pattern for alternate formats.\n        var leadingDigitsRegExp = regExpCache.getPatternForRegExp('^' + alternateFormat.leadingDigitsPatterns()[0]);\n\n        if (!leadingDigitsRegExp.test(nationalSignificantNumber)) {\n          // Leading digits don't match; try another one.\n          continue;\n        }\n      }\n\n      formattedNumberGroups = getNationalNumberGroups(metadata, number, alternateFormat);\n\n      if (checkGroups(metadata, number, normalizedCandidate, formattedNumberGroups)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n/**\r\n * Helper method to get the national-number part of a number, formatted without any national\r\n * prefix, and return it as a set of digit blocks that would be formatted together following\r\n * standard formatting rules.\r\n */\n\n\nfunction getNationalNumberGroups(metadata, number, formattingPattern) {\n  throw new Error('This part of code hasn\\'t been ported');\n\n  if (formattingPattern) {\n    // We format the NSN only, and split that according to the separator.\n    var nationalSignificantNumber = util.getNationalSignificantNumber(number);\n    return util.formatNsnUsingPattern(nationalSignificantNumber, formattingPattern, 'RFC3966', metadata).split('-');\n  } // This will be in the format +CC-DG1-DG2-DGX;ext=EXT where DG1..DGX represents groups of digits.\n\n\n  var rfc3966Format = formatNumber(number, 'RFC3966', metadata); // We remove the extension part from the formatted string before splitting it into different\n  // groups.\n\n  var endIndex = rfc3966Format.indexOf(';');\n\n  if (endIndex < 0) {\n    endIndex = rfc3966Format.length;\n  } // The country-code will have a '-' following it.\n\n\n  var startIndex = rfc3966Format.indexOf('-') + 1;\n  return rfc3966Format.slice(startIndex, endIndex).split('-');\n}\n\nfunction allNumberGroupsAreExactlyPresent(metadata, number, normalizedCandidate, formattedNumberGroups) {\n  throw new Error('This part of code hasn\\'t been ported');\n  var candidateGroups = normalizedCandidate.split(NON_DIGITS_PATTERN); // Set this to the last group, skipping it if the number has an extension.\n\n  var candidateNumberGroupIndex = number.hasExtension() ? candidateGroups.length - 2 : candidateGroups.length - 1; // First we check if the national significant number is formatted as a block.\n  // We use contains and not equals, since the national significant number may be present with\n  // a prefix such as a national number prefix, or the country code itself.\n\n  if (candidateGroups.length == 1 || candidateGroups[candidateNumberGroupIndex].contains(util.getNationalSignificantNumber(number))) {\n    return true;\n  } // Starting from the end, go through in reverse, excluding the first group, and check the\n  // candidate and number groups are the same.\n\n\n  var formattedNumberGroupIndex = formattedNumberGroups.length - 1;\n\n  while (formattedNumberGroupIndex > 0 && candidateNumberGroupIndex >= 0) {\n    if (candidateGroups[candidateNumberGroupIndex] !== formattedNumberGroups[formattedNumberGroupIndex]) {\n      return false;\n    }\n\n    formattedNumberGroupIndex--;\n    candidateNumberGroupIndex--;\n  } // Now check the first group. There may be a national prefix at the start, so we only check\n  // that the candidate group ends with the formatted number group.\n\n\n  return candidateNumberGroupIndex >= 0 && endsWith(candidateGroups[candidateNumberGroupIndex], formattedNumberGroups[0]);\n}\n\nfunction allNumberGroupsRemainGrouped(metadata, number, normalizedCandidate, formattedNumberGroups) {\n  throw new Error('This part of code hasn\\'t been ported');\n  var fromIndex = 0;\n\n  if (number.getCountryCodeSource() !== CountryCodeSource.FROM_DEFAULT_COUNTRY) {\n    // First skip the country code if the normalized candidate contained it.\n    var countryCode = String(number.getCountryCode());\n    fromIndex = normalizedCandidate.indexOf(countryCode) + countryCode.length();\n  } // Check each group of consecutive digits are not broken into separate groupings in the\n  // {@code normalizedCandidate} string.\n\n\n  for (var i = 0; i < formattedNumberGroups.length; i++) {\n    // Fails if the substring of {@code normalizedCandidate} starting from {@code fromIndex}\n    // doesn't contain the consecutive digits in formattedNumberGroups[i].\n    fromIndex = normalizedCandidate.indexOf(formattedNumberGroups[i], fromIndex);\n\n    if (fromIndex < 0) {\n      return false;\n    } // Moves {@code fromIndex} forward.\n\n\n    fromIndex += formattedNumberGroups[i].length();\n\n    if (i == 0 && fromIndex < normalizedCandidate.length()) {\n      // We are at the position right after the NDC. We get the region used for formatting\n      // information based on the country code in the phone number, rather than the number itself,\n      // as we do not need to distinguish between different countries with the same country\n      // calling code and this is faster.\n      var region = util.getRegionCodeForCountryCode(number.getCountryCode());\n\n      if (util.getNddPrefixForRegion(region, true) != null && Character.isDigit(normalizedCandidate.charAt(fromIndex))) {\n        // This means there is no formatting symbol after the NDC. In this case, we only\n        // accept the number if there is no formatting symbol at all in the number, except\n        // for extensions. This is only important for countries with national prefixes.\n        var nationalSignificantNumber = util.getNationalSignificantNumber(number);\n        return startsWith(normalizedCandidate.slice(fromIndex - formattedNumberGroups[i].length), nationalSignificantNumber);\n      }\n    }\n  } // The check here makes sure that we haven't mistakenly already used the extension to\n  // match the last group of the subscriber number. Note the extension cannot have\n  // formatting in-between digits.\n\n\n  return normalizedCandidate.slice(fromIndex).contains(number.getExtension());\n}\n//# sourceMappingURL=Leniency.js.map","import { trimAfterFirstMatch } from './util.js'; // Regular expression of characters typically used to start a second phone number for the purposes\n// of parsing. This allows us to strip off parts of the number that are actually the start of\n// another number, such as for: (530) 583-6985 x302/x2303 -> the second extension here makes this\n// actually two phone numbers, (530) 583-6985 x302 and (530) 583-6985 x2303. We remove the second\n// extension so that the first number is parsed correctly.\n//\n// Matches a slash (\\ or /) followed by a space followed by an `x`.\n//\n\nvar SECOND_NUMBER_START_PATTERN = /[\\\\/] *x/;\nexport default function parsePreCandidate(candidate) {\n  // Check for extra numbers at the end.\n  // TODO: This is the place to start when trying to support extraction of multiple phone number\n  // from split notations (+41 79 123 45 67 / 68).\n  return trimAfterFirstMatch(SECOND_NUMBER_START_PATTERN, candidate);\n}\n//# sourceMappingURL=parsePreCandidate.js.map","// Matches strings that look like dates using \"/\" as a separator.\n// Examples: 3/10/2011, 31/10/96 or 08/31/95.\nvar SLASH_SEPARATED_DATES = /(?:(?:[0-3]?\\d\\/[01]?\\d)|(?:[01]?\\d\\/[0-3]?\\d))\\/(?:[12]\\d)?\\d{2}/; // Matches timestamps.\n// Examples: \"2012-01-02 08:00\".\n// Note that the reg-ex does not include the\n// trailing \":\\d\\d\" -- that is covered by TIME_STAMPS_SUFFIX.\n\nvar TIME_STAMPS = /[12]\\d{3}[-/]?[01]\\d[-/]?[0-3]\\d +[0-2]\\d$/;\nvar TIME_STAMPS_SUFFIX_LEADING = /^:[0-5]\\d/;\nexport default function isValidPreCandidate(candidate, offset, text) {\n  // Skip a match that is more likely to be a date.\n  if (SLASH_SEPARATED_DATES.test(candidate)) {\n    return false;\n  } // Skip potential time-stamps.\n\n\n  if (TIME_STAMPS.test(candidate)) {\n    var followingText = text.slice(offset + candidate.length);\n\n    if (TIME_STAMPS_SUFFIX_LEADING.test(followingText)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n//# sourceMappingURL=isValidPreCandidate.js.map","// Copy-pasted from `PhoneNumberMatcher.js`.\nimport { PLUS_CHARS } from '../constants.js';\nimport { limit } from './util.js';\nimport { isLatinLetter, isInvalidPunctuationSymbol } from './utf-8.js';\nvar OPENING_PARENS = \"(\\\\[\\uFF08\\uFF3B\";\nvar CLOSING_PARENS = \")\\\\]\\uFF09\\uFF3D\";\nvar NON_PARENS = \"[^\".concat(OPENING_PARENS).concat(CLOSING_PARENS, \"]\");\nexport var LEAD_CLASS = \"[\".concat(OPENING_PARENS).concat(PLUS_CHARS, \"]\"); // Punctuation that may be at the start of a phone number - brackets and plus signs.\n\nvar LEAD_CLASS_LEADING = new RegExp('^' + LEAD_CLASS); // Limit on the number of pairs of brackets in a phone number.\n\nvar BRACKET_PAIR_LIMIT = limit(0, 3);\n/**\r\n * Pattern to check that brackets match. Opening brackets should be closed within a phone number.\r\n * This also checks that there is something inside the brackets. Having no brackets at all is also\r\n * fine.\r\n *\r\n * An opening bracket at the beginning may not be closed, but subsequent ones should be.  It's\r\n * also possible that the leading bracket was dropped, so we shouldn't be surprised if we see a\r\n * closing bracket first. We limit the sets of brackets in a phone number to four.\r\n */\n\nvar MATCHING_BRACKETS_ENTIRE = new RegExp('^' + \"(?:[\" + OPENING_PARENS + \"])?\" + \"(?:\" + NON_PARENS + \"+\" + \"[\" + CLOSING_PARENS + \"])?\" + NON_PARENS + \"+\" + \"(?:[\" + OPENING_PARENS + \"]\" + NON_PARENS + \"+[\" + CLOSING_PARENS + \"])\" + BRACKET_PAIR_LIMIT + NON_PARENS + \"*\" + '$');\n/**\r\n * Matches strings that look like publication pages. Example:\r\n * <pre>Computing Complete Answers to Queries in the Presence of Limited Access Patterns.\r\n * Chen Li. VLDB J. 12(3): 211-227 (2003).</pre>\r\n *\r\n * The string \"211-227 (2003)\" is not a telephone number.\r\n */\n\nvar PUB_PAGES = /\\d{1,5}-+\\d{1,5}\\s{0,4}\\(\\d{1,4}/;\nexport default function isValidCandidate(candidate, offset, text, leniency) {\n  // Check the candidate doesn't contain any formatting\n  // which would indicate that it really isn't a phone number.\n  if (!MATCHING_BRACKETS_ENTIRE.test(candidate) || PUB_PAGES.test(candidate)) {\n    return;\n  } // If leniency is set to VALID or stricter, we also want to skip numbers that are surrounded\n  // by Latin alphabetic characters, to skip cases like abc8005001234 or 8005001234def.\n\n\n  if (leniency !== 'POSSIBLE') {\n    // If the candidate is not at the start of the text,\n    // and does not start with phone-number punctuation,\n    // check the previous character.\n    if (offset > 0 && !LEAD_CLASS_LEADING.test(candidate)) {\n      var previousChar = text[offset - 1]; // We return null if it is a latin letter or an invalid punctuation symbol.\n\n      if (isInvalidPunctuationSymbol(previousChar) || isLatinLetter(previousChar)) {\n        return false;\n      }\n    }\n\n    var lastCharIndex = offset + candidate.length;\n\n    if (lastCharIndex < text.length) {\n      var nextChar = text[lastCharIndex];\n\n      if (isInvalidPunctuationSymbol(nextChar) || isLatinLetter(nextChar)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n//# sourceMappingURL=isValidCandidate.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/**\r\n * A port of Google's `PhoneNumberMatcher.java`.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberMatcher.java\r\n * Date: 08.03.2018.\r\n */\nimport PhoneNumber from './PhoneNumber.js';\nimport { MAX_LENGTH_FOR_NSN, MAX_LENGTH_COUNTRY_CODE, VALID_PUNCTUATION } from './constants.js';\nimport createExtensionPattern from './helpers/extension/createExtensionPattern.js';\nimport RegExpCache from './findNumbers/RegExpCache.js';\nimport { limit, trimAfterFirstMatch } from './findNumbers/util.js';\nimport { _pL, _pN, pZ, PZ, pNd } from './findNumbers/utf-8.js';\nimport Leniency from './findNumbers/Leniency.js';\nimport parsePreCandidate from './findNumbers/parsePreCandidate.js';\nimport isValidPreCandidate from './findNumbers/isValidPreCandidate.js';\nimport isValidCandidate, { LEAD_CLASS } from './findNumbers/isValidCandidate.js';\nimport { isSupportedCountry } from './metadata.js';\nimport parsePhoneNumber from './parsePhoneNumber.js';\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;\nvar EXTN_PATTERNS_FOR_MATCHING = createExtensionPattern('matching');\n/**\r\n * Patterns used to extract phone numbers from a larger phone-number-like pattern. These are\r\n * ordered according to specificity. For example, white-space is last since that is frequently\r\n * used in numbers, not just to separate two numbers. We have separate patterns since we don't\r\n * want to break up the phone-number-like text on more than one different kind of symbol at one\r\n * time, although symbols of the same type (e.g. space) can be safely grouped together.\r\n *\r\n * Note that if there is a match, we will always check any text found up to the first match as\r\n * well.\r\n */\n\nvar INNER_MATCHES = [// Breaks on the slash - e.g. \"651-234-2345/332-445-1234\"\n'\\\\/+(.*)/', // Note that the bracket here is inside the capturing group, since we consider it part of the\n// phone number. Will match a pattern like \"(650) 223 3345 (754) 223 3321\".\n'(\\\\([^(]*)', // Breaks on a hyphen - e.g. \"12345 - 332-445-1234 is my number.\"\n// We require a space on either side of the hyphen for it to be considered a separator.\n\"(?:\".concat(pZ, \"-|-\").concat(pZ, \")\").concat(pZ, \"*(.+)\"), // Various types of wide hyphens. Note we have decided not to enforce a space here, since it's\n// possible that it's supposed to be used to break two numbers without spaces, and we haven't\n// seen many instances of it used within a number.\n\"[\\u2012-\\u2015\\uFF0D]\".concat(pZ, \"*(.+)\"), // Breaks on a full stop - e.g. \"12345. 332-445-1234 is my number.\"\n\"\\\\.+\".concat(pZ, \"*([^.]+)\"), // Breaks on space - e.g. \"3324451234 8002341234\"\n\"\".concat(pZ, \"+(\").concat(PZ, \"+)\")]; // Limit on the number of leading (plus) characters.\n\nvar leadLimit = limit(0, 2); // Limit on the number of consecutive punctuation characters.\n\nvar punctuationLimit = limit(0, 4);\n/* The maximum number of digits allowed in a digit-separated block. As we allow all digits in a\r\n * single block, set high enough to accommodate the entire national number and the international\r\n * country code. */\n\nvar digitBlockLimit = MAX_LENGTH_FOR_NSN + MAX_LENGTH_COUNTRY_CODE; // Limit on the number of blocks separated by punctuation.\n// Uses digitBlockLimit since some formats use spaces to separate each digit.\n\nvar blockLimit = limit(0, digitBlockLimit);\n/* A punctuation sequence allowing white space. */\n\nvar punctuation = \"[\".concat(VALID_PUNCTUATION, \"]\") + punctuationLimit; // A digits block without punctuation.\n\nvar digitSequence = pNd + limit(1, digitBlockLimit);\n/**\r\n * Phone number pattern allowing optional punctuation.\r\n * The phone number pattern used by `find()`, similar to\r\n * VALID_PHONE_NUMBER, but with the following differences:\r\n * <ul>\r\n *   <li>All captures are limited in order to place an upper bound to the text matched by the\r\n *       pattern.\r\n * <ul>\r\n *   <li>Leading punctuation / plus signs are limited.\r\n *   <li>Consecutive occurrences of punctuation are limited.\r\n *   <li>Number of digits is limited.\r\n * </ul>\r\n *   <li>No whitespace is allowed at the start or end.\r\n *   <li>No alpha digits (vanity numbers such as 1-800-SIX-FLAGS) are currently supported.\r\n * </ul>\r\n */\n\nvar PATTERN = '(?:' + LEAD_CLASS + punctuation + ')' + leadLimit + digitSequence + '(?:' + punctuation + digitSequence + ')' + blockLimit + '(?:' + EXTN_PATTERNS_FOR_MATCHING + ')?'; // Regular expression of trailing characters that we want to remove.\n// We remove all characters that are not alpha or numerical characters.\n// The hash character is retained here, as it may signify\n// the previous block was an extension.\n//\n// // Don't know what does '&&' mean here.\n// const UNWANTED_END_CHAR_PATTERN = new RegExp(`[[\\\\P{N}&&\\\\P{L}]&&[^#]]+$`)\n//\n\nvar UNWANTED_END_CHAR_PATTERN = new RegExp(\"[^\".concat(_pN).concat(_pL, \"#]+$\"));\nvar NON_DIGITS_PATTERN = /(\\D+)/;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n/**\r\n * A stateful class that finds and extracts telephone numbers from {@linkplain CharSequence text}.\r\n * Instances can be created using the {@linkplain PhoneNumberUtil#findNumbers factory methods} in\r\n * {@link PhoneNumberUtil}.\r\n *\r\n * <p>Vanity numbers (phone numbers using alphabetic digits such as <tt>1-800-SIX-FLAGS</tt> are\r\n * not found.\r\n *\r\n * <p>This class is not thread-safe.\r\n */\n\nvar PhoneNumberMatcher = /*#__PURE__*/function () {\n  /**\r\n   * @param {string} text — the character sequence that we will search, null for no text.\r\n   * @param {'POSSIBLE'|'VALID'|'STRICT_GROUPING'|'EXACT_GROUPING'} [options.leniency] — The leniency to use when evaluating candidate phone numbers. See `source/findNumbers/Leniency.js` for more details.\r\n   * @param {number} [options.maxTries] — The maximum number of invalid numbers to try before giving up on the text. This is to cover degenerate cases where the text has a lot of false positives in it. Must be >= 0.\r\n   */\n  function PhoneNumberMatcher() {\n    var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var metadata = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, PhoneNumberMatcher);\n\n    options = {\n      v2: options.v2,\n      defaultCallingCode: options.defaultCallingCode,\n      defaultCountry: options.defaultCountry && isSupportedCountry(options.defaultCountry, metadata) ? options.defaultCountry : undefined,\n      leniency: options.leniency || (options.extended ? 'POSSIBLE' : 'VALID'),\n      maxTries: options.maxTries || MAX_SAFE_INTEGER\n    }; // Validate `leniency`.\n\n    if (!options.leniency) {\n      throw new TypeError('`leniency` is required');\n    }\n\n    if (options.leniency !== 'POSSIBLE' && options.leniency !== 'VALID') {\n      throw new TypeError(\"Invalid `leniency`: \\\"\".concat(options.leniency, \"\\\". Supported values: \\\"POSSIBLE\\\", \\\"VALID\\\".\"));\n    } // Validate `maxTries`.\n\n\n    if (options.maxTries < 0) {\n      throw new TypeError('`maxTries` must be `>= 0`');\n    }\n\n    this.text = text;\n    this.options = options;\n    this.metadata = metadata; // The degree of phone number validation.\n\n    this.leniency = Leniency[options.leniency];\n\n    if (!this.leniency) {\n      throw new TypeError(\"Unknown leniency: \\\"\".concat(options.leniency, \"\\\"\"));\n    }\n    /** The maximum number of retries after matching an invalid number. */\n\n\n    this.maxTries = options.maxTries;\n    this.PATTERN = new RegExp(PATTERN, 'ig');\n    /** The iteration tristate. */\n\n    this.state = 'NOT_READY';\n    /** The next index to start searching at. Undefined in {@link State#DONE}. */\n\n    this.searchIndex = 0; // A cache for frequently used country-specific regular expressions. Set to 32 to cover ~2-3\n    // countries being used for the same doc with ~10 patterns for each country. Some pages will have\n    // a lot more countries in use, but typically fewer numbers for each so expanding the cache for\n    // that use-case won't have a lot of benefit.\n\n    this.regExpCache = new RegExpCache(32);\n  }\n  /**\r\n   * Attempts to find the next subsequence in the searched sequence on or after {@code searchIndex}\r\n   * that represents a phone number. Returns the next match, null if none was found.\r\n   *\r\n   * @param index  the search index to start searching at\r\n   * @return  the phone number match found, null if none can be found\r\n   */\n\n\n  _createClass(PhoneNumberMatcher, [{\n    key: \"find\",\n    value: function find() {\n      // // Reset the regular expression.\n      // this.PATTERN.lastIndex = index\n      var matches;\n\n      while (this.maxTries > 0 && (matches = this.PATTERN.exec(this.text)) !== null) {\n        var candidate = matches[0];\n        var offset = matches.index;\n        candidate = parsePreCandidate(candidate);\n\n        if (isValidPreCandidate(candidate, offset, this.text)) {\n          var match = // Try to come up with a valid match given the entire candidate.\n          this.parseAndVerify(candidate, offset, this.text) // If that failed, try to find an \"inner match\" -\n          // there might be a phone number within this candidate.\n          || this.extractInnerMatch(candidate, offset, this.text);\n\n          if (match) {\n            if (this.options.v2) {\n              return {\n                startsAt: match.startsAt,\n                endsAt: match.endsAt,\n                number: match.phoneNumber\n              };\n            } else {\n              var phoneNumber = match.phoneNumber;\n              var result = {\n                startsAt: match.startsAt,\n                endsAt: match.endsAt,\n                phone: phoneNumber.nationalNumber\n              };\n\n              if (phoneNumber.country) {\n                /* istanbul ignore if */\n                if (USE_NON_GEOGRAPHIC_COUNTRY_CODE && country === '001') {\n                  result.countryCallingCode = phoneNumber.countryCallingCode;\n                } else {\n                  result.country = phoneNumber.country;\n                }\n              } else {\n                result.countryCallingCode = phoneNumber.countryCallingCode;\n              }\n\n              if (phoneNumber.ext) {\n                result.ext = phoneNumber.ext;\n              }\n\n              return result;\n            }\n          }\n        }\n\n        this.maxTries--;\n      }\n    }\n    /**\r\n     * Attempts to extract a match from `substring`\r\n     * if the substring itself does not qualify as a match.\r\n     */\n\n  }, {\n    key: \"extractInnerMatch\",\n    value: function extractInnerMatch(substring, offset, text) {\n      for (var _iterator = _createForOfIteratorHelperLoose(INNER_MATCHES), _step; !(_step = _iterator()).done;) {\n        var innerMatchPattern = _step.value;\n        var isFirstMatch = true;\n        var candidateMatch = void 0;\n        var innerMatchRegExp = new RegExp(innerMatchPattern, 'g');\n\n        while (this.maxTries > 0 && (candidateMatch = innerMatchRegExp.exec(substring)) !== null) {\n          if (isFirstMatch) {\n            // We should handle any group before this one too.\n            var _candidate = trimAfterFirstMatch(UNWANTED_END_CHAR_PATTERN, substring.slice(0, candidateMatch.index));\n\n            var _match = this.parseAndVerify(_candidate, offset, text);\n\n            if (_match) {\n              return _match;\n            }\n\n            this.maxTries--;\n            isFirstMatch = false;\n          }\n\n          var candidate = trimAfterFirstMatch(UNWANTED_END_CHAR_PATTERN, candidateMatch[1]); // Java code does `groupMatcher.start(1)` here,\n          // but there's no way in javascript to get a `candidate` start index,\n          // therefore resort to using this kind of an approximation.\n          // (`groupMatcher` is called `candidateInSubstringMatch` in this javascript port)\n          // https://stackoverflow.com/questions/15934353/get-index-of-each-capture-in-a-javascript-regex\n\n          var candidateIndexGuess = substring.indexOf(candidate, candidateMatch.index);\n          var match = this.parseAndVerify(candidate, offset + candidateIndexGuess, text);\n\n          if (match) {\n            return match;\n          }\n\n          this.maxTries--;\n        }\n      }\n    }\n    /**\r\n     * Parses a phone number from the `candidate` using `parse` and\r\n     * verifies it matches the requested `leniency`. If parsing and verification succeed,\r\n     * a corresponding `PhoneNumberMatch` is returned, otherwise this method returns `null`.\r\n     *\r\n     * @param candidate  the candidate match\r\n     * @param offset  the offset of {@code candidate} within {@link #text}\r\n     * @return  the parsed and validated phone number match, or null\r\n     */\n\n  }, {\n    key: \"parseAndVerify\",\n    value: function parseAndVerify(candidate, offset, text) {\n      if (!isValidCandidate(candidate, offset, text, this.options.leniency)) {\n        return;\n      }\n\n      var phoneNumber = parsePhoneNumber(candidate, {\n        extended: true,\n        defaultCountry: this.options.defaultCountry,\n        defaultCallingCode: this.options.defaultCallingCode\n      }, this.metadata);\n\n      if (!phoneNumber) {\n        return;\n      }\n\n      if (!phoneNumber.isPossible()) {\n        return;\n      }\n\n      if (this.leniency(phoneNumber, {\n        candidate: candidate,\n        defaultCountry: this.options.defaultCountry,\n        metadata: this.metadata,\n        regExpCache: this.regExpCache\n      })) {\n        return {\n          startsAt: offset,\n          endsAt: offset + candidate.length,\n          phoneNumber: phoneNumber\n        };\n      }\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      if (this.state === 'NOT_READY') {\n        this.lastMatch = this.find(); // (this.searchIndex)\n\n        if (this.lastMatch) {\n          // this.searchIndex = this.lastMatch.endsAt\n          this.state = 'READY';\n        } else {\n          this.state = 'DONE';\n        }\n      }\n\n      return this.state === 'READY';\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      // Check the state and find the next match as a side-effect if necessary.\n      if (!this.hasNext()) {\n        throw new Error('No next element');\n      } // Don't retain that memory any longer than necessary.\n\n\n      var result = this.lastMatch;\n      this.lastMatch = null;\n      this.state = 'NOT_READY';\n      return result;\n    }\n  }]);\n\n  return PhoneNumberMatcher;\n}();\n\nexport { PhoneNumberMatcher as default };\n//# sourceMappingURL=PhoneNumberMatcher.js.map","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PhoneNumberMatcher from './PhoneNumberMatcher.js';\nimport normalizeArguments from './normalizeArguments.js';\nexport default function findPhoneNumbersInText() {\n  var _normalizeArguments = normalizeArguments(arguments),\n      text = _normalizeArguments.text,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  var matcher = new PhoneNumberMatcher(text, _objectSpread(_objectSpread({}, options), {}, {\n    v2: true\n  }), metadata);\n  var results = [];\n\n  while (matcher.hasNext()) {\n    results.push(matcher.next());\n  }\n\n  return results;\n}\n//# sourceMappingURL=findPhoneNumbersInText.js.map","import withMetadataArgument from './withMetadataArgument.js'\r\nimport { default as _parsePhoneNumber } from '../../core/index.js'\r\n\r\nexport function parsePhoneNumber() {\r\n\treturn withMetadataArgument(_parsePhoneNumber, arguments)\r\n}","import withMetadataArgument from './withMetadataArgument.js'\r\nimport { findPhoneNumbersInText as _findPhoneNumbersInText } from '../../core/index.js'\r\n\r\nexport function findPhoneNumbersInText() {\r\n\treturn withMetadataArgument(_findPhoneNumbersInText, arguments)\r\n}","// src/utils/env.ts\nvar NOTHING = Symbol.for(\"immer-nothing\");\nvar DRAFTABLE = Symbol.for(\"immer-draftable\");\nvar DRAFT_STATE = Symbol.for(\"immer-state\");\n\n// src/utils/errors.ts\nvar errors = process.env.NODE_ENV !== \"production\" ? [\n  // All error codes, starting by 0:\n  function(plugin) {\n    return `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`;\n  },\n  function(thing) {\n    return `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`;\n  },\n  \"This object has been frozen and should not be mutated\",\n  function(data) {\n    return \"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" + data;\n  },\n  \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n  \"Immer forbids circular references\",\n  \"The first or second argument to `produce` must be a function\",\n  \"The third argument to `produce` must be a function or undefined\",\n  \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n  \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n  function(thing) {\n    return `'current' expects a draft, got: ${thing}`;\n  },\n  \"Object.defineProperty() cannot be used on an Immer draft\",\n  \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n  \"Immer only supports deleting array indices\",\n  \"Immer only supports setting array indices and the 'length' property\",\n  function(thing) {\n    return `'original' expects a draft, got: ${thing}`;\n  }\n  // Note: if more errors are added, the errorOffset in Patches.ts should be increased\n  // See Patches.ts for additional errors\n] : [];\nfunction die(error, ...args) {\n  if (process.env.NODE_ENV !== \"production\") {\n    const e = errors[error];\n    const msg = typeof e === \"function\" ? e.apply(null, args) : e;\n    throw new Error(`[Immer] ${msg}`);\n  }\n  throw new Error(\n    `[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`\n  );\n}\n\n// src/utils/common.ts\nvar getPrototypeOf = Object.getPrototypeOf;\nfunction isDraft(value) {\n  return !!value && !!value[DRAFT_STATE];\n}\nfunction isDraftable(value) {\n  if (!value)\n    return false;\n  return isPlainObject(value) || Array.isArray(value) || !!value[DRAFTABLE] || !!value.constructor?.[DRAFTABLE] || isMap(value) || isSet(value);\n}\nvar objectCtorString = Object.prototype.constructor.toString();\nfunction isPlainObject(value) {\n  if (!value || typeof value !== \"object\")\n    return false;\n  const proto = getPrototypeOf(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = Object.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  if (Ctor === Object)\n    return true;\n  return typeof Ctor == \"function\" && Function.toString.call(Ctor) === objectCtorString;\n}\nfunction original(value) {\n  if (!isDraft(value))\n    die(15, value);\n  return value[DRAFT_STATE].base_;\n}\nfunction each(obj, iter) {\n  if (getArchtype(obj) === 0 /* Object */) {\n    Object.entries(obj).forEach(([key, value]) => {\n      iter(key, value, obj);\n    });\n  } else {\n    obj.forEach((entry, index) => iter(index, entry, obj));\n  }\n}\nfunction getArchtype(thing) {\n  const state = thing[DRAFT_STATE];\n  return state ? state.type_ : Array.isArray(thing) ? 1 /* Array */ : isMap(thing) ? 2 /* Map */ : isSet(thing) ? 3 /* Set */ : 0 /* Object */;\n}\nfunction has(thing, prop) {\n  return getArchtype(thing) === 2 /* Map */ ? thing.has(prop) : Object.prototype.hasOwnProperty.call(thing, prop);\n}\nfunction get(thing, prop) {\n  return getArchtype(thing) === 2 /* Map */ ? thing.get(prop) : thing[prop];\n}\nfunction set(thing, propOrOldValue, value) {\n  const t = getArchtype(thing);\n  if (t === 2 /* Map */)\n    thing.set(propOrOldValue, value);\n  else if (t === 3 /* Set */) {\n    thing.add(value);\n  } else\n    thing[propOrOldValue] = value;\n}\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction isMap(target) {\n  return target instanceof Map;\n}\nfunction isSet(target) {\n  return target instanceof Set;\n}\nfunction latest(state) {\n  return state.copy_ || state.base_;\n}\nfunction shallowCopy(base, strict) {\n  if (isMap(base)) {\n    return new Map(base);\n  }\n  if (isSet(base)) {\n    return new Set(base);\n  }\n  if (Array.isArray(base))\n    return Array.prototype.slice.call(base);\n  if (!strict && isPlainObject(base)) {\n    if (!getPrototypeOf(base)) {\n      const obj = /* @__PURE__ */ Object.create(null);\n      return Object.assign(obj, base);\n    }\n    return { ...base };\n  }\n  const descriptors = Object.getOwnPropertyDescriptors(base);\n  delete descriptors[DRAFT_STATE];\n  let keys = Reflect.ownKeys(descriptors);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const desc = descriptors[key];\n    if (desc.writable === false) {\n      desc.writable = true;\n      desc.configurable = true;\n    }\n    if (desc.get || desc.set)\n      descriptors[key] = {\n        configurable: true,\n        writable: true,\n        // could live with !!desc.set as well here...\n        enumerable: desc.enumerable,\n        value: base[key]\n      };\n  }\n  return Object.create(getPrototypeOf(base), descriptors);\n}\nfunction freeze(obj, deep = false) {\n  if (isFrozen(obj) || isDraft(obj) || !isDraftable(obj))\n    return obj;\n  if (getArchtype(obj) > 1) {\n    obj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections;\n  }\n  Object.freeze(obj);\n  if (deep)\n    each(obj, (_key, value) => freeze(value, true), true);\n  return obj;\n}\nfunction dontMutateFrozenCollections() {\n  die(2);\n}\nfunction isFrozen(obj) {\n  return Object.isFrozen(obj);\n}\n\n// src/utils/plugins.ts\nvar plugins = {};\nfunction getPlugin(pluginKey) {\n  const plugin = plugins[pluginKey];\n  if (!plugin) {\n    die(0, pluginKey);\n  }\n  return plugin;\n}\nfunction loadPlugin(pluginKey, implementation) {\n  if (!plugins[pluginKey])\n    plugins[pluginKey] = implementation;\n}\n\n// src/core/scope.ts\nvar currentScope;\nfunction getCurrentScope() {\n  return currentScope;\n}\nfunction createScope(parent_, immer_) {\n  return {\n    drafts_: [],\n    parent_,\n    immer_,\n    // Whenever the modified draft contains a draft from another scope, we\n    // need to prevent auto-freezing so the unowned draft can be finalized.\n    canAutoFreeze_: true,\n    unfinalizedDrafts_: 0\n  };\n}\nfunction usePatchesInScope(scope, patchListener) {\n  if (patchListener) {\n    getPlugin(\"Patches\");\n    scope.patches_ = [];\n    scope.inversePatches_ = [];\n    scope.patchListener_ = patchListener;\n  }\n}\nfunction revokeScope(scope) {\n  leaveScope(scope);\n  scope.drafts_.forEach(revokeDraft);\n  scope.drafts_ = null;\n}\nfunction leaveScope(scope) {\n  if (scope === currentScope) {\n    currentScope = scope.parent_;\n  }\n}\nfunction enterScope(immer2) {\n  return currentScope = createScope(currentScope, immer2);\n}\nfunction revokeDraft(draft) {\n  const state = draft[DRAFT_STATE];\n  if (state.type_ === 0 /* Object */ || state.type_ === 1 /* Array */)\n    state.revoke_();\n  else\n    state.revoked_ = true;\n}\n\n// src/core/finalize.ts\nfunction processResult(result, scope) {\n  scope.unfinalizedDrafts_ = scope.drafts_.length;\n  const baseDraft = scope.drafts_[0];\n  const isReplaced = result !== void 0 && result !== baseDraft;\n  if (isReplaced) {\n    if (baseDraft[DRAFT_STATE].modified_) {\n      revokeScope(scope);\n      die(4);\n    }\n    if (isDraftable(result)) {\n      result = finalize(scope, result);\n      if (!scope.parent_)\n        maybeFreeze(scope, result);\n    }\n    if (scope.patches_) {\n      getPlugin(\"Patches\").generateReplacementPatches_(\n        baseDraft[DRAFT_STATE].base_,\n        result,\n        scope.patches_,\n        scope.inversePatches_\n      );\n    }\n  } else {\n    result = finalize(scope, baseDraft, []);\n  }\n  revokeScope(scope);\n  if (scope.patches_) {\n    scope.patchListener_(scope.patches_, scope.inversePatches_);\n  }\n  return result !== NOTHING ? result : void 0;\n}\nfunction finalize(rootScope, value, path) {\n  if (isFrozen(value))\n    return value;\n  const state = value[DRAFT_STATE];\n  if (!state) {\n    each(\n      value,\n      (key, childValue) => finalizeProperty(rootScope, state, value, key, childValue, path),\n      true\n      // See #590, don't recurse into non-enumerable of non drafted objects\n    );\n    return value;\n  }\n  if (state.scope_ !== rootScope)\n    return value;\n  if (!state.modified_) {\n    maybeFreeze(rootScope, state.base_, true);\n    return state.base_;\n  }\n  if (!state.finalized_) {\n    state.finalized_ = true;\n    state.scope_.unfinalizedDrafts_--;\n    const result = state.copy_;\n    let resultEach = result;\n    let isSet2 = false;\n    if (state.type_ === 3 /* Set */) {\n      resultEach = new Set(result);\n      result.clear();\n      isSet2 = true;\n    }\n    each(\n      resultEach,\n      (key, childValue) => finalizeProperty(rootScope, state, result, key, childValue, path, isSet2)\n    );\n    maybeFreeze(rootScope, result, false);\n    if (path && rootScope.patches_) {\n      getPlugin(\"Patches\").generatePatches_(\n        state,\n        path,\n        rootScope.patches_,\n        rootScope.inversePatches_\n      );\n    }\n  }\n  return state.copy_;\n}\nfunction finalizeProperty(rootScope, parentState, targetObject, prop, childValue, rootPath, targetIsSet) {\n  if (process.env.NODE_ENV !== \"production\" && childValue === targetObject)\n    die(5);\n  if (isDraft(childValue)) {\n    const path = rootPath && parentState && parentState.type_ !== 3 /* Set */ && // Set objects are atomic since they have no keys.\n    !has(parentState.assigned_, prop) ? rootPath.concat(prop) : void 0;\n    const res = finalize(rootScope, childValue, path);\n    set(targetObject, prop, res);\n    if (isDraft(res)) {\n      rootScope.canAutoFreeze_ = false;\n    } else\n      return;\n  } else if (targetIsSet) {\n    targetObject.add(childValue);\n  }\n  if (isDraftable(childValue) && !isFrozen(childValue)) {\n    if (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n      return;\n    }\n    finalize(rootScope, childValue);\n    if (!parentState || !parentState.scope_.parent_)\n      maybeFreeze(rootScope, childValue);\n  }\n}\nfunction maybeFreeze(scope, value, deep = false) {\n  if (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n    freeze(value, deep);\n  }\n}\n\n// src/core/proxy.ts\nfunction createProxyProxy(base, parent) {\n  const isArray = Array.isArray(base);\n  const state = {\n    type_: isArray ? 1 /* Array */ : 0 /* Object */,\n    // Track which produce call this is associated with.\n    scope_: parent ? parent.scope_ : getCurrentScope(),\n    // True for both shallow and deep changes.\n    modified_: false,\n    // Used during finalization.\n    finalized_: false,\n    // Track which properties have been assigned (true) or deleted (false).\n    assigned_: {},\n    // The parent draft state.\n    parent_: parent,\n    // The base state.\n    base_: base,\n    // The base proxy.\n    draft_: null,\n    // set below\n    // The base copy with any updated values.\n    copy_: null,\n    // Called by the `produce` function.\n    revoke_: null,\n    isManual_: false\n  };\n  let target = state;\n  let traps = objectTraps;\n  if (isArray) {\n    target = [state];\n    traps = arrayTraps;\n  }\n  const { revoke, proxy } = Proxy.revocable(target, traps);\n  state.draft_ = proxy;\n  state.revoke_ = revoke;\n  return proxy;\n}\nvar objectTraps = {\n  get(state, prop) {\n    if (prop === DRAFT_STATE)\n      return state;\n    const source = latest(state);\n    if (!has(source, prop)) {\n      return readPropFromProto(state, source, prop);\n    }\n    const value = source[prop];\n    if (state.finalized_ || !isDraftable(value)) {\n      return value;\n    }\n    if (value === peek(state.base_, prop)) {\n      prepareCopy(state);\n      return state.copy_[prop] = createProxy(value, state);\n    }\n    return value;\n  },\n  has(state, prop) {\n    return prop in latest(state);\n  },\n  ownKeys(state) {\n    return Reflect.ownKeys(latest(state));\n  },\n  set(state, prop, value) {\n    const desc = getDescriptorFromProto(latest(state), prop);\n    if (desc?.set) {\n      desc.set.call(state.draft_, value);\n      return true;\n    }\n    if (!state.modified_) {\n      const current2 = peek(latest(state), prop);\n      const currentState = current2?.[DRAFT_STATE];\n      if (currentState && currentState.base_ === value) {\n        state.copy_[prop] = value;\n        state.assigned_[prop] = false;\n        return true;\n      }\n      if (is(value, current2) && (value !== void 0 || has(state.base_, prop)))\n        return true;\n      prepareCopy(state);\n      markChanged(state);\n    }\n    if (state.copy_[prop] === value && // special case: handle new props with value 'undefined'\n    (value !== void 0 || prop in state.copy_) || // special case: NaN\n    Number.isNaN(value) && Number.isNaN(state.copy_[prop]))\n      return true;\n    state.copy_[prop] = value;\n    state.assigned_[prop] = true;\n    return true;\n  },\n  deleteProperty(state, prop) {\n    if (peek(state.base_, prop) !== void 0 || prop in state.base_) {\n      state.assigned_[prop] = false;\n      prepareCopy(state);\n      markChanged(state);\n    } else {\n      delete state.assigned_[prop];\n    }\n    if (state.copy_) {\n      delete state.copy_[prop];\n    }\n    return true;\n  },\n  // Note: We never coerce `desc.value` into an Immer draft, because we can't make\n  // the same guarantee in ES5 mode.\n  getOwnPropertyDescriptor(state, prop) {\n    const owner = latest(state);\n    const desc = Reflect.getOwnPropertyDescriptor(owner, prop);\n    if (!desc)\n      return desc;\n    return {\n      writable: true,\n      configurable: state.type_ !== 1 /* Array */ || prop !== \"length\",\n      enumerable: desc.enumerable,\n      value: owner[prop]\n    };\n  },\n  defineProperty() {\n    die(11);\n  },\n  getPrototypeOf(state) {\n    return getPrototypeOf(state.base_);\n  },\n  setPrototypeOf() {\n    die(12);\n  }\n};\nvar arrayTraps = {};\neach(objectTraps, (key, fn) => {\n  arrayTraps[key] = function() {\n    arguments[0] = arguments[0][0];\n    return fn.apply(this, arguments);\n  };\n});\narrayTraps.deleteProperty = function(state, prop) {\n  if (process.env.NODE_ENV !== \"production\" && isNaN(parseInt(prop)))\n    die(13);\n  return arrayTraps.set.call(this, state, prop, void 0);\n};\narrayTraps.set = function(state, prop, value) {\n  if (process.env.NODE_ENV !== \"production\" && prop !== \"length\" && isNaN(parseInt(prop)))\n    die(14);\n  return objectTraps.set.call(this, state[0], prop, value, state[0]);\n};\nfunction peek(draft, prop) {\n  const state = draft[DRAFT_STATE];\n  const source = state ? latest(state) : draft;\n  return source[prop];\n}\nfunction readPropFromProto(state, source, prop) {\n  const desc = getDescriptorFromProto(source, prop);\n  return desc ? `value` in desc ? desc.value : (\n    // This is a very special case, if the prop is a getter defined by the\n    // prototype, we should invoke it with the draft as context!\n    desc.get?.call(state.draft_)\n  ) : void 0;\n}\nfunction getDescriptorFromProto(source, prop) {\n  if (!(prop in source))\n    return void 0;\n  let proto = getPrototypeOf(source);\n  while (proto) {\n    const desc = Object.getOwnPropertyDescriptor(proto, prop);\n    if (desc)\n      return desc;\n    proto = getPrototypeOf(proto);\n  }\n  return void 0;\n}\nfunction markChanged(state) {\n  if (!state.modified_) {\n    state.modified_ = true;\n    if (state.parent_) {\n      markChanged(state.parent_);\n    }\n  }\n}\nfunction prepareCopy(state) {\n  if (!state.copy_) {\n    state.copy_ = shallowCopy(\n      state.base_,\n      state.scope_.immer_.useStrictShallowCopy_\n    );\n  }\n}\n\n// src/core/immerClass.ts\nvar Immer2 = class {\n  constructor(config) {\n    this.autoFreeze_ = true;\n    this.useStrictShallowCopy_ = false;\n    /**\n     * The `produce` function takes a value and a \"recipe function\" (whose\n     * return value often depends on the base state). The recipe function is\n     * free to mutate its first argument however it wants. All mutations are\n     * only ever applied to a __copy__ of the base state.\n     *\n     * Pass only a function to create a \"curried producer\" which relieves you\n     * from passing the recipe function every time.\n     *\n     * Only plain objects and arrays are made mutable. All other objects are\n     * considered uncopyable.\n     *\n     * Note: This function is __bound__ to its `Immer` instance.\n     *\n     * @param {any} base - the initial state\n     * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n     * @param {Function} patchListener - optional function that will be called with all the patches produced here\n     * @returns {any} a new state, or the initial state if nothing was modified\n     */\n    this.produce = (base, recipe, patchListener) => {\n      if (typeof base === \"function\" && typeof recipe !== \"function\") {\n        const defaultBase = recipe;\n        recipe = base;\n        const self = this;\n        return function curriedProduce(base2 = defaultBase, ...args) {\n          return self.produce(base2, (draft) => recipe.call(this, draft, ...args));\n        };\n      }\n      if (typeof recipe !== \"function\")\n        die(6);\n      if (patchListener !== void 0 && typeof patchListener !== \"function\")\n        die(7);\n      let result;\n      if (isDraftable(base)) {\n        const scope = enterScope(this);\n        const proxy = createProxy(base, void 0);\n        let hasError = true;\n        try {\n          result = recipe(proxy);\n          hasError = false;\n        } finally {\n          if (hasError)\n            revokeScope(scope);\n          else\n            leaveScope(scope);\n        }\n        usePatchesInScope(scope, patchListener);\n        return processResult(result, scope);\n      } else if (!base || typeof base !== \"object\") {\n        result = recipe(base);\n        if (result === void 0)\n          result = base;\n        if (result === NOTHING)\n          result = void 0;\n        if (this.autoFreeze_)\n          freeze(result, true);\n        if (patchListener) {\n          const p = [];\n          const ip = [];\n          getPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip);\n          patchListener(p, ip);\n        }\n        return result;\n      } else\n        die(1, base);\n    };\n    this.produceWithPatches = (base, recipe) => {\n      if (typeof base === \"function\") {\n        return (state, ...args) => this.produceWithPatches(state, (draft) => base(draft, ...args));\n      }\n      let patches, inversePatches;\n      const result = this.produce(base, recipe, (p, ip) => {\n        patches = p;\n        inversePatches = ip;\n      });\n      return [result, patches, inversePatches];\n    };\n    if (typeof config?.autoFreeze === \"boolean\")\n      this.setAutoFreeze(config.autoFreeze);\n    if (typeof config?.useStrictShallowCopy === \"boolean\")\n      this.setUseStrictShallowCopy(config.useStrictShallowCopy);\n  }\n  createDraft(base) {\n    if (!isDraftable(base))\n      die(8);\n    if (isDraft(base))\n      base = current(base);\n    const scope = enterScope(this);\n    const proxy = createProxy(base, void 0);\n    proxy[DRAFT_STATE].isManual_ = true;\n    leaveScope(scope);\n    return proxy;\n  }\n  finishDraft(draft, patchListener) {\n    const state = draft && draft[DRAFT_STATE];\n    if (!state || !state.isManual_)\n      die(9);\n    const { scope_: scope } = state;\n    usePatchesInScope(scope, patchListener);\n    return processResult(void 0, scope);\n  }\n  /**\n   * Pass true to automatically freeze all copies created by Immer.\n   *\n   * By default, auto-freezing is enabled.\n   */\n  setAutoFreeze(value) {\n    this.autoFreeze_ = value;\n  }\n  /**\n   * Pass true to enable strict shallow copy.\n   *\n   * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n   */\n  setUseStrictShallowCopy(value) {\n    this.useStrictShallowCopy_ = value;\n  }\n  applyPatches(base, patches) {\n    let i;\n    for (i = patches.length - 1; i >= 0; i--) {\n      const patch = patches[i];\n      if (patch.path.length === 0 && patch.op === \"replace\") {\n        base = patch.value;\n        break;\n      }\n    }\n    if (i > -1) {\n      patches = patches.slice(i + 1);\n    }\n    const applyPatchesImpl = getPlugin(\"Patches\").applyPatches_;\n    if (isDraft(base)) {\n      return applyPatchesImpl(base, patches);\n    }\n    return this.produce(\n      base,\n      (draft) => applyPatchesImpl(draft, patches)\n    );\n  }\n};\nfunction createProxy(value, parent) {\n  const draft = isMap(value) ? getPlugin(\"MapSet\").proxyMap_(value, parent) : isSet(value) ? getPlugin(\"MapSet\").proxySet_(value, parent) : createProxyProxy(value, parent);\n  const scope = parent ? parent.scope_ : getCurrentScope();\n  scope.drafts_.push(draft);\n  return draft;\n}\n\n// src/core/current.ts\nfunction current(value) {\n  if (!isDraft(value))\n    die(10, value);\n  return currentImpl(value);\n}\nfunction currentImpl(value) {\n  if (!isDraftable(value) || isFrozen(value))\n    return value;\n  const state = value[DRAFT_STATE];\n  let copy;\n  if (state) {\n    if (!state.modified_)\n      return state.base_;\n    state.finalized_ = true;\n    copy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_);\n  } else {\n    copy = shallowCopy(value, true);\n  }\n  each(copy, (key, childValue) => {\n    set(copy, key, currentImpl(childValue));\n  });\n  if (state) {\n    state.finalized_ = false;\n  }\n  return copy;\n}\n\n// src/plugins/patches.ts\nfunction enablePatches() {\n  const errorOffset = 16;\n  if (process.env.NODE_ENV !== \"production\") {\n    errors.push(\n      'Sets cannot have \"replace\" patches.',\n      function(op) {\n        return \"Unsupported patch operation: \" + op;\n      },\n      function(path) {\n        return \"Cannot apply patch, path doesn't resolve: \" + path;\n      },\n      \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n    );\n  }\n  const REPLACE = \"replace\";\n  const ADD = \"add\";\n  const REMOVE = \"remove\";\n  function generatePatches_(state, basePath, patches, inversePatches) {\n    switch (state.type_) {\n      case 0 /* Object */:\n      case 2 /* Map */:\n        return generatePatchesFromAssigned(\n          state,\n          basePath,\n          patches,\n          inversePatches\n        );\n      case 1 /* Array */:\n        return generateArrayPatches(state, basePath, patches, inversePatches);\n      case 3 /* Set */:\n        return generateSetPatches(\n          state,\n          basePath,\n          patches,\n          inversePatches\n        );\n    }\n  }\n  function generateArrayPatches(state, basePath, patches, inversePatches) {\n    let { base_, assigned_ } = state;\n    let copy_ = state.copy_;\n    if (copy_.length < base_.length) {\n      ;\n      [base_, copy_] = [copy_, base_];\n      [patches, inversePatches] = [inversePatches, patches];\n    }\n    for (let i = 0; i < base_.length; i++) {\n      if (assigned_[i] && copy_[i] !== base_[i]) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: REPLACE,\n          path,\n          // Need to maybe clone it, as it can in fact be the original value\n          // due to the base/copy inversion at the start of this function\n          value: clonePatchValueIfNeeded(copy_[i])\n        });\n        inversePatches.push({\n          op: REPLACE,\n          path,\n          value: clonePatchValueIfNeeded(base_[i])\n        });\n      }\n    }\n    for (let i = base_.length; i < copy_.length; i++) {\n      const path = basePath.concat([i]);\n      patches.push({\n        op: ADD,\n        path,\n        // Need to maybe clone it, as it can in fact be the original value\n        // due to the base/copy inversion at the start of this function\n        value: clonePatchValueIfNeeded(copy_[i])\n      });\n    }\n    for (let i = copy_.length - 1; base_.length <= i; --i) {\n      const path = basePath.concat([i]);\n      inversePatches.push({\n        op: REMOVE,\n        path\n      });\n    }\n  }\n  function generatePatchesFromAssigned(state, basePath, patches, inversePatches) {\n    const { base_, copy_ } = state;\n    each(state.assigned_, (key, assignedValue) => {\n      const origValue = get(base_, key);\n      const value = get(copy_, key);\n      const op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD;\n      if (origValue === value && op === REPLACE)\n        return;\n      const path = basePath.concat(key);\n      patches.push(op === REMOVE ? { op, path } : { op, path, value });\n      inversePatches.push(\n        op === ADD ? { op: REMOVE, path } : op === REMOVE ? { op: ADD, path, value: clonePatchValueIfNeeded(origValue) } : { op: REPLACE, path, value: clonePatchValueIfNeeded(origValue) }\n      );\n    });\n  }\n  function generateSetPatches(state, basePath, patches, inversePatches) {\n    let { base_, copy_ } = state;\n    let i = 0;\n    base_.forEach((value) => {\n      if (!copy_.has(value)) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: REMOVE,\n          path,\n          value\n        });\n        inversePatches.unshift({\n          op: ADD,\n          path,\n          value\n        });\n      }\n      i++;\n    });\n    i = 0;\n    copy_.forEach((value) => {\n      if (!base_.has(value)) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: ADD,\n          path,\n          value\n        });\n        inversePatches.unshift({\n          op: REMOVE,\n          path,\n          value\n        });\n      }\n      i++;\n    });\n  }\n  function generateReplacementPatches_(baseValue, replacement, patches, inversePatches) {\n    patches.push({\n      op: REPLACE,\n      path: [],\n      value: replacement === NOTHING ? void 0 : replacement\n    });\n    inversePatches.push({\n      op: REPLACE,\n      path: [],\n      value: baseValue\n    });\n  }\n  function applyPatches_(draft, patches) {\n    patches.forEach((patch) => {\n      const { path, op } = patch;\n      let base = draft;\n      for (let i = 0; i < path.length - 1; i++) {\n        const parentType = getArchtype(base);\n        let p = path[i];\n        if (typeof p !== \"string\" && typeof p !== \"number\") {\n          p = \"\" + p;\n        }\n        if ((parentType === 0 /* Object */ || parentType === 1 /* Array */) && (p === \"__proto__\" || p === \"constructor\"))\n          die(errorOffset + 3);\n        if (typeof base === \"function\" && p === \"prototype\")\n          die(errorOffset + 3);\n        base = get(base, p);\n        if (typeof base !== \"object\")\n          die(errorOffset + 2, path.join(\"/\"));\n      }\n      const type = getArchtype(base);\n      const value = deepClonePatchValue(patch.value);\n      const key = path[path.length - 1];\n      switch (op) {\n        case REPLACE:\n          switch (type) {\n            case 2 /* Map */:\n              return base.set(key, value);\n            case 3 /* Set */:\n              die(errorOffset);\n            default:\n              return base[key] = value;\n          }\n        case ADD:\n          switch (type) {\n            case 1 /* Array */:\n              return key === \"-\" ? base.push(value) : base.splice(key, 0, value);\n            case 2 /* Map */:\n              return base.set(key, value);\n            case 3 /* Set */:\n              return base.add(value);\n            default:\n              return base[key] = value;\n          }\n        case REMOVE:\n          switch (type) {\n            case 1 /* Array */:\n              return base.splice(key, 1);\n            case 2 /* Map */:\n              return base.delete(key);\n            case 3 /* Set */:\n              return base.delete(patch.value);\n            default:\n              return delete base[key];\n          }\n        default:\n          die(errorOffset + 1, op);\n      }\n    });\n    return draft;\n  }\n  function deepClonePatchValue(obj) {\n    if (!isDraftable(obj))\n      return obj;\n    if (Array.isArray(obj))\n      return obj.map(deepClonePatchValue);\n    if (isMap(obj))\n      return new Map(\n        Array.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n      );\n    if (isSet(obj))\n      return new Set(Array.from(obj).map(deepClonePatchValue));\n    const cloned = Object.create(getPrototypeOf(obj));\n    for (const key in obj)\n      cloned[key] = deepClonePatchValue(obj[key]);\n    if (has(obj, DRAFTABLE))\n      cloned[DRAFTABLE] = obj[DRAFTABLE];\n    return cloned;\n  }\n  function clonePatchValueIfNeeded(obj) {\n    if (isDraft(obj)) {\n      return deepClonePatchValue(obj);\n    } else\n      return obj;\n  }\n  loadPlugin(\"Patches\", {\n    applyPatches_,\n    generatePatches_,\n    generateReplacementPatches_\n  });\n}\n\n// src/plugins/mapset.ts\nfunction enableMapSet() {\n  class DraftMap extends Map {\n    constructor(target, parent) {\n      super();\n      this[DRAFT_STATE] = {\n        type_: 2 /* Map */,\n        parent_: parent,\n        scope_: parent ? parent.scope_ : getCurrentScope(),\n        modified_: false,\n        finalized_: false,\n        copy_: void 0,\n        assigned_: void 0,\n        base_: target,\n        draft_: this,\n        isManual_: false,\n        revoked_: false\n      };\n    }\n    get size() {\n      return latest(this[DRAFT_STATE]).size;\n    }\n    has(key) {\n      return latest(this[DRAFT_STATE]).has(key);\n    }\n    set(key, value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!latest(state).has(key) || latest(state).get(key) !== value) {\n        prepareMapCopy(state);\n        markChanged(state);\n        state.assigned_.set(key, true);\n        state.copy_.set(key, value);\n        state.assigned_.set(key, true);\n      }\n      return this;\n    }\n    delete(key) {\n      if (!this.has(key)) {\n        return false;\n      }\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareMapCopy(state);\n      markChanged(state);\n      if (state.base_.has(key)) {\n        state.assigned_.set(key, false);\n      } else {\n        state.assigned_.delete(key);\n      }\n      state.copy_.delete(key);\n      return true;\n    }\n    clear() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (latest(state).size) {\n        prepareMapCopy(state);\n        markChanged(state);\n        state.assigned_ = /* @__PURE__ */ new Map();\n        each(state.base_, (key) => {\n          state.assigned_.set(key, false);\n        });\n        state.copy_.clear();\n      }\n    }\n    forEach(cb, thisArg) {\n      const state = this[DRAFT_STATE];\n      latest(state).forEach((_value, key, _map) => {\n        cb.call(thisArg, this.get(key), key, this);\n      });\n    }\n    get(key) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      const value = latest(state).get(key);\n      if (state.finalized_ || !isDraftable(value)) {\n        return value;\n      }\n      if (value !== state.base_.get(key)) {\n        return value;\n      }\n      const draft = createProxy(value, state);\n      prepareMapCopy(state);\n      state.copy_.set(key, draft);\n      return draft;\n    }\n    keys() {\n      return latest(this[DRAFT_STATE]).keys();\n    }\n    values() {\n      const iterator = this.keys();\n      return {\n        [Symbol.iterator]: () => this.values(),\n        next: () => {\n          const r = iterator.next();\n          if (r.done)\n            return r;\n          const value = this.get(r.value);\n          return {\n            done: false,\n            value\n          };\n        }\n      };\n    }\n    entries() {\n      const iterator = this.keys();\n      return {\n        [Symbol.iterator]: () => this.entries(),\n        next: () => {\n          const r = iterator.next();\n          if (r.done)\n            return r;\n          const value = this.get(r.value);\n          return {\n            done: false,\n            value: [r.value, value]\n          };\n        }\n      };\n    }\n    [(DRAFT_STATE, Symbol.iterator)]() {\n      return this.entries();\n    }\n  }\n  function proxyMap_(target, parent) {\n    return new DraftMap(target, parent);\n  }\n  function prepareMapCopy(state) {\n    if (!state.copy_) {\n      state.assigned_ = /* @__PURE__ */ new Map();\n      state.copy_ = new Map(state.base_);\n    }\n  }\n  class DraftSet extends Set {\n    constructor(target, parent) {\n      super();\n      this[DRAFT_STATE] = {\n        type_: 3 /* Set */,\n        parent_: parent,\n        scope_: parent ? parent.scope_ : getCurrentScope(),\n        modified_: false,\n        finalized_: false,\n        copy_: void 0,\n        base_: target,\n        draft_: this,\n        drafts_: /* @__PURE__ */ new Map(),\n        revoked_: false,\n        isManual_: false\n      };\n    }\n    get size() {\n      return latest(this[DRAFT_STATE]).size;\n    }\n    has(value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!state.copy_) {\n        return state.base_.has(value);\n      }\n      if (state.copy_.has(value))\n        return true;\n      if (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n        return true;\n      return false;\n    }\n    add(value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!this.has(value)) {\n        prepareSetCopy(state);\n        markChanged(state);\n        state.copy_.add(value);\n      }\n      return this;\n    }\n    delete(value) {\n      if (!this.has(value)) {\n        return false;\n      }\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      markChanged(state);\n      return state.copy_.delete(value) || (state.drafts_.has(value) ? state.copy_.delete(state.drafts_.get(value)) : (\n        /* istanbul ignore next */\n        false\n      ));\n    }\n    clear() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (latest(state).size) {\n        prepareSetCopy(state);\n        markChanged(state);\n        state.copy_.clear();\n      }\n    }\n    values() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      return state.copy_.values();\n    }\n    entries() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      return state.copy_.entries();\n    }\n    keys() {\n      return this.values();\n    }\n    [(DRAFT_STATE, Symbol.iterator)]() {\n      return this.values();\n    }\n    forEach(cb, thisArg) {\n      const iterator = this.values();\n      let result = iterator.next();\n      while (!result.done) {\n        cb.call(thisArg, result.value, result.value, this);\n        result = iterator.next();\n      }\n    }\n  }\n  function proxySet_(target, parent) {\n    return new DraftSet(target, parent);\n  }\n  function prepareSetCopy(state) {\n    if (!state.copy_) {\n      state.copy_ = /* @__PURE__ */ new Set();\n      state.base_.forEach((value) => {\n        if (isDraftable(value)) {\n          const draft = createProxy(value, state);\n          state.drafts_.set(value, draft);\n          state.copy_.add(draft);\n        } else {\n          state.copy_.add(value);\n        }\n      });\n    }\n  }\n  function assertUnrevoked(state) {\n    if (state.revoked_)\n      die(3, JSON.stringify(latest(state)));\n  }\n  loadPlugin(\"MapSet\", { proxyMap_, proxySet_ });\n}\n\n// src/immer.ts\nvar immer = new Immer2();\nvar produce = immer.produce;\nvar produceWithPatches = immer.produceWithPatches.bind(\n  immer\n);\nvar setAutoFreeze = immer.setAutoFreeze.bind(immer);\nvar setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer);\nvar applyPatches = immer.applyPatches.bind(immer);\nvar createDraft = immer.createDraft.bind(immer);\nvar finishDraft = immer.finishDraft.bind(immer);\nfunction castDraft(value) {\n  return value;\n}\nfunction castImmutable(value) {\n  return value;\n}\nexport {\n  Immer2 as Immer,\n  applyPatches,\n  castDraft,\n  castImmutable,\n  createDraft,\n  current,\n  enableMapSet,\n  enablePatches,\n  finishDraft,\n  freeze,\n  DRAFTABLE as immerable,\n  isDraft,\n  isDraftable,\n  NOTHING as nothing,\n  original,\n  produce,\n  produceWithPatches,\n  setAutoFreeze,\n  setUseStrictShallowCopy\n};\n//# sourceMappingURL=immer.mjs.map","import e,{useReducer as a,useEffect as i,useRef as o}from\"react\";import s from\"lodash.omit\";import r from\"react-country-flag\";import{parsePhoneNumberFromString as d,findPhoneNumbersInText as n}from\"libphonenumber-js\";import{produce as C}from\"immer\";function t(e){var a,i,o=\"\";if(\"string\"==typeof e||\"number\"==typeof e)o+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(a=0;a<e.length;a++)e[a]&&(i=t(e[a]))&&(o&&(o+=\" \"),o+=i);else for(a in e)e[a]&&(o&&(o+=\" \"),o+=a);return o}function m(){for(var e,a,i=0,o=\"\";i<arguments.length;)(e=arguments[i++])&&(a=t(e))&&(o&&(o+=\" \"),o+=a);return o}\"function\"==typeof SuppressedError&&SuppressedError;const A=[{name:\"Afghanistan\",regions:[\"asia\"],iso2:\"AF\",dialCode:\"+93\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Albania (Shqipëri)\",regions:[\"europe\"],iso2:\"AL\",dialCode:\"+355\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Algeria\",regions:[\"africa\",\"north-africa\"],iso2:\"DZ\",dialCode:\"+213\",hasAreaCodes:!1,isAreaCode:!1},{name:\"American Samoa\",regions:[\"oceania\"],iso2:\"AS\",dialCode:\"+1684\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Andorra\",regions:[\"europe\"],iso2:\"AD\",dialCode:\"+376\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Angola\",regions:[\"africa\"],iso2:\"AO\",dialCode:\"+244\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Anguilla\",regions:[\"america\",\"carribean\"],iso2:\"AI\",dialCode:\"+1264\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Antigua and Barbuda\",regions:[\"america\",\"carribean\"],iso2:\"AG\",dialCode:\"+1268\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Argentina\",regions:[\"america\",\"south-america\"],iso2:\"AR\",dialCode:\"+54\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Armenia\",regions:[\"asia\",\"ex-ussr\"],iso2:\"AM\",dialCode:\"+374\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Aruba\",regions:[\"america\",\"carribean\"],iso2:\"AW\",dialCode:\"+297\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Australia\",regions:[\"oceania\"],iso2:\"AU\",dialCode:\"+61\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Austria (Österreich)\",regions:[\"europe\",\"european-union\"],iso2:\"AT\",dialCode:\"+43\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Azerbaijan (Azərbaycan)\",regions:[\"asia\",\"ex-ussr\"],iso2:\"AZ\",dialCode:\"+994\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Bahamas\",regions:[\"america\",\"carribean\"],iso2:\"BS\",dialCode:\"+1242\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Bahrain\",regions:[\"middle-east\"],iso2:\"BH\",dialCode:\"+973\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Bangladesh (বাংলাদেশ)\",regions:[\"asia\"],iso2:\"BD\",dialCode:\"+880\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Barbados\",regions:[\"america\",\"carribean\"],iso2:\"BB\",dialCode:\"+1246\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Belarus\",regions:[\"europe\",\"ex-ussr\"],iso2:\"BY\",dialCode:\"+375\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Belgium (België)\",regions:[\"europe\",\"european-union\"],iso2:\"BE\",dialCode:\"+32\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Belize\",regions:[\"america\",\"central-america\"],iso2:\"BZ\",dialCode:\"+501\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Benin (Bénin)\",regions:[\"africa\"],iso2:\"BJ\",dialCode:\"+229\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Bermuda\",regions:[\"america\",\"north-america\"],iso2:\"BM\",dialCode:\"+1441\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Bhutan (འབྲུག)\",regions:[\"asia\"],iso2:\"BT\",dialCode:\"+975\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Bolivia\",regions:[\"america\",\"south-america\"],iso2:\"BO\",dialCode:\"+591\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Bosnia and Herzegovina\",regions:[\"europe\"],iso2:\"BA\",dialCode:\"+387\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Botswana\",regions:[\"africa\"],iso2:\"BW\",dialCode:\"+267\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Brazil (Brasil)\",regions:[\"america\",\"south-america\"],iso2:\"BR\",dialCode:\"+55\",hasAreaCodes:!1,isAreaCode:!1},{name:\"British Indian Ocean Territory\",regions:[\"asia\"],iso2:\"IO\",dialCode:\"+246\",hasAreaCodes:!1,isAreaCode:!1},{name:\"British Virgin Islands\",regions:[\"america\",\"carribean\"],iso2:\"VG\",dialCode:\"+1284\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Brunei\",regions:[\"asia\"],iso2:\"BN\",dialCode:\"+673\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Bulgaria\",regions:[\"europe\",\"european-union\"],iso2:\"BG\",dialCode:\"+359\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Burkina Faso\",regions:[\"africa\"],iso2:\"BF\",dialCode:\"+226\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Burundi (Uburundi)\",regions:[\"africa\"],iso2:\"BI\",dialCode:\"+257\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Cambodia (កម្ពុជា)\",regions:[\"asia\"],iso2:\"KH\",dialCode:\"+855\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Cameroon (Cameroun)\",regions:[\"africa\"],iso2:\"CM\",dialCode:\"+237\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1\",hasAreaCodes:!0,isAreaCode:!1},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1204\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1236\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1249\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1250\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1289\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1306\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1343\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1365\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1387\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1403\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1416\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1418\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1431\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1437\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1438\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1450\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1506\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1514\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1519\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1548\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1579\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1581\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1587\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1604\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1613\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1639\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1647\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1672\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1705\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1709\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1742\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1778\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1780\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1782\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1807\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1819\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1825\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1867\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1873\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1902\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Canada\",regions:[\"america\",\"north-america\"],iso2:\"CA\",dialCode:\"+1905\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Cape Verde (Kabu Verdi)\",regions:[\"africa\"],iso2:\"CV\",dialCode:\"+238\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Caribbean Netherlands\",regions:[\"america\",\"carribean\"],iso2:\"BQ\",dialCode:\"+599\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Cayman Islands\",regions:[\"america\",\"carribean\"],iso2:\"KY\",dialCode:\"+1345\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Central African Republic (République centrafricaine)\",regions:[\"africa\"],iso2:\"CF\",dialCode:\"+236\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Chad (Tchad)\",regions:[\"africa\"],iso2:\"TD\",dialCode:\"+235\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Chile\",regions:[\"america\",\"south-america\"],iso2:\"CL\",dialCode:\"+56\",hasAreaCodes:!1,isAreaCode:!1},{name:\"China (中国)\",regions:[\"asia\"],iso2:\"CN\",dialCode:\"+86\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Colombia\",regions:[\"america\",\"south-america\"],iso2:\"CO\",dialCode:\"+57\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Comoros\",regions:[\"africa\"],iso2:\"KM\",dialCode:\"+269\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)\",regions:[\"africa\"],iso2:\"CD\",dialCode:\"+243\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Congo (Republic) (Congo-Brazzaville)\",regions:[\"africa\"],iso2:\"CG\",dialCode:\"+242\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Cook Islands\",regions:[\"oceania\"],iso2:\"CK\",dialCode:\"+682\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Costa Rica\",regions:[\"america\",\"central-america\"],iso2:\"CR\",dialCode:\"+506\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Côte d Ivoire\",regions:[\"africa\"],iso2:\"CI\",dialCode:\"+225\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Croatia (Hrvatska)\",regions:[\"europe\",\"european-union\"],iso2:\"HR\",dialCode:\"+385\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Cuba\",regions:[\"america\",\"carribean\"],iso2:\"CU\",dialCode:\"+53\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Curaçao\",regions:[\"america\",\"carribean\"],iso2:\"CW\",dialCode:\"+599\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Cyprus\",regions:[\"europe\",\"european-union\"],iso2:\"CY\",dialCode:\"+357\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Czech Republic (Česká republika)\",regions:[\"europe\",\"european-union\"],iso2:\"CZ\",dialCode:\"+420\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Denmark (Danmark)\",regions:[\"europe\",\"european-union\"],iso2:\"DK\",dialCode:\"+45\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Djibouti\",regions:[\"africa\"],iso2:\"DJ\",dialCode:\"+253\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Dominica\",regions:[\"america\",\"carribean\"],iso2:\"DM\",dialCode:\"+1767\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Dominican Republic (República Dominicana)\",regions:[\"america\",\"carribean\"],iso2:\"DO\",dialCode:\"+1\",hasAreaCodes:!0,isAreaCode:!1},{name:\"Dominican Republic (República Dominicana)\",regions:[\"america\",\"carribean\"],iso2:\"DO\",dialCode:\"+1809\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Dominican Republic (República Dominicana)\",regions:[\"america\",\"carribean\"],iso2:\"SO\",dialCode:\"+1829\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Dominican Republic (República Dominicana)\",regions:[\"america\",\"carribean\"],iso2:\"DO\",dialCode:\"+1849\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Ecuador\",regions:[\"america\",\"south-america\"],iso2:\"EC\",dialCode:\"+593\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Egypt\",regions:[\"africa\",\"north-africa\"],iso2:\"EG\",dialCode:\"+20\",hasAreaCodes:!1,isAreaCode:!1},{name:\"El Salvador\",regions:[\"america\",\"central-america\"],iso2:\"SV\",dialCode:\"+503\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Equatorial Guinea (Guinea Ecuatorial)\",regions:[\"africa\"],iso2:\"GQ\",dialCode:\"+240\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Eritrea\",regions:[\"africa\"],iso2:\"ER\",dialCode:\"+291\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Estonia (Eesti)\",regions:[\"europe\",\"european-union\",\"ex-ussr\"],iso2:\"EE\",dialCode:\"+372\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Ethiopia\",regions:[\"africa\"],iso2:\"ET\",dialCode:\"+251\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Falkland Islands (Islas Malvinas)\",regions:[\"america\",\"south-america\"],iso2:\"FK\",dialCode:\"+500\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Faroe Islands (Føroyar)\",regions:[\"europe\"],iso2:\"FO\",dialCode:\"+298\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Fiji\",regions:[\"oceania\"],iso2:\"FJ\",dialCode:\"+679\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Finland (Suomi)\",regions:[\"europe\",\"european-union\"],iso2:\"FI\",dialCode:\"+358\",hasAreaCodes:!1,isAreaCode:!1},{name:\"France\",regions:[\"europe\",\"european-union\"],iso2:\"FR\",dialCode:\"+33\",hasAreaCodes:!1,isAreaCode:!1},{name:\"French Guiana (Guyane française)\",regions:[\"america\",\"south-america\"],iso2:\"GF\",dialCode:\"+594\",hasAreaCodes:!1,isAreaCode:!1},{name:\"French Polynesia (Polynésie française)\",regions:[\"oceania\"],iso2:\"PF\",dialCode:\"+689\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Gabon\",regions:[\"africa\"],iso2:\"GA\",dialCode:\"+241\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Gambia\",regions:[\"africa\"],iso2:\"GM\",dialCode:\"+220\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Georgia (საქართველო)\",regions:[\"asia\",\"ex-ussr\"],iso2:\"GE\",dialCode:\"+995\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Germany (Deutschland)\",regions:[\"europe\",\"european-union\"],iso2:\"DE\",dialCode:\"+49\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Ghana (Gaana)\",regions:[\"africa\"],iso2:\"GH\",dialCode:\"+233\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Gibraltar\",regions:[\"europe\"],iso2:\"GI\",dialCode:\"+350\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Greece\",regions:[\"europe\",\"european-union\"],iso2:\"GR\",dialCode:\"+30\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Greenland (Kalaallit Nunaat)\",regions:[\"america\"],iso2:\"GL\",dialCode:\"+299\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Grenada\",regions:[\"america\",\"carribean\"],iso2:\"GD\",dialCode:\"+1473\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Guadeloupe\",regions:[\"america\",\"carribean\"],iso2:\"GP\",dialCode:\"+590\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Guam\",regions:[\"oceania\"],iso2:\"GU\",dialCode:\"+1671\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Guatemala\",regions:[\"america\",\"central-america\"],iso2:\"GT\",dialCode:\"+502\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Guinea (Guinée)\",regions:[\"africa\"],iso2:\"GN\",dialCode:\"+224\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Guinea-Bissau (Guiné Bissau)\",regions:[\"africa\"],iso2:\"GW\",dialCode:\"+245\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Guyana\",regions:[\"america\",\"south-america\"],iso2:\"GY\",dialCode:\"+592\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Haiti\",regions:[\"america\",\"carribean\"],iso2:\"HT\",dialCode:\"+509\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Honduras\",regions:[\"america\",\"central-america\"],iso2:\"HN\",dialCode:\"+504\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Hong Kong (香港)\",regions:[\"asia\"],iso2:\"HK\",dialCode:\"+852\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Hungary (Magyarország)\",regions:[\"europe\",\"european-union\"],iso2:\"HU\",dialCode:\"+36\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Iceland (Ísland)\",regions:[\"europe\"],iso2:\"IS\",dialCode:\"+354\",hasAreaCodes:!1,isAreaCode:!1},{name:\"India (भारत)\",regions:[\"asia\"],iso2:\"IN\",dialCode:\"+91\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Indonesia\",regions:[\"asia\"],iso2:\"ID\",dialCode:\"+62\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Iran\",regions:[\"middle-east\"],iso2:\"IR\",dialCode:\"+98\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Iraq\",regions:[\"middle-east\"],iso2:\"IQ\",dialCode:\"+964\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Ireland\",regions:[\"europe\",\"european-union\"],iso2:\"IE\",dialCode:\"+353\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Israel\",regions:[\"middle-east\"],iso2:\"IL\",dialCode:\"+972\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Italy (Italia)\",regions:[\"europe\",\"european-union\"],iso2:\"IT\",dialCode:\"+39\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Jamaica\",regions:[\"america\",\"carribean\"],iso2:\"JM\",dialCode:\"+1876\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Japan (日本)\",regions:[\"asia\"],iso2:\"JP\",dialCode:\"+81\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Jordan\",regions:[\"middle-east\"],iso2:\"JO\",dialCode:\"+962\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Russia\",regions:[\"europe\",\"asia\",\"ex-ussr\"],iso2:\"RU\",dialCode:\"+7\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+7\",hasAreaCodes:!0,isAreaCode:!1},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+7313\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+7327\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+77172\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+7312\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+773622\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+7321\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+7324\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+7336\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+7318\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+7315\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+7325\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+7311\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+7326\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Kazakhstan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KZ\",dialCode:\"+7310\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Kenya\",regions:[\"africa\"],iso2:\"KE\",dialCode:\"+254\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Kiribati\",regions:[\"oceania\"],iso2:\"KI\",dialCode:\"+686\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Kuwait\",regions:[\"middle-east\"],iso2:\"KW\",dialCode:\"+965\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Kyrgyzstan (Кыргызстан)\",regions:[\"asia\",\"ex-ussr\"],iso2:\"KG\",dialCode:\"+996\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Laos (ລາວ)\",regions:[\"asia\"],iso2:\"LA\",dialCode:\"+856\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Latvia (Latvija)\",regions:[\"europe\",\"european-union\",\"ex-ussr\"],iso2:\"LV\",dialCode:\"+371\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Lebanon\",regions:[\"middle-east\"],iso2:\"LB\",dialCode:\"+961\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Lesotho\",regions:[\"africa\"],iso2:\"LS\",dialCode:\"+266\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Liberia\",regions:[\"africa\"],iso2:\"LR\",dialCode:\"+231\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Libya\",regions:[\"africa\",\"north-africa\"],iso2:\"LY\",dialCode:\"+218\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Liechtenstein\",regions:[\"europe\"],iso2:\"LI\",dialCode:\"+423\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Lithuania (Lietuva)\",regions:[\"europe\",\"european-union\",\"ex-ussr\"],iso2:\"LT\",dialCode:\"+370\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Luxembourg\",regions:[\"europe\",\"european-union\"],iso2:\"LU\",dialCode:\"+352\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Macau (澳門)\",regions:[\"asia\"],iso2:\"MO\",dialCode:\"+853\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Macedonia (FYROM)\",regions:[\"europe\"],iso2:\"MK\",dialCode:\"+389\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Madagascar (Madagasikara)\",regions:[\"africa\"],iso2:\"MG\",dialCode:\"+261\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Malawi\",regions:[\"africa\"],iso2:\"MW\",dialCode:\"+265\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Malaysia\",regions:[\"asia\"],iso2:\"MY\",dialCode:\"+60\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Maldives\",regions:[\"asia\"],iso2:\"MV\",dialCode:\"+960\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Mali\",regions:[\"africa\"],iso2:\"ML\",dialCode:\"+223\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Malta\",regions:[\"europe\",\"european-union\"],iso2:\"MT\",dialCode:\"+356\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Marshall Islands\",regions:[\"oceania\"],iso2:\"MH\",dialCode:\"+692\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Martinique\",regions:[\"america\",\"carribean\"],iso2:\"MQ\",dialCode:\"+596\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Mauritania\",regions:[\"africa\"],iso2:\"MR\",dialCode:\"+222\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Mauritius (Moris)\",regions:[\"africa\"],iso2:\"MU\",dialCode:\"+230\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Mexico (México)\",regions:[\"america\",\"central-america\"],iso2:\"MX\",dialCode:\"+52\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Micronesia\",regions:[\"oceania\"],iso2:\"FM\",dialCode:\"+691\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Moldova (Republica Moldova)\",regions:[\"europe\"],iso2:\"MD\",dialCode:\"+373\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Monaco\",regions:[\"europe\"],iso2:\"MC\",dialCode:\"+377\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Mongolia (Монгол)\",regions:[\"asia\"],iso2:\"MN\",dialCode:\"+976\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Montenegro (Crna Gora)\",regions:[\"europe\"],iso2:\"ME\",dialCode:\"+382\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Montserrat\",regions:[\"america\",\"carribean\"],iso2:\"MS\",dialCode:\"+1664\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Morocco\",regions:[\"africa\",\"north-africa\"],iso2:\"MA\",dialCode:\"+212\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Mozambique (Moçambique)\",regions:[\"africa\"],iso2:\"MZ\",dialCode:\"+258\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Myanmar (Burma) (မြန်မာ)\",regions:[\"asia\"],iso2:\"MM\",dialCode:\"+95\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Namibia (Namibië)\",regions:[\"africa\"],iso2:\"NA\",dialCode:\"+264\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Nauru\",regions:[\"africa\"],iso2:\"NR\",dialCode:\"+674\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Nepal (नेपाल)\",regions:[\"asia\"],iso2:\"NP\",dialCode:\"+977\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Netherlands (Nederland)\",regions:[\"europe\",\"european-union\"],iso2:\"NL\",dialCode:\"+31\",hasAreaCodes:!1,isAreaCode:!1},{name:\"New Caledonia (Nouvelle-Calédonie)\",regions:[\"oceania\"],iso2:\"NC\",dialCode:\"+687\",hasAreaCodes:!1,isAreaCode:!1},{name:\"New Zealand\",regions:[\"oceania\"],iso2:\"NZ\",dialCode:\"+64\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Nicaragua\",regions:[\"america\",\"central-america\"],iso2:\"NI\",dialCode:\"+505\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Niger (Nijar)\",regions:[\"africa\"],iso2:\"NE\",dialCode:\"+227\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Nigeria\",regions:[\"africa\"],iso2:\"NG\",dialCode:\"+234\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Niue\",regions:[\"asia\"],iso2:\"NU\",dialCode:\"+683\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Norfolk Island\",regions:[\"oceania\"],iso2:\"NF\",dialCode:\"+672\",hasAreaCodes:!1,isAreaCode:!1},{name:\"North Korea (조선 민주주의 인민 공화국)\",regions:[\"asia\"],iso2:\"KP\",dialCode:\"+850\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Northern Mariana Islands\",regions:[\"oceania\"],iso2:\"MP\",dialCode:\"+1670\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Norway (Norge)\",regions:[\"europe\"],iso2:\"NO\",dialCode:\"+47\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Oman\",regions:[\"middle-east\"],iso2:\"OM\",dialCode:\"+968\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Pakistan\",regions:[\"asia\"],iso2:\"PK\",dialCode:\"+92\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Palau\",regions:[\"oceania\"],iso2:\"PW\",dialCode:\"+680\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Palestine\",regions:[\"middle-east\"],iso2:\"PS\",dialCode:\"+970\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Panama (Panamá)\",regions:[\"america\",\"central-america\"],iso2:\"PA\",dialCode:\"+507\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Papua New Guinea\",regions:[\"oceania\"],iso2:\"PG\",dialCode:\"+675\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Paraguay\",regions:[\"america\",\"south-america\"],iso2:\"PY\",dialCode:\"+595\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Peru (Perú)\",regions:[\"america\",\"south-america\"],iso2:\"PE\",dialCode:\"+51\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Philippines\",regions:[\"asia\"],iso2:\"PH\",dialCode:\"+63\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Poland (Polska)\",regions:[\"europe\",\"european-union\"],iso2:\"PL\",dialCode:\"+48\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Portugal\",regions:[\"europe\",\"european-union\"],iso2:\"PT\",dialCode:\"+351\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Puerto Rico\",regions:[\"america\",\"carribean\"],iso2:\"PR\",dialCode:\"+1\",hasAreaCodes:!0,isAreaCode:!1},{name:\"Puerto Rico\",regions:[\"america\",\"carribean\"],iso2:\"PR\",dialCode:\"+1787\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Puerto Rico\",regions:[\"america\",\"carribean\"],iso2:\"PR\",dialCode:\"+1939\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Qatar\",regions:[\"middle-east\"],iso2:\"QA\",dialCode:\"+974\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Réunion (La Réunion)\",regions:[\"africa\"],iso2:\"RE\",dialCode:\"+262\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Romania (România)\",regions:[\"europe\",\"european-union\"],iso2:\"RO\",dialCode:\"+40\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Rwanda\",regions:[\"africa\"],iso2:\"RW\",dialCode:\"+250\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Saint Barthélemy (Saint-Barthélemy)\",regions:[\"america\",\"carribean\"],iso2:\"BL\",dialCode:\"+590\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Saint Helena\",regions:[\"africa\"],iso2:\"SH\",dialCode:\"+290\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Saint Kitts and Nevis\",regions:[\"america\",\"carribean\"],iso2:\"KN\",dialCode:\"+1869\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Saint Lucia\",regions:[\"america\",\"carribean\"],iso2:\"LC\",dialCode:\"+1758\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Saint Martin (Saint-Martin (partie française))\",regions:[\"america\",\"carribean\"],iso2:\"MF\",dialCode:\"+590\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\",regions:[\"america\",\"north-america\"],iso2:\"PM\",dialCode:\"+508\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Saint Vincent and the Grenadines\",regions:[\"america\",\"carribean\"],iso2:\"VC\",dialCode:\"+1784\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Samoa\",regions:[\"oceania\"],iso2:\"WS\",dialCode:\"+685\",hasAreaCodes:!1,isAreaCode:!1},{name:\"San Marino\",regions:[\"europe\"],iso2:\"SM\",dialCode:\"+378\",hasAreaCodes:!1,isAreaCode:!1},{name:\"São Tomé and Príncipe (São Tomé e Príncipe)\",regions:[\"africa\"],iso2:\"ST\",dialCode:\"+239\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Saudi Arabia\",regions:[\"middle-east\"],iso2:\"SA\",dialCode:\"+966\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Senegal (Sénégal)\",regions:[\"africa\"],iso2:\"SN\",dialCode:\"+221\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Serbia\",regions:[\"europe\"],iso2:\"RS\",dialCode:\"+381\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Seychelles\",regions:[\"africa\"],iso2:\"SC\",dialCode:\"+248\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Sierra Leone\",regions:[\"africa\"],iso2:\"SL\",dialCode:\"+232\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Singapore\",regions:[\"asia\"],iso2:\"SG\",dialCode:\"+65\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Sint Maarten\",regions:[\"america\",\"carribean\"],iso2:\"SX\",dialCode:\"+1721\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Slovakia (Slovensko)\",regions:[\"europe\",\"european-union\"],iso2:\"SK\",dialCode:\"+421\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Slovenia (Slovenija)\",regions:[\"europe\",\"european-union\"],iso2:\"SI\",dialCode:\"+386\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Solomon Islands\",regions:[\"oceania\"],iso2:\"SB\",dialCode:\"+677\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Somalia (Soomaaliya)\",regions:[\"africa\"],iso2:\"SO\",dialCode:\"+252\",hasAreaCodes:!1,isAreaCode:!1},{name:\"South Africa\",regions:[\"africa\"],iso2:\"ZA\",dialCode:\"+27\",hasAreaCodes:!1,isAreaCode:!1},{name:\"South Korea (대한민국)\",regions:[\"asia\"],iso2:\"KR\",dialCode:\"+82\",hasAreaCodes:!1,isAreaCode:!1},{name:\"South Sudan\",regions:[\"africa\",\"north-africa\"],iso2:\"SS\",dialCode:\"+211\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Spain (España)\",regions:[\"europe\",\"european-union\"],iso2:\"ES\",dialCode:\"+34\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Sri Lanka (ශ්‍රී ලංකාව)\",regions:[\"asia\"],iso2:\"LK\",dialCode:\"+94\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Sudan\",regions:[\"africa\"],iso2:\"SD\",dialCode:\"+249\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Suriname\",regions:[\"america\",\"south-america\"],iso2:\"SR\",dialCode:\"+597\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Swaziland\",regions:[\"africa\"],iso2:\"SZ\",dialCode:\"+268\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Sweden (Sverige)\",regions:[\"europe\",\"european-union\"],iso2:\"SE\",dialCode:\"+46\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Switzerland (Schweiz)\",regions:[\"europe\"],iso2:\"CH\",dialCode:\"+41\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Syria\",regions:[\"middle-east\"],iso2:\"SY\",dialCode:\"+963\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Taiwan (台灣)\",regions:[\"asia\"],iso2:\"TW\",dialCode:\"+886\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Tajikistan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"TJ\",dialCode:\"+992\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Tanzania\",regions:[\"africa\"],iso2:\"TZ\",dialCode:\"+255\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Thailand (ไทย)\",regions:[\"asia\"],iso2:\"TH\",dialCode:\"+66\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Timor-Leste\",regions:[\"asia\"],iso2:\"TL\",dialCode:\"+670\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Togo\",regions:[\"africa\"],iso2:\"TG\",dialCode:\"+228\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Tokelau\",regions:[\"oceania\"],iso2:\"TK\",dialCode:\"+690\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Tonga\",regions:[\"oceania\"],iso2:\"TO\",dialCode:\"+676\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Trinidad and Tobago\",regions:[\"america\",\"carribean\"],iso2:\"TT\",dialCode:\"+1868\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Tunisia\",regions:[\"africa\",\"north-africa\"],iso2:\"TN\",dialCode:\"+216\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Turkey (Türkiye)\",regions:[\"europe\"],iso2:\"TR\",dialCode:\"+90\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Turkmenistan\",regions:[\"asia\",\"ex-ussr\"],iso2:\"TM\",dialCode:\"+993\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Turks and Caicos Islands\",regions:[\"america\",\"carribean\"],iso2:\"TC\",dialCode:\"+1649\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Tuvalu\",regions:[\"asia\"],iso2:\"TV\",dialCode:\"+688\",hasAreaCodes:!1,isAreaCode:!1},{name:\"U.S. Virgin Islands\",regions:[\"america\",\"carribean\"],iso2:\"VI\",dialCode:\"+1340\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Uganda\",regions:[\"africa\"],iso2:\"UG\",dialCode:\"+256\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Ukraine\",regions:[\"europe\",\"ex-ussr\"],iso2:\"UA\",dialCode:\"+380\",hasAreaCodes:!1,isAreaCode:!1},{name:\"United Arab Emirates\",regions:[\"middle-east\"],iso2:\"AE\",dialCode:\"+971\",hasAreaCodes:!1,isAreaCode:!1},{name:\"United Kingdom\",regions:[\"europe\",\"european-union\"],iso2:\"GB\",dialCode:\"+44\",hasAreaCodes:!1,isAreaCode:!1},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1\",hasAreaCodes:!0,isAreaCode:!1},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1907\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1205\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1251\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1256\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1334\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1479\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1501\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1870\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1480\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1520\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1602\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1623\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1928\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1209\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1213\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1310\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1323\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1408\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1415\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1510\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1530\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1559\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1562\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1619\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1626\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1650\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1661\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1707\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1714\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1760\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1805\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1818\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1831\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1858\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1909\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1916\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1925\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1949\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1951\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1303\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1719\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1970\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1203\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1860\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1202\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1302\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1239\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1305\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1321\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1352\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1386\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1407\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1561\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1727\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1772\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1813\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1850\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1863\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1904\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1941\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1954\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1229\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1404\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1478\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1706\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1770\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1912\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1808\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1319\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1515\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1563\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1641\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1712\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1208\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1217\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1309\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1312\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1618\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1630\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1708\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1773\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1815\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1847\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1219\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1260\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1317\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1574\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1765\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1812\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1316\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1620\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1785\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1913\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1270\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1502\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1606\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1859\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1225\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1318\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1337\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1504\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1985\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1413\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1508\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1617\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1781\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1978\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1301\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1410\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1207\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1231\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1248\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1269\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1313\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1517\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1586\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1616\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1734\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1810\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1906\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1989\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1218\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1320\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1507\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1612\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1651\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1763\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1952\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1314\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1417\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1573\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1636\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1660\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1816\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1228\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1601\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1662\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1406\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1252\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1336\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1704\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1828\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1910\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1919\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1701\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1308\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1402\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1603\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1201\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1609\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1732\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1856\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1908\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1973\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1505\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1575\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1702\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1775\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1212\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1315\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1516\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1518\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1585\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1607\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1631\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1716\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1718\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1845\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1914\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1216\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1330\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1419\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1440\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1513\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1614\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1740\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1937\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1405\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1580\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1918\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1503\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1541\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1215\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1412\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1570\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1610\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1717\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1724\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1814\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1401\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1803\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1843\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1864\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1605\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1423\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1615\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1731\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1865\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1901\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1931\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1210\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1214\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1254\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1281\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1325\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1361\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1409\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1432\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1512\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1713\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1806\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1817\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1830\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1903\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1915\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1936\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1940\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1956\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1972\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1979\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1435\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1801\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1276\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1434\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1540\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1703\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1757\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1804\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1802\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1206\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1253\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1360\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1425\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1509\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1262\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1414\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1608\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1715\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1920\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1304\",hasAreaCodes:!0,isAreaCode:!0},{name:\"United States\",regions:[\"america\",\"north-america\"],iso2:\"US\",dialCode:\"+1307\",hasAreaCodes:!0,isAreaCode:!0},{name:\"Uruguay\",regions:[\"america\",\"south-america\"],iso2:\"UY\",dialCode:\"+598\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Uzbekistan (Oʻzbekiston)\",regions:[\"asia\",\"ex-ussr\"],iso2:\"UZ\",dialCode:\"+998\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Vanuatu\",regions:[\"oceania\"],iso2:\"VU\",dialCode:\"+678\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Vatican City (Città del Vaticano)\",regions:[\"europe\"],iso2:\"VA\",dialCode:\"+39\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Venezuela\",regions:[\"america\",\"south-america\"],iso2:\"VE\",dialCode:\"+58\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Vietnam (Việt Nam)\",regions:[\"asia\"],iso2:\"VN\",dialCode:\"+84\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Wallis and Futuna\",regions:[\"oceania\"],iso2:\"WF\",dialCode:\"+681\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Yemen\",regions:[\"middle-east\"],iso2:\"YE\",dialCode:\"+967\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Zambia\",regions:[\"africa\"],iso2:\"ZM\",dialCode:\"+260\",hasAreaCodes:!1,isAreaCode:!1},{name:\"Zimbabwe\",regions:[\"africa\"],iso2:\"ZW\",dialCode:\"+263\",hasAreaCodes:!1,isAreaCode:!1}],c=e=>A.find((a=>a.iso2===e)),h=e=>\"string\"==typeof e?A.filter((a=>a.regions.includes(e))):A.filter((a=>e.map((e=>a.regions.includes(e))).some((e=>e)))),l=(e,a,i)=>{let o=e;\"INTERNATIONAL\"===a&&e.length>0&&(o.startsWith(\"+\")||(o=`+${o}`),o.startsWith(\"+00\")&&(o=o.replace(\"00\",\"\")),o.startsWith(\"00\")&&(o=o.replace(\"00\",\"+\")));const s=d(o,i);try{o=(null==s?void 0:s.format(a))||\"\"}catch(e){o=o.replace(/^\\s+|(?<!\\s)\\s+$/g,\"\")}return o},g=\"undefined\"!=typeof window,S={Android:()=>g&&window.navigator.userAgent.match(/Android/i),BlackBerry:()=>g&&window.navigator.userAgent.match(/BlackBerry/i),iOS:()=>g&&window.navigator.userAgent.match(/iPhone|iPad|iPod/i),Opera:()=>g&&window.navigator.userAgent.match(/Opera Mini/i),Windows:()=>g&&window.navigator.userAgent.match(/IEMobile/i),any:()=>S.Android()||S.BlackBerry()||S.iOS()||S.Opera()||S.Windows()},U={country:void 0,phoneNumber:\"\",showCountries:!1},u=(e,a)=>{switch(a.type){case\"onChange\":return e=Object.assign(Object.assign({},e),a.payload);case\"setShowCountries\":return e.showCountries=a.payload,e;default:return e}},p=({initialValue:e,initialCountry:o,format:s})=>{const r=C(u),[d,t]=a(r,U),m=\"INTERNATIONAL\"===s;i((()=>{let a={country:o,phoneNumber:m&&o?o.dialCode:\"\"};if(e&&\"string\"==typeof e){const i=n(e),o=c(i[0].number.country),r=o?l(e,s,o.iso2):e;a={country:o,phoneNumber:r.length>0?r:e}}t({type:\"onChange\",payload:a})}),[]);return{country:d.country,phoneNumber:d.phoneNumber,showCountries:d.showCountries,onSelect:e=>{const a=c(e);t({type:\"onChange\",payload:{country:a,phoneNumber:(null==a?void 0:a.dialCode)||\"\",showCountries:!1}})},onInputChange:e=>{const a=d.country?l(e,s,d.country.iso2):\"\",i=(e=>{let a=e;return a=e.startsWith(\"+00\")?e.substring(5,3):e.startsWith(\"+\")?e.substring(6,1):e.startsWith(\"00\")?e.substring(5,2):e.substring(5,0),A.find((e=>e.dialCode.startsWith(`+${a.replace(\" \",\"\")}`)))})(a.length>0?a:e);t({type:\"onChange\",payload:{country:m&&i?i:d.country,phoneNumber:a.length>0?a:e}})},setShowCountries:e=>{t({type:\"setShowCountries\",payload:e})},resetState:()=>{t({type:\"onChange\",payload:m?U:{phoneNumber:\"\"}})}}};!function(e,a){void 0===a&&(a={});var i=a.insertAt;if(e&&\"undefined\"!=typeof document){var o=document.head||document.getElementsByTagName(\"head\")[0],s=document.createElement(\"style\");s.type=\"text/css\",\"top\"===i&&o.firstChild?o.insertBefore(s,o.firstChild):o.appendChild(s),s.styleSheet?s.styleSheet.cssText=e:s.appendChild(document.createTextNode(e))}}('.react-phonenr-input{display:flex;max-width:320;position:relative}.react-phonenr-input button,.react-phonenr-input input{appearance:none;border:1px solid #ccc;border-radius:0;box-sizing:border-box;height:1.8rem;outline:none}.react-phonenr-input .flag-wrapper{align-content:center;align-items:center;background-color:#ddd;border:1px solid #ccc;border-right:none;display:flex;justify-content:center;padding-left:5px;padding-right:12px;position:relative;width:20px}.react-phonenr-input .flag-wrapper select{appearance:none;border:none;border-radius:0;height:100%;margin:0;opacity:0;padding:0;position:absolute;width:100%;z-index:10}.react-phonenr-input .flag-wrapper:after{border:4px solid transparent;border-top-color:#000;content:\"\";height:0;pointer-events:none;position:absolute;right:2px;top:55%;transform:translateY(-50%);width:0}.react-phonenr-input input{font-size:inherit;padding:0 5px;width:280}.react-phonenr-input ul{background-color:#fff;border:1px solid #ccc;box-sizing:border-box;list-style:none;margin:0;max-height:290px;overflow-y:auto;padding:0;position:absolute;top:35px;width:100%;z-index:999}.react-phonenr-input ul li{align-content:space-between;align-items:center;display:flex;font-size:1rem;padding:3px .5rem 3px 5px;position:relative}.react-phonenr-input ul li.active-country,.react-phonenr-input ul li:hover{background-color:#ddd;color:currentColor;cursor:pointer}.react-phonenr-input ul li img{margin-right:10px}.react-phonenr-input ul::-webkit-scrollbar{width:3px}.react-phonenr-input ul::-webkit-scrollbar-track{background:#f1f1f1;box-shadow:inset 0 0 5px #ccc}.react-phonenr-input ul::-webkit-scrollbar-thumb{background:#888}.react-phonenr-input ul::-webkit-scrollbar-thumb:hover{background:#555}');const b=a=>{var{className:d,maxLength:n=21,defaultCountry:C,preferredCountries:t,regions:l,format:g=\"INTERNATIONAL\",initialValue:U,withCountryMeta:u=!1,onChange:b,disabled:f,placeholder:q,onFocus:y,onBlur:v}=a,M=function(e,a){var i={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&a.indexOf(o)<0&&(i[o]=e[o]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var s=0;for(o=Object.getOwnPropertySymbols(e);s<o.length;s++)a.indexOf(o[s])<0&&Object.prototype.propertyIsEnumerable.call(e,o[s])&&(i[o[s]]=e[o[s]])}return i}(a,[\"className\",\"maxLength\",\"defaultCountry\",\"preferredCountries\",\"regions\",\"format\",\"initialValue\",\"withCountryMeta\",\"onChange\",\"disabled\",\"placeholder\",\"onFocus\",\"onBlur\"]);const N=((e,a,i)=>e?c(e):a?c(a[0]):i?h(i)[0]:void 0)(C,t,l),x=((e,a)=>e?e.map((e=>c(e))):a?h(a):A)(t,l),w=\"INTERNATIONAL\"===g,B=S.any(),K=o(null),T=o(null),k=o(null),E=o(null),{country:G,phoneNumber:I,showCountries:R,setShowCountries:P,onSelect:L,onInputChange:z,resetState:O}=p({initialValue:U,initialCountry:N,format:g});i((()=>{const e=e=>{K.current&&!K.current.contains(e.target)&&P(!1)};return document.addEventListener(\"mousedown\",e),()=>{document.removeEventListener(\"mousedown\",e)}}),[]),i((()=>{R&&G&&k.current&&E.current&&(k.current.scrollTop=E.current.offsetTop-50);const e=u?{phoneNumber:I,country:G?s(G,[\"hasAreaCodes\",\"isAreaCode\",\"dialCode\",\"regions\"]):null}:I;b(e)}),[G,I,R]);return e.createElement(\"div\",{className:\"react-phonenr-input\",ref:K},w&&e.createElement(\"div\",{onClick:B?void 0:()=>{f||P(!R)},className:\"flag-wrapper\",role:\"none\"},G?e.createElement(r,{countryCode:G.iso2,svg:!0,\"aria-label\":G.name,title:G.iso2,style:{width:\"20px\",height:\"20px\"}}):e.createElement(\"svg\",{width:20,height:20,viewBox:\"0 0 1792 1792\",xmlns:\"http://www.w3.org/2000/svg\",className:\"flag-icon\"},e.createElement(\"path\",{d:\"M896 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zm274 521q-2 1-9.5 9.5t-13.5 9.5q2 0 4.5-5t5-11 3.5-7q6-7 22-15 14-6 52-12 34-8 51 11-2-2 9.5-13t14.5-12q3-2 15-4.5t15-7.5l2-22q-12 1-17.5-7t-6.5-21q0 2-6 8 0-7-4.5-8t-11.5 1-9 1q-10-3-15-7.5t-8-16.5-4-15q-2-5-9.5-11t-9.5-10q-1-2-2.5-5.5t-3-6.5-4-5.5-5.5-2.5-7 5-7.5 10-4.5 5q-3-2-6-1.5t-4.5 1-4.5 3-5 3.5q-3 2-8.5 3t-8.5 2q15-5-1-11-10-4-16-3 9-4 7.5-12t-8.5-14h5q-1-4-8.5-8.5t-17.5-8.5-13-6q-8-5-34-9.5t-33-.5q-5 6-4.5 10.5t4 14 3.5 12.5q1 6-5.5 13t-6.5 12q0 7 14 15.5t10 21.5q-3 8-16 16t-16 12q-5 8-1.5 18.5t10.5 16.5q2 2 1.5 4t-3.5 4.5-5.5 4-6.5 3.5l-3 2q-11 5-20.5-6t-13.5-26q-7-25-16-30-23-8-29 1-5-13-41-26-25-9-58-4 6-1 0-15-7-15-19-12 3-6 4-17.5t1-13.5q3-13 12-23 1-1 7-8.5t9.5-13.5.5-6q35 4 50-11 5-5 11.5-17t10.5-17q9-6 14-5.5t14.5 5.5 14.5 5q14 1 15.5-11t-7.5-20q12 1 3-17-4-7-8-9-12-4-27 5-8 4 2 8-1-1-9.5 10.5t-16.5 17.5-16-5q-1-1-5.5-13.5t-9.5-13.5q-8 0-16 15 3-8-11-15t-24-8q19-12-8-27-7-4-20.5-5t-19.5 4q-5 7-5.5 11.5t5 8 10.5 5.5 11.5 4 8.5 3q14 10 8 14-2 1-8.5 3.5t-11.5 4.5-6 4q-3 4 0 14t-2 14q-5-5-9-17.5t-7-16.5q7 9-25 6l-10-1q-4 0-16 2t-20.5 1-13.5-8q-4-8 0-20 1-4 4-2-4-3-11-9.5t-10-8.5q-46 15-94 41 6 1 12-1 5-2 13-6.5t10-5.5q34-14 42-7l5-5q14 16 20 25-7-4-30-1-20 6-22 12 7 12 5 18-4-3-11.5-10t-14.5-11-15-5q-16 0-22 1-146 80-235 222 7 7 12 8 4 1 5 9t2.5 11 11.5-3q9 8 3 19 1-1 44 27 19 17 21 21 3 11-10 18-1-2-9-9t-9-4q-3 5 .5 18.5t10.5 12.5q-7 0-9.5 16t-2.5 35.5-1 23.5l2 1q-3 12 5.5 34.5t21.5 19.5q-13 3 20 43 6 8 8 9 3 2 12 7.5t15 10 10 10.5q4 5 10 22.5t14 23.5q-2 6 9.5 20t10.5 23q-1 0-2.5 1t-2.5 1q3 7 15.5 14t15.5 13q1 3 2 10t3 11 8 2q2-20-24-62-15-25-17-29-3-5-5.5-15.5t-4.5-14.5q2 0 6 1.5t8.5 3.5 7.5 4 2 3q-3 7 2 17.5t12 18.5 17 19 12 13q6 6 14 19.5t0 13.5q9 0 20 10.5t17 19.5q5 8 8 26t5 24q2 7 8.5 13.5t12.5 9.5l16 8 13 7q5 2 18.5 10.5t21.5 11.5q10 4 16 4t14.5-2.5 13.5-3.5q15-2 29 15t21 21q36 19 55 11-2 1 .5 7.5t8 15.5 9 14.5 5.5 8.5q5 6 18 15t18 15q6-4 7-9-3 8 7 20t18 10q14-3 14-32-31 15-49-18 0-1-2.5-5.5t-4-8.5-2.5-8.5 0-7.5 5-3q9 0 10-3.5t-2-12.5-4-13q-1-8-11-20t-12-15q-5 9-16 8t-16-9q0 1-1.5 5.5t-1.5 6.5q-13 0-15-1 1-3 2.5-17.5t3.5-22.5q1-4 5.5-12t7.5-14.5 4-12.5-4.5-9.5-17.5-2.5q-19 1-26 20-1 3-3 10.5t-5 11.5-9 7q-7 3-24 2t-24-5q-13-8-22.5-29t-9.5-37q0-10 2.5-26.5t3-25-5.5-24.5q3-2 9-9.5t10-10.5q2-1 4.5-1.5t4.5 0 4-1.5 3-6q-1-1-4-3-3-3-4-3 7 3 28.5-1.5t27.5 1.5q15 11 22-2 0-1-2.5-9.5t-.5-13.5q5 27 29 9 3 3 15.5 5t17.5 5q3 2 7 5.5t5.5 4.5 5-.5 8.5-6.5q10 14 12 24 11 40 19 44 7 3 11 2t4.5-9.5 0-14-1.5-12.5l-1-8v-18l-1-8q-15-3-18.5-12t1.5-18.5 15-18.5q1-1 8-3.5t15.5-6.5 12.5-8q21-19 15-35 7 0 11-9-1 0-5-3t-7.5-5-4.5-2q9-5 2-16 5-3 7.5-11t7.5-10q9 12 21 2 8-8 1-16 5-7 20.5-10.5t18.5-9.5q7 2 8-2t1-12 3-12q4-5 15-9t13-5l17-11q3-4 0-4 18 2 31-11 10-11-6-20 3-6-3-9.5t-15-5.5q3-1 11.5-.5t10.5-1.5q15-10-7-16-17-5-43 12zm-163 877q206-36 351-189-3-3-12.5-4.5t-12.5-3.5q-18-7-24-8 1-7-2.5-13t-8-9-12.5-8-11-7q-2-2-7-6t-7-5.5-7.5-4.5-8.5-2-10 1l-3 1q-3 1-5.5 2.5t-5.5 3-4 3 0 2.5q-21-17-36-22-5-1-11-5.5t-10.5-7-10-1.5-11.5 7q-5 5-6 15t-2 13q-7-5 0-17.5t2-18.5q-3-6-10.5-4.5t-12 4.5-11.5 8.5-9 6.5-8.5 5.5-8.5 7.5q-3 4-6 12t-5 11q-2-4-11.5-6.5t-9.5-5.5q2 10 4 35t5 38q7 31-12 48-27 25-29 40-4 22 12 26 0 7-8 20.5t-7 21.5q0 6 2 16z\"})),B&&e.createElement(\"select\",{className:d,onChange:e=>{var a;const{value:i}=e.target;L(i),null===(a=T.current)||void 0===a||a.focus()},disabled:f},x.map((a=>(null==a?void 0:a.isAreaCode)?null:e.createElement(\"option\",{key:null==a?void 0:a.iso2,value:null==a?void 0:a.iso2},null==a?void 0:a.name))))),e.createElement(\"input\",Object.assign({},M,{className:d,type:\"tel\",value:I,onChange:e=>{const{value:a}=e.target;a.length||O(),/^[\\d ()+-]+$/.test(a)&&z(a)},placeholder:q,disabled:f,ref:T,maxLength:n,onFocus:y,onBlur:v})),R&&w&&!B&&e.createElement(\"ul\",{className:\"country-list\",ref:k},x.map((a=>{return(null==a?void 0:a.isAreaCode)?null:e.createElement(\"li\",{key:null==a?void 0:a.iso2,className:m(\"country-list-item\",{\"active-country\":(null==a?void 0:a.iso2)===(null==G?void 0:G.iso2)}),ref:(null==a?void 0:a.iso2)===(null==G?void 0:G.iso2)?E:null,onClick:(i=null==a?void 0:a.iso2,()=>{var e;L(i),null===(e=T.current)||void 0===e||e.focus()}),role:\"presentation\"},e.createElement(r,{countryCode:(null==a?void 0:a.iso2)||\"\",svg:!0,\"aria-label\":null==a?void 0:a.name,title:null==a?void 0:a.iso2,style:{width:\"20px\",height:\"20px\"}}),` (${null==a?void 0:a.dialCode}) ${null==a?void 0:a.name}`);var i}))))};export{b as PhoneInput};\n","import React, { FC, ReactNode } from 'react';\nimport { useFormikContext } from 'formik';\nimport { PhoneInput as PhoneNrInput, IPhoneInputProps, PhoneNumber } from 'react-phonenr-input';\n\nimport WithLabel from '../WithLabel';\n\nexport interface IFormikUiPhoneInputProps extends Omit<IPhoneInputProps, 'onChange'> {\n  /** Sets the Name of the Input Field */\n  name: string;\n  /** Sets the main Label for the Input Field */\n  label?: ReactNode;\n  /** Sets the field as requierd, if label is passed, an * is added to the end of the main label. Validation will only work if you pass the required() method in the yup validation schema */\n  required?: boolean;\n}\n\nexport const PhoneInput: FC<IFormikUiPhoneInputProps> = ({\n  name,\n  placeholder,\n  disabled,\n  required,\n  format = 'INTERNATIONAL',\n  defaultCountry,\n  preferredCountries,\n  regions,\n  className,\n  withCountryMeta,\n  ...rest\n}) => {\n  const { setFieldValue } = useFormikContext();\n\n  const handleChange = async (data: PhoneNumber): Promise<void> => {\n    await setFieldValue(name, data);\n  };\n\n  return (\n    <PhoneNrInput\n      {...rest}\n      onChange={handleChange}\n      className={className}\n      placeholder={placeholder}\n      disabled={disabled}\n      format={format}\n      defaultCountry={defaultCountry}\n      preferredCountries={preferredCountries}\n      regions={regions}\n      withCountryMeta={withCountryMeta}\n      required={required}\n    />\n  );\n};\n\nexport default WithLabel('phoneInput')(PhoneInput);\n"],"names":["_extends","target","i","source","key","_objectWithoutPropertiesLoose","excluded","sourceKeys","_excluded","DEFAULT_CDN_URL","DEFAULT_CDN_SUFFIX","OFFSET","ReactCountryFlag","_ref","_ref$cdnSuffix","cdnSuffix","_ref$cdnUrl","cdnUrl","countryCode","style","_ref$svg","svg","props","flagUrl","createElement","emoji","_char","metadata","withMetadataArgument","func","_arguments","args","_typeof","obj","_defineProperties","descriptor","_createClass","Constructor","protoProps","staticProps","_classCallCheck","instance","_inherits","subClass","superClass","_setPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","_getPrototypeOf","result","NewTarget","_possibleConstructorReturn","self","call","_assertThisInitialized","_wrapNativeSuper","Class","_cache","_isNativeFunction","Wrapper","_construct","Parent","a","fn","o","p","ParseError","_Error","_super","code","_this","MIN_LENGTH_FOR_NSN","MAX_LENGTH_FOR_NSN","MAX_LENGTH_COUNTRY_CODE","VALID_DIGITS","DASHES","SLASHES","DOTS","WHITESPACE","BRACKETS","TILDES","VALID_PUNCTUATION","PLUS_CHARS","compare","b","pa","pb","na","nb","V3","V4","DEFAULT_EXT_PREFIX","CALLING_CODE_REG_EXP","Metadata","validateMetadata","setVersion","_","country","callingCode","countryCodes","NumberingPlan","_type","globalMetadataObject","formats","Format","_type2","getType","Type","format","FIRST_GROUP_ONLY_PREFIX_PATTERN","type","types","is_object","type_of","getCountryCallingCode","isSupportedCountry","version","RFC3966_EXTN_PREFIX","getExtensionDigitsPattern","maxLength","createExtensionPattern","purpose","extLimitAfterExplicitLabel","extLimitAfterLikelyLabel","extLimitAfterAmbiguousChar","extLimitWhenNotSure","possibleSeparatorsBetweenNumberAndExtLabel","possibleCharsAfterExtLabel","optionalExtnSuffix","explicitExtLabels","ambiguousExtLabels","ambiguousSeparator","possibleSeparatorsNumberExtLabelNoComma","autoDiallingAndExtLabelsFound","rfcExtn","explicitExtn","ambiguousExtn","americanStyleExtnWithSuffix","autoDiallingExtn","onlyCommasExtn","MIN_LENGTH_PHONE_NUMBER_PATTERN","VALID_PHONE_NUMBER","VALID_PHONE_NUMBER_START_REG_EXP","VALID_PHONE_NUMBER_WITH_EXTENSION","VALID_PHONE_NUMBER_PATTERN","isViablePhoneNumber","number","isViablePhoneNumberStart","EXTN_PATTERN","extractExtension","start","numberWithoutExtension","matches","_createForOfIteratorHelperLoose","allowArrayLike","it","_unsupportedIterableToArray","minLen","_arrayLikeToArray","n","arr","len","arr2","DIGITS","parseDigit","character","parseDigits","string","_iterator","_step","digit","parseIncompletePhoneNumber","parsePhoneNumberCharacter","prevParsedCharacters","mergeArrays","merged","element","checkNumberLength","nationalNumber","checkNumberLengthForType","type_info","possible_lengths","mobile_type","actual_length","minimum_length","isPossiblePhoneNumber","input","options","isPossibleNumber","matchesEntirely","text","regular_expression","NON_FIXED_LINE_PHONE_TYPES","getNumberType","isNumberTypeEqualTo","isValidNumber","getPossibleCountriesForNumber","_metadata","possibleCountries","couldNationalNumberBelongToCountry","applyInternationalSeparatorStyle","formattedNumber","FIRST_GROUP_PATTERN","formatNationalNumberUsingFormat","useInternationalFormat","withNationalPrefix","SINGLE_IDD_PREFIX_REG_EXP","getIddPrefix","countryMetadata","formatRFC3966","ext","ownKeys","object","enumerableOnly","keys","symbols","sym","_objectSpread","_defineProperty","value","DEFAULT_OPTIONS","extension","formatNumber","countryCallingCode","formatNationalNumber","addExtension","formatIDD","carrierCode","formatAs","chooseFormatForNumber","availableFormats","nationalNnumber","lastLeadingDigitsPattern","formatExtension","fromCountry","fromCountryCallingCode","iddPrefix","PhoneNumber","countryOrCountryCallingCode","_getCountryAndCountry","getCountryAndCountryCallingCode","phoneNumber","_format","isCountryCode","metadataJson","CAPTURING_DIGIT_PATTERN","stripIddPrefix","IDDPrefixPattern","matchedGroups","extractNationalNumberFromPossiblyIncompleteNumber","prefixPattern","prefixMatch","capturedGroupsCount","hasCapturedGroups","prefixBeforeNationalNumber","nationalPrefix","possiblePositionOfTheFirstCapturedGroup","possibleNationalPrefix","extractNationalNumber","_extractNationalNumbe","shouldHaveExtractedNationalPrefix","isPossibleIncompleteNationalNumber","nationalNumberBefore","nationalNumberAfter","extractCountryCallingCodeFromInternationalNumberWithoutPlusSign","possibleShorterNumber","possibleShorterNationalNumber","_extractNationalNumbe2","extractCountryCallingCode","isNumberWithIddPrefix","numberWithoutIDD","_extractCountryCallin","shorterNumber","_countryCallingCode","getCountryByNationalNumber","nationalPhoneNumber","countries","defaultCountry","matchingCountries","USE_NON_GEOGRAPHIC_COUNTRY_CODE","getCountryByCallingCode","PLUS_SIGN","RFC3966_VISUAL_SEPARATOR_","RFC3966_PHONE_DIGIT_","RFC3966_GLOBAL_NUMBER_DIGITS_","RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_","ALPHANUM_","RFC3966_DOMAINLABEL_","VALID_ALPHA_","RFC3966_TOPLABEL_","RFC3966_DOMAINNAME_","RFC3966_DOMAINNAME_PATTERN_","RFC3966_PREFIX_","RFC3966_PHONE_CONTEXT_","RFC3966_ISDN_SUBADDRESS_","extractPhoneContext","numberToExtractFrom","indexOfPhoneContext","phoneContextStart","phoneContextEnd","isPhoneContextValid","phoneContext","extractFormattedPhoneNumberFromPossibleRfc3966NumberUri","numberToParse","extractFormattedPhoneNumber","phoneNumberString","indexOfRfc3966Prefix","indexOfNationalNumber","indexOfIsdn","MAX_INPUT_STRING_LENGTH","PHONE_NUMBER_START_PATTERN","AFTER_PHONE_NUMBER_END_PATTERN","parse","_parseInput","parseInput","formattedPhoneNumber","error","_parsePhoneNumber","parsePhoneNumber","countryCallingCodeSource","valid","_extractFormattedPhoneNumber","extract","throwOnError","startsAt","v2","withExtensionStripped","defaultCallingCode","exactCountry","parsePhoneNumberWithError","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_i","_arr","_n","_d","_s","_e","err","normalizeArguments","_Array$prototype$slic","_Array$prototype$slic2","arg_1","arg_2","arg_3","arg_4","isObject","_normalizeArguments","parsePhoneNumber_","Node","next","prev","LRUCache","limit","node","RegExpCache","size","pattern","regExp","lower","upper","trimAfterFirstMatch","regexp","index","_pZ","pZ","PZ","_pN","_pNd","pNd","_pL","pL","pL_regexp","_pSc","pSc","pSc_regexp","_pMn","pMn","pMn_regexp","_InBasic_Latin","_InLatin_1_Supplement","_InLatin_Extended_A","_InLatin_Extended_Additional","_InLatin_Extended_B","_InCombining_Diacritical_Marks","latinLetterRegexp","isLatinLetter","letter","isInvalidPunctuationSymbol","matchPhoneNumberStringAgainstPhoneNumber","phoneNumberStringContainsCallingCode","parsedPhoneNumber","Leniency","_ref2","candidate","containsOnlyValidXChars","_ref3","containsMoreThanOneSlashInNationalNumber","isNationalPrefixPresentIfRequired","checkNumberGroupingIsValid","_ref4","charAtIndex","charAtNextIndex","_ref5","firstSlashInBodyIndex","secondSlashInBodyIndex","candidateHasCountryCode","checkGroups","regExpCache","SECOND_NUMBER_START_PATTERN","parsePreCandidate","SLASH_SEPARATED_DATES","TIME_STAMPS","TIME_STAMPS_SUFFIX_LEADING","isValidPreCandidate","offset","followingText","OPENING_PARENS","CLOSING_PARENS","NON_PARENS","LEAD_CLASS","LEAD_CLASS_LEADING","BRACKET_PAIR_LIMIT","MATCHING_BRACKETS_ENTIRE","PUB_PAGES","isValidCandidate","leniency","previousChar","lastCharIndex","nextChar","EXTN_PATTERNS_FOR_MATCHING","INNER_MATCHES","leadLimit","punctuationLimit","digitBlockLimit","blockLimit","punctuation","digitSequence","PATTERN","UNWANTED_END_CHAR_PATTERN","MAX_SAFE_INTEGER","PhoneNumberMatcher","match","substring","innerMatchPattern","isFirstMatch","candidateMatch","innerMatchRegExp","_candidate","_match","candidateIndexGuess","findPhoneNumbersInText","matcher","results","_findPhoneNumbersInText","NOTHING","DRAFTABLE","DRAFT_STATE","die","getPrototypeOf","isDraft","isDraftable","isPlainObject","_a","isMap","isSet","objectCtorString","proto","Ctor","each","iter","getArchtype","entry","thing","state","has","prop","set","propOrOldValue","t","is","x","y","latest","shallowCopy","base","strict","descriptors","desc","freeze","deep","isFrozen","dontMutateFrozenCollections","_key","plugins","getPlugin","pluginKey","plugin","currentScope","getCurrentScope","createScope","parent_","immer_","usePatchesInScope","scope","patchListener","revokeScope","leaveScope","revokeDraft","enterScope","immer2","draft","processResult","baseDraft","finalize","maybeFreeze","rootScope","path","childValue","finalizeProperty","resultEach","isSet2","parentState","targetObject","rootPath","targetIsSet","res","createProxyProxy","parent","isArray","traps","objectTraps","arrayTraps","revoke","proxy","readPropFromProto","peek","prepareCopy","createProxy","getDescriptorFromProto","current2","currentState","markChanged","owner","Immer2","config","recipe","defaultBase","base2","hasError","ip","patches","inversePatches","current","patch","applyPatchesImpl","currentImpl","copy","immer","produce","m","A","c","h","e","l","s","d","g","S","U","u","r","C","f","q","v","M","N","w","B","K","T","k","E","G","I","R","P","L","z","O","PhoneInput","name","placeholder","disabled","required","preferredCountries","regions","className","withCountryMeta","rest","setFieldValue","useFormikContext","jsx","PhoneNrInput","data","PhoneInput$1","WithLabel"],"mappings":"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,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53]}